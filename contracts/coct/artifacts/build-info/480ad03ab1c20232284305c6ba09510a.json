{
	"id": "480ad03ab1c20232284305c6ba09510a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/coct/coctToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n//不公布合约UNLICENSED\r\n\r\n//导入ERC20库\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n//继承ERC20合约\r\ncontract CoctToken is ERC20 {\r\n    //owner地址\r\n    address public owner;\r\n\r\n    //mint事件\r\n    event mintEvent(address _toAddr, uint256 _num);\r\n\r\n    //构造函数\r\n    constructor(string memory _name, string memory _symbol, address _account, uint256 _num)ERC20(_name,_symbol){\r\n        owner = msg.sender;\r\n        _mint(_account, _num * 10 ** decimals());\r\n        //发币事件\r\n        emit mintEvent(_account, _num);\r\n    }\r\n\r\n    //检查是否owner\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"not owner\");\r\n        _;\r\n    }\r\n\r\n    //检查数量不能太少\r\n    modifier numCheck(uint256 _num){\r\n        require(_num >= 1, \"The quantity cannot be too small.\");\r\n        _;\r\n    }\r\n\r\n    //发币\r\n    function mint(address _toAddr, uint256 _num) public onlyOwner numCheck(_num) {\r\n        //开始发币\r\n        _mint(_toAddr, _num * 10 ** decimals());        \r\n        //发币事件\r\n        emit mintEvent(_toAddr, _num);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/coct/coctToken.sol": {
				"CoctToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_toAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "mintEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_toAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/coct/coctToken.sol\":190:1165  contract CoctToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/coct/coctToken.sol\":366:626  constructor(string memory _name, string memory _symbol, address _account, uint256 _num)ERC20(_name,_symbol){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/coct/coctToken.sol\":459:464  _name */\n  dup4\n    /* \"contracts/coct/coctToken.sol\":465:472  _symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/coct/coctToken.sol\":492:502  msg.sender */\n  caller\n    /* \"contracts/coct/coctToken.sol\":484:489  owner */\n  0x05\n  0x00\n    /* \"contracts/coct/coctToken.sol\":484:502  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/coct/coctToken.sol\":513:553  _mint(_account, _num * 10 ** decimals()) */\n  tag_11\n    /* \"contracts/coct/coctToken.sol\":519:527  _account */\n  dup3\n    /* \"contracts/coct/coctToken.sol\":542:552  decimals() */\n  tag_12\n    /* \"contracts/coct/coctToken.sol\":542:550  decimals */\n  shl(0x20, tag_13)\n    /* \"contracts/coct/coctToken.sol\":542:552  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/coct/coctToken.sol\":536:538  10 */\n  0x0a\n    /* \"contracts/coct/coctToken.sol\":536:552  10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/coct/coctToken.sol\":529:533  _num */\n  dup4\n    /* \"contracts/coct/coctToken.sol\":529:552  _num * 10 ** decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"contracts/coct/coctToken.sol\":513:518  _mint */\n  shl(0x20, tag_18)\n    /* \"contracts/coct/coctToken.sol\":513:553  _mint(_account, _num * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/coct/coctToken.sol\":593:618  mintEvent(_account, _num) */\n  0x45704679a40d4b2ffe28aa7324f021775faaca4d40917fef2cdf38e53fd90a24\n    /* \"contracts/coct/coctToken.sol\":603:611  _account */\n  dup3\n    /* \"contracts/coct/coctToken.sol\":613:617  _num */\n  dup3\n    /* \"contracts/coct/coctToken.sol\":593:618  mintEvent(_account, _num) */\n  mload(0x40)\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/coct/coctToken.sol\":366:626  constructor(string memory _name, string memory _symbol, address _account, uint256 _num)ERC20(_name,_symbol){... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/coct/coctToken.sol\":190:1165  contract CoctToken is ERC20 {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_41:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_43:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_44:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_45:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_46:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_47:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_48:\n    /* \"#utility.yul\":957:984   */\n  tag_95\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_46\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_97\n  tag_47\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1030:1118   */\ntag_96:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_49:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_99\n  tag_41\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_100\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_48\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_50:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_103\n  tag_47\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1434:1490   */\ntag_102:\n    /* \"#utility.yul\":1508:1537   */\n  tag_104\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_46\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_51:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_52:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_107\n    /* \"#utility.yul\":1885:1934   */\n  tag_108\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_50\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1869:1935   */\n  tag_49\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_110\n  tag_45\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2010:2122   */\ntag_109:\n    /* \"#utility.yul\":2131:2183   */\n  tag_111\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_51\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_53:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_114\n  tag_44\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2292:2414   */\ntag_113:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_115\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_52\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_54:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_55:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_118\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_54\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_56:\n    /* \"#utility.yul\":2877:2901   */\n  tag_120\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_55\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_121\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  dup1\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_121:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_57:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_123\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_56\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3158   */\ntag_58:\n    /* \"#utility.yul\":3118:3125   */\n  0x00\n    /* \"#utility.yul\":3147:3152   */\n  dup2\n    /* \"#utility.yul\":3136:3152   */\n  swap1\n  pop\n    /* \"#utility.yul\":3081:3158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3164:3286   */\ntag_59:\n    /* \"#utility.yul\":3237:3261   */\n  tag_126\n    /* \"#utility.yul\":3255:3260   */\n  dup2\n    /* \"#utility.yul\":3237:3261   */\n  tag_58\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3230:3235   */\n  dup2\n    /* \"#utility.yul\":3227:3262   */\n  eq\n    /* \"#utility.yul\":3217:3280   */\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3217:3280   */\ntag_127:\n    /* \"#utility.yul\":3164:3286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3292:3435   */\ntag_60:\n    /* \"#utility.yul\":3349:3354   */\n  0x00\n    /* \"#utility.yul\":3380:3386   */\n  dup2\n    /* \"#utility.yul\":3374:3387   */\n  mload\n    /* \"#utility.yul\":3365:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3429   */\n  tag_129\n    /* \"#utility.yul\":3423:3428   */\n  dup2\n    /* \"#utility.yul\":3396:3429   */\n  tag_59\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3292:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:4607   */\ntag_3:\n    /* \"#utility.yul\":3558:3564   */\n  0x00\n    /* \"#utility.yul\":3566:3572   */\n  dup1\n    /* \"#utility.yul\":3574:3580   */\n  0x00\n    /* \"#utility.yul\":3582:3588   */\n  dup1\n    /* \"#utility.yul\":3631:3634   */\n  0x80\n    /* \"#utility.yul\":3619:3628   */\n  dup6\n    /* \"#utility.yul\":3610:3617   */\n  dup8\n    /* \"#utility.yul\":3606:3629   */\n  sub\n    /* \"#utility.yul\":3602:3635   */\n  slt\n    /* \"#utility.yul\":3599:3719   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3638:3717   */\n  tag_132\n  tag_42\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3599:3719   */\ntag_131:\n    /* \"#utility.yul\":3779:3780   */\n  0x00\n    /* \"#utility.yul\":3768:3777   */\n  dup6\n    /* \"#utility.yul\":3764:3781   */\n  add\n    /* \"#utility.yul\":3758:3782   */\n  mload\n    /* \"#utility.yul\":3809:3827   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3801:3807   */\n  dup2\n    /* \"#utility.yul\":3798:3828   */\n  gt\n    /* \"#utility.yul\":3795:3912   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":3831:3910   */\n  tag_134\n  tag_43\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3795:3912   */\ntag_133:\n    /* \"#utility.yul\":3936:4010   */\n  tag_135\n    /* \"#utility.yul\":4002:4009   */\n  dup8\n    /* \"#utility.yul\":3993:3999   */\n  dup3\n    /* \"#utility.yul\":3982:3991   */\n  dup9\n    /* \"#utility.yul\":3978:4000   */\n  add\n    /* \"#utility.yul\":3936:4010   */\n  tag_53\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3926:4010   */\n  swap5\n  pop\n    /* \"#utility.yul\":3729:4020   */\n  pop\n    /* \"#utility.yul\":4080:4082   */\n  0x20\n    /* \"#utility.yul\":4069:4078   */\n  dup6\n    /* \"#utility.yul\":4065:4083   */\n  add\n    /* \"#utility.yul\":4059:4084   */\n  mload\n    /* \"#utility.yul\":4111:4129   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4103:4109   */\n  dup2\n    /* \"#utility.yul\":4100:4130   */\n  gt\n    /* \"#utility.yul\":4097:4214   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4133:4212   */\n  tag_137\n  tag_43\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4097:4214   */\ntag_136:\n    /* \"#utility.yul\":4238:4312   */\n  tag_138\n    /* \"#utility.yul\":4304:4311   */\n  dup8\n    /* \"#utility.yul\":4295:4301   */\n  dup3\n    /* \"#utility.yul\":4284:4293   */\n  dup9\n    /* \"#utility.yul\":4280:4302   */\n  add\n    /* \"#utility.yul\":4238:4312   */\n  tag_53\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4228:4312   */\n  swap4\n  pop\n    /* \"#utility.yul\":4030:4322   */\n  pop\n    /* \"#utility.yul\":4361:4363   */\n  0x40\n    /* \"#utility.yul\":4387:4451   */\n  tag_139\n    /* \"#utility.yul\":4443:4450   */\n  dup8\n    /* \"#utility.yul\":4434:4440   */\n  dup3\n    /* \"#utility.yul\":4423:4432   */\n  dup9\n    /* \"#utility.yul\":4419:4441   */\n  add\n    /* \"#utility.yul\":4387:4451   */\n  tag_57\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4377:4451   */\n  swap3\n  pop\n    /* \"#utility.yul\":4332:4461   */\n  pop\n    /* \"#utility.yul\":4500:4502   */\n  0x60\n    /* \"#utility.yul\":4526:4590   */\n  tag_140\n    /* \"#utility.yul\":4582:4589   */\n  dup8\n    /* \"#utility.yul\":4573:4579   */\n  dup3\n    /* \"#utility.yul\":4562:4571   */\n  dup9\n    /* \"#utility.yul\":4558:4580   */\n  add\n    /* \"#utility.yul\":4526:4590   */\n  tag_60\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4516:4590   */\n  swap2\n  pop\n    /* \"#utility.yul\":4471:4600   */\n  pop\n    /* \"#utility.yul\":3441:4607   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4613:4712   */\ntag_61:\n    /* \"#utility.yul\":4665:4671   */\n  0x00\n    /* \"#utility.yul\":4699:4704   */\n  dup2\n    /* \"#utility.yul\":4693:4705   */\n  mload\n    /* \"#utility.yul\":4683:4705   */\n  swap1\n  pop\n    /* \"#utility.yul\":4613:4712   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4718:4898   */\ntag_62:\n    /* \"#utility.yul\":4766:4843   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4763:4764   */\n  0x00\n    /* \"#utility.yul\":4756:4844   */\n  mstore\n    /* \"#utility.yul\":4863:4867   */\n  0x22\n    /* \"#utility.yul\":4860:4861   */\n  0x04\n    /* \"#utility.yul\":4853:4868   */\n  mstore\n    /* \"#utility.yul\":4887:4891   */\n  0x24\n    /* \"#utility.yul\":4884:4885   */\n  0x00\n    /* \"#utility.yul\":4877:4892   */\n  revert\n    /* \"#utility.yul\":4904:5224   */\ntag_63:\n    /* \"#utility.yul\":4948:4954   */\n  0x00\n    /* \"#utility.yul\":4985:4986   */\n  0x02\n    /* \"#utility.yul\":4979:4983   */\n  dup3\n    /* \"#utility.yul\":4975:4987   */\n  div\n    /* \"#utility.yul\":4965:4987   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5033   */\n  0x01\n    /* \"#utility.yul\":5026:5030   */\n  dup3\n    /* \"#utility.yul\":5022:5034   */\n  and\n    /* \"#utility.yul\":5053:5071   */\n  dup1\n    /* \"#utility.yul\":5043:5124   */\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5109:5113   */\n  0x7f\n    /* \"#utility.yul\":5101:5107   */\n  dup3\n    /* \"#utility.yul\":5097:5114   */\n  and\n    /* \"#utility.yul\":5087:5114   */\n  swap2\n  pop\n    /* \"#utility.yul\":5043:5124   */\ntag_144:\n    /* \"#utility.yul\":5171:5173   */\n  0x20\n    /* \"#utility.yul\":5163:5169   */\n  dup3\n    /* \"#utility.yul\":5160:5174   */\n  lt\n    /* \"#utility.yul\":5140:5158   */\n  dup2\n    /* \"#utility.yul\":5137:5175   */\n  sub\n    /* \"#utility.yul\":5134:5218   */\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5190:5208   */\n  tag_146\n  tag_62\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5134:5218   */\ntag_145:\n    /* \"#utility.yul\":4955:5224   */\n  pop\n    /* \"#utility.yul\":4904:5224   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5230:5371   */\ntag_64:\n    /* \"#utility.yul\":5279:5283   */\n  0x00\n    /* \"#utility.yul\":5302:5305   */\n  dup2\n    /* \"#utility.yul\":5294:5305   */\n  swap1\n  pop\n    /* \"#utility.yul\":5325:5328   */\n  dup2\n    /* \"#utility.yul\":5322:5323   */\n  0x00\n    /* \"#utility.yul\":5315:5329   */\n  mstore\n    /* \"#utility.yul\":5359:5363   */\n  0x20\n    /* \"#utility.yul\":5356:5357   */\n  0x00\n    /* \"#utility.yul\":5346:5364   */\n  keccak256\n    /* \"#utility.yul\":5338:5364   */\n  swap1\n  pop\n    /* \"#utility.yul\":5230:5371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5377:5470   */\ntag_65:\n    /* \"#utility.yul\":5414:5420   */\n  0x00\n    /* \"#utility.yul\":5461:5463   */\n  0x20\n    /* \"#utility.yul\":5456:5458   */\n  0x1f\n    /* \"#utility.yul\":5449:5454   */\n  dup4\n    /* \"#utility.yul\":5445:5459   */\n  add\n    /* \"#utility.yul\":5441:5464   */\n  div\n    /* \"#utility.yul\":5431:5464   */\n  swap1\n  pop\n    /* \"#utility.yul\":5377:5470   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5476:5583   */\ntag_66:\n    /* \"#utility.yul\":5520:5528   */\n  0x00\n    /* \"#utility.yul\":5570:5575   */\n  dup3\n    /* \"#utility.yul\":5564:5568   */\n  dup3\n    /* \"#utility.yul\":5560:5576   */\n  shl\n    /* \"#utility.yul\":5539:5576   */\n  swap1\n  pop\n    /* \"#utility.yul\":5476:5583   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5589:5982   */\ntag_67:\n    /* \"#utility.yul\":5658:5664   */\n  0x00\n    /* \"#utility.yul\":5708:5709   */\n  0x08\n    /* \"#utility.yul\":5696:5706   */\n  dup4\n    /* \"#utility.yul\":5692:5710   */\n  mul\n    /* \"#utility.yul\":5731:5828   */\n  tag_151\n    /* \"#utility.yul\":5761:5827   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5750:5759   */\n  dup3\n    /* \"#utility.yul\":5731:5828   */\n  tag_66\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5849:5888   */\n  tag_152\n    /* \"#utility.yul\":5879:5887   */\n  dup7\n    /* \"#utility.yul\":5868:5877   */\n  dup4\n    /* \"#utility.yul\":5849:5888   */\n  tag_66\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5837:5888   */\n  swap6\n  pop\n    /* \"#utility.yul\":5921:5925   */\n  dup1\n    /* \"#utility.yul\":5917:5926   */\n  not\n    /* \"#utility.yul\":5910:5915   */\n  dup5\n    /* \"#utility.yul\":5906:5927   */\n  and\n    /* \"#utility.yul\":5897:5927   */\n  swap4\n  pop\n    /* \"#utility.yul\":5970:5974   */\n  dup1\n    /* \"#utility.yul\":5960:5968   */\n  dup7\n    /* \"#utility.yul\":5956:5975   */\n  and\n    /* \"#utility.yul\":5949:5954   */\n  dup5\n    /* \"#utility.yul\":5946:5976   */\n  or\n    /* \"#utility.yul\":5936:5976   */\n  swap3\n  pop\n    /* \"#utility.yul\":5665:5982   */\n  pop\n  pop\n    /* \"#utility.yul\":5589:5982   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5988:6048   */\ntag_68:\n    /* \"#utility.yul\":6016:6019   */\n  0x00\n    /* \"#utility.yul\":6037:6042   */\n  dup2\n    /* \"#utility.yul\":6030:6042   */\n  swap1\n  pop\n    /* \"#utility.yul\":5988:6048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6054:6196   */\ntag_69:\n    /* \"#utility.yul\":6104:6113   */\n  0x00\n    /* \"#utility.yul\":6137:6190   */\n  tag_155\n    /* \"#utility.yul\":6155:6189   */\n  tag_156\n    /* \"#utility.yul\":6164:6188   */\n  tag_157\n    /* \"#utility.yul\":6182:6187   */\n  dup5\n    /* \"#utility.yul\":6164:6188   */\n  tag_58\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6155:6189   */\n  tag_68\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6137:6190   */\n  tag_58\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6124:6190   */\n  swap1\n  pop\n    /* \"#utility.yul\":6054:6196   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6277   */\ntag_70:\n    /* \"#utility.yul\":6245:6248   */\n  0x00\n    /* \"#utility.yul\":6266:6271   */\n  dup2\n    /* \"#utility.yul\":6259:6271   */\n  swap1\n  pop\n    /* \"#utility.yul\":6202:6277   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6283:6552   */\ntag_71:\n    /* \"#utility.yul\":6393:6432   */\n  tag_160\n    /* \"#utility.yul\":6424:6431   */\n  dup4\n    /* \"#utility.yul\":6393:6432   */\n  tag_69\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6454:6545   */\n  tag_161\n    /* \"#utility.yul\":6503:6544   */\n  tag_162\n    /* \"#utility.yul\":6527:6543   */\n  dup3\n    /* \"#utility.yul\":6503:6544   */\n  tag_70\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6495:6501   */\n  dup5\n    /* \"#utility.yul\":6488:6492   */\n  dup5\n    /* \"#utility.yul\":6482:6493   */\n  sload\n    /* \"#utility.yul\":6454:6545   */\n  tag_67\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6448:6452   */\n  dup3\n    /* \"#utility.yul\":6441:6546   */\n  sstore\n    /* \"#utility.yul\":6359:6552   */\n  pop\n    /* \"#utility.yul\":6283:6552   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6558:6631   */\ntag_72:\n    /* \"#utility.yul\":6603:6606   */\n  0x00\n    /* \"#utility.yul\":6558:6631   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6637:6826   */\ntag_73:\n    /* \"#utility.yul\":6714:6746   */\n  tag_165\n  tag_72\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6755:6820   */\n  tag_166\n    /* \"#utility.yul\":6813:6819   */\n  dup2\n    /* \"#utility.yul\":6805:6811   */\n  dup5\n    /* \"#utility.yul\":6799:6803   */\n  dup5\n    /* \"#utility.yul\":6755:6820   */\n  tag_71\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6690:6826   */\n  pop\n    /* \"#utility.yul\":6637:6826   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6832:7018   */\ntag_74:\n    /* \"#utility.yul\":6892:7012   */\ntag_168:\n    /* \"#utility.yul\":6909:6912   */\n  dup2\n    /* \"#utility.yul\":6902:6907   */\n  dup2\n    /* \"#utility.yul\":6899:6913   */\n  lt\n    /* \"#utility.yul\":6892:7012   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":6963:7002   */\n  tag_171\n    /* \"#utility.yul\":7000:7001   */\n  0x00\n    /* \"#utility.yul\":6993:6998   */\n  dup3\n    /* \"#utility.yul\":6963:7002   */\n  tag_73\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6936:6937   */\n  0x01\n    /* \"#utility.yul\":6929:6934   */\n  dup2\n    /* \"#utility.yul\":6925:6938   */\n  add\n    /* \"#utility.yul\":6916:6938   */\n  swap1\n  pop\n    /* \"#utility.yul\":6892:7012   */\n  jump(tag_168)\ntag_170:\n    /* \"#utility.yul\":6832:7018   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7024:7567   */\ntag_75:\n    /* \"#utility.yul\":7125:7127   */\n  0x1f\n    /* \"#utility.yul\":7120:7123   */\n  dup3\n    /* \"#utility.yul\":7117:7128   */\n  gt\n    /* \"#utility.yul\":7114:7560   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":7159:7197   */\n  tag_174\n    /* \"#utility.yul\":7191:7196   */\n  dup2\n    /* \"#utility.yul\":7159:7197   */\n  tag_64\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7243:7272   */\n  tag_175\n    /* \"#utility.yul\":7261:7271   */\n  dup5\n    /* \"#utility.yul\":7243:7272   */\n  tag_65\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7233:7241   */\n  dup2\n    /* \"#utility.yul\":7229:7273   */\n  add\n    /* \"#utility.yul\":7426:7428   */\n  0x20\n    /* \"#utility.yul\":7414:7424   */\n  dup6\n    /* \"#utility.yul\":7411:7429   */\n  lt\n    /* \"#utility.yul\":7408:7457   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":7447:7455   */\n  dup2\n    /* \"#utility.yul\":7432:7455   */\n  swap1\n  pop\n    /* \"#utility.yul\":7408:7457   */\ntag_176:\n    /* \"#utility.yul\":7470:7550   */\n  tag_177\n    /* \"#utility.yul\":7526:7548   */\n  tag_178\n    /* \"#utility.yul\":7544:7547   */\n  dup6\n    /* \"#utility.yul\":7526:7548   */\n  tag_65\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7516:7524   */\n  dup4\n    /* \"#utility.yul\":7512:7549   */\n  add\n    /* \"#utility.yul\":7499:7510   */\n  dup3\n    /* \"#utility.yul\":7470:7550   */\n  tag_74\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7129:7560   */\n  pop\n  pop\n    /* \"#utility.yul\":7114:7560   */\ntag_173:\n    /* \"#utility.yul\":7024:7567   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7573:7690   */\ntag_76:\n    /* \"#utility.yul\":7627:7635   */\n  0x00\n    /* \"#utility.yul\":7677:7682   */\n  dup3\n    /* \"#utility.yul\":7671:7675   */\n  dup3\n    /* \"#utility.yul\":7667:7683   */\n  shr\n    /* \"#utility.yul\":7646:7683   */\n  swap1\n  pop\n    /* \"#utility.yul\":7573:7690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7696:7865   */\ntag_77:\n    /* \"#utility.yul\":7740:7746   */\n  0x00\n    /* \"#utility.yul\":7773:7824   */\n  tag_181\n    /* \"#utility.yul\":7821:7822   */\n  0x00\n    /* \"#utility.yul\":7817:7823   */\n  not\n    /* \"#utility.yul\":7809:7814   */\n  dup5\n    /* \"#utility.yul\":7806:7807   */\n  0x08\n    /* \"#utility.yul\":7802:7815   */\n  mul\n    /* \"#utility.yul\":7773:7824   */\n  tag_76\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7769:7825   */\n  not\n    /* \"#utility.yul\":7854:7858   */\n  dup1\n    /* \"#utility.yul\":7848:7852   */\n  dup4\n    /* \"#utility.yul\":7844:7859   */\n  and\n    /* \"#utility.yul\":7834:7859   */\n  swap2\n  pop\n    /* \"#utility.yul\":7747:7865   */\n  pop\n    /* \"#utility.yul\":7696:7865   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7870:8165   */\ntag_78:\n    /* \"#utility.yul\":7946:7950   */\n  0x00\n    /* \"#utility.yul\":8092:8121   */\n  tag_183\n    /* \"#utility.yul\":8117:8120   */\n  dup4\n    /* \"#utility.yul\":8111:8115   */\n  dup4\n    /* \"#utility.yul\":8092:8121   */\n  tag_77\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8084:8121   */\n  swap2\n  pop\n    /* \"#utility.yul\":8154:8157   */\n  dup3\n    /* \"#utility.yul\":8151:8152   */\n  0x02\n    /* \"#utility.yul\":8147:8158   */\n  mul\n    /* \"#utility.yul\":8141:8145   */\n  dup3\n    /* \"#utility.yul\":8138:8159   */\n  or\n    /* \"#utility.yul\":8130:8159   */\n  swap1\n  pop\n    /* \"#utility.yul\":7870:8165   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8170:9565   */\ntag_8:\n    /* \"#utility.yul\":8287:8324   */\n  tag_185\n    /* \"#utility.yul\":8320:8323   */\n  dup3\n    /* \"#utility.yul\":8287:8324   */\n  tag_61\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8389:8407   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8381:8387   */\n  dup2\n    /* \"#utility.yul\":8378:8408   */\n  gt\n    /* \"#utility.yul\":8375:8431   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8411:8429   */\n  tag_187\n  tag_47\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8375:8431   */\ntag_186:\n    /* \"#utility.yul\":8455:8493   */\n  tag_188\n    /* \"#utility.yul\":8487:8491   */\n  dup3\n    /* \"#utility.yul\":8481:8492   */\n  sload\n    /* \"#utility.yul\":8455:8493   */\n  tag_63\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8540:8607   */\n  tag_189\n    /* \"#utility.yul\":8600:8606   */\n  dup3\n    /* \"#utility.yul\":8592:8598   */\n  dup3\n    /* \"#utility.yul\":8586:8590   */\n  dup6\n    /* \"#utility.yul\":8540:8607   */\n  tag_75\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8634:8635   */\n  0x00\n    /* \"#utility.yul\":8658:8662   */\n  0x20\n    /* \"#utility.yul\":8645:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8690:8692   */\n  0x1f\n    /* \"#utility.yul\":8682:8688   */\n  dup4\n    /* \"#utility.yul\":8679:8693   */\n  gt\n    /* \"#utility.yul\":8707:8708   */\n  0x01\n    /* \"#utility.yul\":8702:9320   */\n  dup2\n  eq\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9364:9365   */\n  0x00\n    /* \"#utility.yul\":9381:9387   */\n  dup5\n    /* \"#utility.yul\":9378:9455   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":9430:9439   */\n  dup3\n    /* \"#utility.yul\":9425:9428   */\n  dup8\n    /* \"#utility.yul\":9421:9440   */\n  add\n    /* \"#utility.yul\":9415:9441   */\n  mload\n    /* \"#utility.yul\":9406:9441   */\n  swap1\n  pop\n    /* \"#utility.yul\":9378:9455   */\ntag_192:\n    /* \"#utility.yul\":9481:9548   */\n  tag_193\n    /* \"#utility.yul\":9541:9547   */\n  dup6\n    /* \"#utility.yul\":9534:9539   */\n  dup3\n    /* \"#utility.yul\":9481:9548   */\n  tag_78\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9475:9479   */\n  dup7\n    /* \"#utility.yul\":9468:9549   */\n  sstore\n    /* \"#utility.yul\":9337:9559   */\n  pop\n    /* \"#utility.yul\":8672:9559   */\n  jump(tag_190)\n    /* \"#utility.yul\":8702:9320   */\ntag_191:\n    /* \"#utility.yul\":8754:8758   */\n  0x1f\n    /* \"#utility.yul\":8750:8759   */\n  not\n    /* \"#utility.yul\":8742:8748   */\n  dup5\n    /* \"#utility.yul\":8738:8760   */\n  and\n    /* \"#utility.yul\":8788:8825   */\n  tag_194\n    /* \"#utility.yul\":8820:8824   */\n  dup7\n    /* \"#utility.yul\":8788:8825   */\n  tag_64\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8847:8848   */\n  0x00\n    /* \"#utility.yul\":8861:9069   */\ntag_195:\n    /* \"#utility.yul\":8875:8882   */\n  dup3\n    /* \"#utility.yul\":8872:8873   */\n  dup2\n    /* \"#utility.yul\":8869:8883   */\n  lt\n    /* \"#utility.yul\":8861:9069   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":8954:8963   */\n  dup5\n    /* \"#utility.yul\":8949:8952   */\n  dup10\n    /* \"#utility.yul\":8945:8964   */\n  add\n    /* \"#utility.yul\":8939:8965   */\n  mload\n    /* \"#utility.yul\":8931:8937   */\n  dup3\n    /* \"#utility.yul\":8924:8966   */\n  sstore\n    /* \"#utility.yul\":9005:9006   */\n  0x01\n    /* \"#utility.yul\":8997:9003   */\n  dup3\n    /* \"#utility.yul\":8993:9007   */\n  add\n    /* \"#utility.yul\":8983:9007   */\n  swap2\n  pop\n    /* \"#utility.yul\":9052:9054   */\n  0x20\n    /* \"#utility.yul\":9041:9050   */\n  dup6\n    /* \"#utility.yul\":9037:9055   */\n  add\n    /* \"#utility.yul\":9024:9055   */\n  swap5\n  pop\n    /* \"#utility.yul\":8898:8902   */\n  0x20\n    /* \"#utility.yul\":8895:8896   */\n  dup2\n    /* \"#utility.yul\":8891:8903   */\n  add\n    /* \"#utility.yul\":8886:8903   */\n  swap1\n  pop\n    /* \"#utility.yul\":8861:9069   */\n  jump(tag_195)\ntag_197:\n    /* \"#utility.yul\":9097:9103   */\n  dup7\n    /* \"#utility.yul\":9088:9095   */\n  dup4\n    /* \"#utility.yul\":9085:9104   */\n  lt\n    /* \"#utility.yul\":9082:9261   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":9155:9164   */\n  dup5\n    /* \"#utility.yul\":9150:9153   */\n  dup10\n    /* \"#utility.yul\":9146:9165   */\n  add\n    /* \"#utility.yul\":9140:9166   */\n  mload\n    /* \"#utility.yul\":9198:9246   */\n  tag_199\n    /* \"#utility.yul\":9240:9244   */\n  0x1f\n    /* \"#utility.yul\":9232:9238   */\n  dup10\n    /* \"#utility.yul\":9228:9245   */\n  and\n    /* \"#utility.yul\":9217:9226   */\n  dup3\n    /* \"#utility.yul\":9198:9246   */\n  tag_77\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9190:9196   */\n  dup4\n    /* \"#utility.yul\":9183:9247   */\n  sstore\n    /* \"#utility.yul\":9105:9261   */\n  pop\n    /* \"#utility.yul\":9082:9261   */\ntag_198:\n    /* \"#utility.yul\":9307:9308   */\n  0x01\n    /* \"#utility.yul\":9303:9304   */\n  0x02\n    /* \"#utility.yul\":9295:9301   */\n  dup9\n    /* \"#utility.yul\":9291:9305   */\n  mul\n    /* \"#utility.yul\":9287:9309   */\n  add\n    /* \"#utility.yul\":9281:9285   */\n  dup9\n    /* \"#utility.yul\":9274:9310   */\n  sstore\n    /* \"#utility.yul\":8709:9320   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8672:9559   */\ntag_190:\n  pop\n    /* \"#utility.yul\":8262:9565   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8170:9565   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9571:9751   */\ntag_79:\n    /* \"#utility.yul\":9619:9696   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9616:9617   */\n  0x00\n    /* \"#utility.yul\":9609:9697   */\n  mstore\n    /* \"#utility.yul\":9716:9720   */\n  0x11\n    /* \"#utility.yul\":9713:9714   */\n  0x04\n    /* \"#utility.yul\":9706:9721   */\n  mstore\n    /* \"#utility.yul\":9740:9744   */\n  0x24\n    /* \"#utility.yul\":9737:9738   */\n  0x00\n    /* \"#utility.yul\":9730:9745   */\n  revert\n    /* \"#utility.yul\":9757:9859   */\ntag_80:\n    /* \"#utility.yul\":9799:9807   */\n  0x00\n    /* \"#utility.yul\":9846:9851   */\n  dup2\n    /* \"#utility.yul\":9843:9844   */\n  0x01\n    /* \"#utility.yul\":9839:9852   */\n  shr\n    /* \"#utility.yul\":9818:9852   */\n  swap1\n  pop\n    /* \"#utility.yul\":9757:9859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9865:10713   */\ntag_81:\n    /* \"#utility.yul\":9926:9931   */\n  0x00\n    /* \"#utility.yul\":9933:9937   */\n  dup1\n    /* \"#utility.yul\":9957:9963   */\n  dup3\n    /* \"#utility.yul\":9948:9963   */\n  swap2\n  pop\n    /* \"#utility.yul\":9981:9986   */\n  dup4\n    /* \"#utility.yul\":9972:9986   */\n  swap1\n  pop\n    /* \"#utility.yul\":9995:10707   */\ntag_203:\n    /* \"#utility.yul\":10016:10017   */\n  0x01\n    /* \"#utility.yul\":10006:10014   */\n  dup6\n    /* \"#utility.yul\":10003:10018   */\n  gt\n    /* \"#utility.yul\":9995:10707   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10111:10115   */\n  dup1\n    /* \"#utility.yul\":10106:10109   */\n  dup7\n    /* \"#utility.yul\":10102:10116   */\n  div\n    /* \"#utility.yul\":10096:10100   */\n  dup2\n    /* \"#utility.yul\":10093:10117   */\n  gt\n    /* \"#utility.yul\":10090:10140   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":10120:10138   */\n  tag_207\n  tag_79\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10090:10140   */\ntag_206:\n    /* \"#utility.yul\":10170:10171   */\n  0x01\n    /* \"#utility.yul\":10160:10168   */\n  dup6\n    /* \"#utility.yul\":10156:10172   */\n  and\n    /* \"#utility.yul\":10153:10604   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":10585:10589   */\n  dup1\n    /* \"#utility.yul\":10578:10583   */\n  dup3\n    /* \"#utility.yul\":10574:10590   */\n  mul\n    /* \"#utility.yul\":10565:10590   */\n  swap2\n  pop\n    /* \"#utility.yul\":10153:10604   */\ntag_208:\n    /* \"#utility.yul\":10635:10639   */\n  dup1\n    /* \"#utility.yul\":10629:10633   */\n  dup2\n    /* \"#utility.yul\":10625:10640   */\n  mul\n    /* \"#utility.yul\":10617:10640   */\n  swap1\n  pop\n    /* \"#utility.yul\":10665:10697   */\n  tag_209\n    /* \"#utility.yul\":10688:10696   */\n  dup6\n    /* \"#utility.yul\":10665:10697   */\n  tag_80\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10653:10697   */\n  swap5\n  pop\n    /* \"#utility.yul\":9995:10707   */\n  jump(tag_203)\ntag_205:\n    /* \"#utility.yul\":9865:10713   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10719:11792   */\ntag_82:\n    /* \"#utility.yul\":10773:10778   */\n  0x00\n    /* \"#utility.yul\":10964:10972   */\n  dup3\n    /* \"#utility.yul\":10954:10994   */\n  tag_211\n  jumpi\n    /* \"#utility.yul\":10985:10986   */\n  0x01\n    /* \"#utility.yul\":10976:10986   */\n  swap1\n  pop\n    /* \"#utility.yul\":10987:10992   */\n  jump(tag_210)\n    /* \"#utility.yul\":10954:10994   */\ntag_211:\n    /* \"#utility.yul\":11013:11017   */\n  dup2\n    /* \"#utility.yul\":11003:11039   */\n  tag_212\n  jumpi\n    /* \"#utility.yul\":11030:11031   */\n  0x00\n    /* \"#utility.yul\":11021:11031   */\n  swap1\n  pop\n    /* \"#utility.yul\":11032:11037   */\n  jump(tag_210)\n    /* \"#utility.yul\":11003:11039   */\ntag_212:\n    /* \"#utility.yul\":11099:11103   */\n  dup2\n    /* \"#utility.yul\":11147:11148   */\n  0x01\n    /* \"#utility.yul\":11142:11169   */\n  dup2\n  eq\n  tag_214\n  jumpi\n    /* \"#utility.yul\":11183:11184   */\n  0x02\n    /* \"#utility.yul\":11178:11369   */\n  dup2\n  eq\n  tag_215\n  jumpi\n    /* \"#utility.yul\":11092:11369   */\n  jump(tag_213)\n    /* \"#utility.yul\":11142:11169   */\ntag_214:\n    /* \"#utility.yul\":11160:11161   */\n  0x01\n    /* \"#utility.yul\":11151:11161   */\n  swap2\n  pop\n    /* \"#utility.yul\":11162:11167   */\n  pop\n  jump(tag_210)\n    /* \"#utility.yul\":11178:11369   */\ntag_215:\n    /* \"#utility.yul\":11223:11226   */\n  0xff\n    /* \"#utility.yul\":11213:11221   */\n  dup5\n    /* \"#utility.yul\":11210:11227   */\n  gt\n    /* \"#utility.yul\":11207:11250   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":11230:11248   */\n  tag_217\n  tag_79\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11207:11250   */\ntag_216:\n    /* \"#utility.yul\":11279:11287   */\n  dup4\n    /* \"#utility.yul\":11276:11277   */\n  0x02\n    /* \"#utility.yul\":11272:11288   */\n  exp\n    /* \"#utility.yul\":11263:11288   */\n  swap2\n  pop\n    /* \"#utility.yul\":11314:11317   */\n  dup5\n    /* \"#utility.yul\":11307:11312   */\n  dup3\n    /* \"#utility.yul\":11304:11318   */\n  gt\n    /* \"#utility.yul\":11301:11341   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":11321:11339   */\n  tag_219\n  tag_79\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11301:11341   */\ntag_218:\n    /* \"#utility.yul\":11354:11359   */\n  pop\n  jump(tag_210)\n    /* \"#utility.yul\":11092:11369   */\ntag_213:\n  pop\n    /* \"#utility.yul\":11478:11480   */\n  0x20\n    /* \"#utility.yul\":11468:11476   */\n  dup4\n    /* \"#utility.yul\":11465:11481   */\n  lt\n    /* \"#utility.yul\":11459:11462   */\n  0x0133\n    /* \"#utility.yul\":11453:11457   */\n  dup4\n    /* \"#utility.yul\":11450:11463   */\n  lt\n    /* \"#utility.yul\":11446:11482   */\n  and\n    /* \"#utility.yul\":11428:11430   */\n  0x4e\n    /* \"#utility.yul\":11418:11426   */\n  dup5\n    /* \"#utility.yul\":11415:11431   */\n  lt\n    /* \"#utility.yul\":11410:11412   */\n  0x0b\n    /* \"#utility.yul\":11404:11408   */\n  dup5\n    /* \"#utility.yul\":11401:11413   */\n  lt\n    /* \"#utility.yul\":11397:11432   */\n  and\n    /* \"#utility.yul\":11381:11492   */\n  or\n    /* \"#utility.yul\":11378:11624   */\n  iszero\n  tag_220\n  jumpi\n    /* \"#utility.yul\":11534:11542   */\n  dup3\n    /* \"#utility.yul\":11528:11532   */\n  dup3\n    /* \"#utility.yul\":11524:11543   */\n  exp\n    /* \"#utility.yul\":11515:11543   */\n  swap1\n  pop\n    /* \"#utility.yul\":11569:11572   */\n  dup4\n    /* \"#utility.yul\":11562:11567   */\n  dup2\n    /* \"#utility.yul\":11559:11573   */\n  gt\n    /* \"#utility.yul\":11556:11596   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":11576:11594   */\n  tag_222\n  tag_79\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":11556:11596   */\ntag_221:\n    /* \"#utility.yul\":11609:11614   */\n  jump(tag_210)\n    /* \"#utility.yul\":11378:11624   */\ntag_220:\n    /* \"#utility.yul\":11649:11691   */\n  tag_223\n    /* \"#utility.yul\":11687:11690   */\n  dup5\n    /* \"#utility.yul\":11677:11685   */\n  dup5\n    /* \"#utility.yul\":11671:11675   */\n  dup5\n    /* \"#utility.yul\":11668:11669   */\n  0x01\n    /* \"#utility.yul\":11649:11691   */\n  tag_81\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11634:11691   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11723:11727   */\n  dup2\n    /* \"#utility.yul\":11718:11721   */\n  dup5\n    /* \"#utility.yul\":11714:11728   */\n  div\n    /* \"#utility.yul\":11707:11712   */\n  dup2\n    /* \"#utility.yul\":11704:11729   */\n  gt\n    /* \"#utility.yul\":11701:11752   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":11732:11750   */\n  tag_225\n  tag_79\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11701:11752   */\ntag_224:\n    /* \"#utility.yul\":11781:11785   */\n  dup2\n    /* \"#utility.yul\":11774:11779   */\n  dup2\n    /* \"#utility.yul\":11770:11786   */\n  mul\n    /* \"#utility.yul\":11761:11786   */\n  swap1\n  pop\n    /* \"#utility.yul\":10719:11792   */\ntag_210:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11798:11884   */\ntag_83:\n    /* \"#utility.yul\":11833:11840   */\n  0x00\n    /* \"#utility.yul\":11873:11877   */\n  0xff\n    /* \"#utility.yul\":11866:11871   */\n  dup3\n    /* \"#utility.yul\":11862:11878   */\n  and\n    /* \"#utility.yul\":11851:11878   */\n  swap1\n  pop\n    /* \"#utility.yul\":11798:11884   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11890:12171   */\ntag_15:\n    /* \"#utility.yul\":11948:11953   */\n  0x00\n    /* \"#utility.yul\":11972:11995   */\n  tag_228\n    /* \"#utility.yul\":11990:11994   */\n  dup3\n    /* \"#utility.yul\":11972:11995   */\n  tag_58\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":11964:11995   */\n  swap2\n  pop\n    /* \"#utility.yul\":12016:12041   */\n  tag_229\n    /* \"#utility.yul\":12032:12040   */\n  dup4\n    /* \"#utility.yul\":12016:12041   */\n  tag_83\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":12004:12041   */\n  swap3\n  pop\n    /* \"#utility.yul\":12060:12164   */\n  tag_230\n    /* \"#utility.yul\":12097:12163   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12087:12095   */\n  dup5\n    /* \"#utility.yul\":12081:12085   */\n  dup5\n    /* \"#utility.yul\":12060:12164   */\n  tag_82\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":12051:12164   */\n  swap1\n  pop\n    /* \"#utility.yul\":11890:12171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12177:12587   */\ntag_17:\n    /* \"#utility.yul\":12217:12224   */\n  0x00\n    /* \"#utility.yul\":12240:12260   */\n  tag_232\n    /* \"#utility.yul\":12258:12259   */\n  dup3\n    /* \"#utility.yul\":12240:12260   */\n  tag_58\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":12235:12260   */\n  swap2\n  pop\n    /* \"#utility.yul\":12274:12294   */\n  tag_233\n    /* \"#utility.yul\":12292:12293   */\n  dup4\n    /* \"#utility.yul\":12274:12294   */\n  tag_58\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":12269:12294   */\n  swap3\n  pop\n    /* \"#utility.yul\":12329:12330   */\n  dup3\n    /* \"#utility.yul\":12326:12327   */\n  dup3\n    /* \"#utility.yul\":12322:12331   */\n  mul\n    /* \"#utility.yul\":12351:12381   */\n  tag_234\n    /* \"#utility.yul\":12369:12380   */\n  dup2\n    /* \"#utility.yul\":12351:12381   */\n  tag_58\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":12340:12381   */\n  swap2\n  pop\n    /* \"#utility.yul\":12530:12531   */\n  dup3\n    /* \"#utility.yul\":12521:12528   */\n  dup3\n    /* \"#utility.yul\":12517:12532   */\n  div\n    /* \"#utility.yul\":12514:12515   */\n  dup5\n    /* \"#utility.yul\":12511:12533   */\n  eq\n    /* \"#utility.yul\":12491:12492   */\n  dup4\n    /* \"#utility.yul\":12484:12493   */\n  iszero\n    /* \"#utility.yul\":12464:12547   */\n  or\n    /* \"#utility.yul\":12441:12580   */\n  tag_235\n  jumpi\n    /* \"#utility.yul\":12560:12578   */\n  tag_236\n  tag_79\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12441:12580   */\ntag_235:\n    /* \"#utility.yul\":12225:12587   */\n  pop\n    /* \"#utility.yul\":12177:12587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12593:12711   */\ntag_84:\n    /* \"#utility.yul\":12680:12704   */\n  tag_238\n    /* \"#utility.yul\":12698:12703   */\n  dup2\n    /* \"#utility.yul\":12680:12704   */\n  tag_55\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12675:12678   */\n  dup3\n    /* \"#utility.yul\":12668:12705   */\n  mstore\n    /* \"#utility.yul\":12593:12711   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12717:12835   */\ntag_85:\n    /* \"#utility.yul\":12804:12828   */\n  tag_240\n    /* \"#utility.yul\":12822:12827   */\n  dup2\n    /* \"#utility.yul\":12804:12828   */\n  tag_58\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12799:12802   */\n  dup3\n    /* \"#utility.yul\":12792:12829   */\n  mstore\n    /* \"#utility.yul\":12717:12835   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12841:13173   */\ntag_20:\n    /* \"#utility.yul\":12962:12966   */\n  0x00\n    /* \"#utility.yul\":13000:13002   */\n  0x40\n    /* \"#utility.yul\":12989:12998   */\n  dup3\n    /* \"#utility.yul\":12985:13003   */\n  add\n    /* \"#utility.yul\":12977:13003   */\n  swap1\n  pop\n    /* \"#utility.yul\":13013:13084   */\n  tag_242\n    /* \"#utility.yul\":13081:13082   */\n  0x00\n    /* \"#utility.yul\":13070:13079   */\n  dup4\n    /* \"#utility.yul\":13066:13083   */\n  add\n    /* \"#utility.yul\":13057:13063   */\n  dup6\n    /* \"#utility.yul\":13013:13084   */\n  tag_84\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":13094:13166   */\n  tag_243\n    /* \"#utility.yul\":13162:13164   */\n  0x20\n    /* \"#utility.yul\":13151:13160   */\n  dup4\n    /* \"#utility.yul\":13147:13165   */\n  add\n    /* \"#utility.yul\":13138:13144   */\n  dup5\n    /* \"#utility.yul\":13094:13166   */\n  tag_85\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":12841:13173   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13179:13401   */\ntag_26:\n    /* \"#utility.yul\":13272:13276   */\n  0x00\n    /* \"#utility.yul\":13310:13312   */\n  0x20\n    /* \"#utility.yul\":13299:13308   */\n  dup3\n    /* \"#utility.yul\":13295:13313   */\n  add\n    /* \"#utility.yul\":13287:13313   */\n  swap1\n  pop\n    /* \"#utility.yul\":13323:13394   */\n  tag_245\n    /* \"#utility.yul\":13391:13392   */\n  0x00\n    /* \"#utility.yul\":13380:13389   */\n  dup4\n    /* \"#utility.yul\":13376:13393   */\n  add\n    /* \"#utility.yul\":13367:13373   */\n  dup5\n    /* \"#utility.yul\":13323:13394   */\n  tag_84\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":13179:13401   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13407:13598   */\ntag_32:\n    /* \"#utility.yul\":13447:13450   */\n  0x00\n    /* \"#utility.yul\":13466:13486   */\n  tag_247\n    /* \"#utility.yul\":13484:13485   */\n  dup3\n    /* \"#utility.yul\":13466:13486   */\n  tag_58\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":13461:13486   */\n  swap2\n  pop\n    /* \"#utility.yul\":13500:13520   */\n  tag_248\n    /* \"#utility.yul\":13518:13519   */\n  dup4\n    /* \"#utility.yul\":13500:13520   */\n  tag_58\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":13495:13520   */\n  swap3\n  pop\n    /* \"#utility.yul\":13543:13544   */\n  dup3\n    /* \"#utility.yul\":13540:13541   */\n  dup3\n    /* \"#utility.yul\":13536:13545   */\n  add\n    /* \"#utility.yul\":13529:13545   */\n  swap1\n  pop\n    /* \"#utility.yul\":13564:13567   */\n  dup1\n    /* \"#utility.yul\":13561:13562   */\n  dup3\n    /* \"#utility.yul\":13558:13568   */\n  gt\n    /* \"#utility.yul\":13555:13591   */\n  iszero\n  tag_249\n  jumpi\n    /* \"#utility.yul\":13571:13589   */\n  tag_250\n  tag_79\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":13555:13591   */\ntag_249:\n    /* \"#utility.yul\":13407:13598   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13604:14046   */\ntag_36:\n    /* \"#utility.yul\":13753:13757   */\n  0x00\n    /* \"#utility.yul\":13791:13793   */\n  0x60\n    /* \"#utility.yul\":13780:13789   */\n  dup3\n    /* \"#utility.yul\":13776:13794   */\n  add\n    /* \"#utility.yul\":13768:13794   */\n  swap1\n  pop\n    /* \"#utility.yul\":13804:13875   */\n  tag_252\n    /* \"#utility.yul\":13872:13873   */\n  0x00\n    /* \"#utility.yul\":13861:13870   */\n  dup4\n    /* \"#utility.yul\":13857:13874   */\n  add\n    /* \"#utility.yul\":13848:13854   */\n  dup7\n    /* \"#utility.yul\":13804:13875   */\n  tag_84\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13885:13957   */\n  tag_253\n    /* \"#utility.yul\":13953:13955   */\n  0x20\n    /* \"#utility.yul\":13942:13951   */\n  dup4\n    /* \"#utility.yul\":13938:13956   */\n  add\n    /* \"#utility.yul\":13929:13935   */\n  dup6\n    /* \"#utility.yul\":13885:13957   */\n  tag_85\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":13967:14039   */\n  tag_254\n    /* \"#utility.yul\":14035:14037   */\n  0x40\n    /* \"#utility.yul\":14024:14033   */\n  dup4\n    /* \"#utility.yul\":14020:14038   */\n  add\n    /* \"#utility.yul\":14011:14017   */\n  dup5\n    /* \"#utility.yul\":13967:14039   */\n  tag_85\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":13604:14046   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14052:14274   */\ntag_40:\n    /* \"#utility.yul\":14145:14149   */\n  0x00\n    /* \"#utility.yul\":14183:14185   */\n  0x20\n    /* \"#utility.yul\":14172:14181   */\n  dup3\n    /* \"#utility.yul\":14168:14186   */\n  add\n    /* \"#utility.yul\":14160:14186   */\n  swap1\n  pop\n    /* \"#utility.yul\":14196:14267   */\n  tag_256\n    /* \"#utility.yul\":14264:14265   */\n  0x00\n    /* \"#utility.yul\":14253:14262   */\n  dup4\n    /* \"#utility.yul\":14249:14266   */\n  add\n    /* \"#utility.yul\":14240:14246   */\n  dup5\n    /* \"#utility.yul\":14196:14267   */\n  tag_85\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":14052:14274   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/coct/coctToken.sol\":190:1165  contract CoctToken is ERC20 {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/coct/coctToken.sol\":190:1165  contract CoctToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coct/coctToken.sol\":931:1162  function mint(address _toAddr, uint256 _num) public onlyOwner numCheck(_num) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coct/coctToken.sol\":244:264  address public owner */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/coct/coctToken.sol\":931:1162  function mint(address _toAddr, uint256 _num) public onlyOwner numCheck(_num) {... */\n    tag_40:\n        /* \"contracts/coct/coctToken.sol\":713:718  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/coct/coctToken.sol\":699:718  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/coct/coctToken.sol\":699:709  msg.sender */\n      caller\n        /* \"contracts/coct/coctToken.sol\":699:718  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/coct/coctToken.sol\":691:732  require(msg.sender == owner, \"not owner\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/coct/coctToken.sol\":1002:1006  _num */\n      dup1\n        /* \"contracts/coct/coctToken.sol\":850:851  1 */\n      0x01\n        /* \"contracts/coct/coctToken.sol\":842:846  _num */\n      dup2\n        /* \"contracts/coct/coctToken.sol\":842:851  _num >= 1 */\n      lt\n      iszero\n        /* \"contracts/coct/coctToken.sol\":834:889  require(_num >= 1, \"The quantity cannot be too small.\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/coct/coctToken.sol\":1043:1082  _mint(_toAddr, _num * 10 ** decimals()) */\n      tag_91\n        /* \"contracts/coct/coctToken.sol\":1049:1056  _toAddr */\n      dup4\n        /* \"contracts/coct/coctToken.sol\":1071:1081  decimals() */\n      tag_92\n        /* \"contracts/coct/coctToken.sol\":1071:1079  decimals */\n      tag_35\n        /* \"contracts/coct/coctToken.sol\":1071:1081  decimals() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/coct/coctToken.sol\":1065:1067  10 */\n      0x0a\n        /* \"contracts/coct/coctToken.sol\":1065:1081  10 ** decimals() */\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/coct/coctToken.sol\":1058:1062  _num */\n      dup5\n        /* \"contracts/coct/coctToken.sol\":1058:1081  _num * 10 ** decimals() */\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"contracts/coct/coctToken.sol\":1043:1048  _mint */\n      tag_97\n        /* \"contracts/coct/coctToken.sol\":1043:1082  _mint(_toAddr, _num * 10 ** decimals()) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/coct/coctToken.sol\":1130:1154  mintEvent(_toAddr, _num) */\n      0x45704679a40d4b2ffe28aa7324f021775faaca4d40917fef2cdf38e53fd90a24\n        /* \"contracts/coct/coctToken.sol\":1140:1147  _toAddr */\n      dup4\n        /* \"contracts/coct/coctToken.sol\":1149:1153  _num */\n      dup4\n        /* \"contracts/coct/coctToken.sol\":1130:1154  mintEvent(_toAddr, _num) */\n      mload(0x40)\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/coct/coctToken.sol\":743:744  _ */\n      pop\n        /* \"contracts/coct/coctToken.sol\":931:1162  function mint(address _toAddr, uint256 _num) public onlyOwner numCheck(_num) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/coct/coctToken.sol\":244:264  address public owner */\n    tag_47:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_64\n      jump\t// in\n    tag_102:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_64\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_144)\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_148)\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_150:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_151:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_152:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_153:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_154:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_186\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_150\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":711:782   */\n      tag_187\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_151\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_188\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_152\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":881:910   */\n      tag_189\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_153\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_18:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_191\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_154\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_156:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_158:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_159:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_197\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_158\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_160:\n        /* \"#utility.yul\":1876:1900   */\n      tag_199\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_159\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_200:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_161:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_202\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_160\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_162:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_163:\n        /* \"#utility.yul\":2232:2256   */\n      tag_205\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_162\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_206:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_164:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_208\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_163\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_21:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_211\n      tag_156\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2525:2644   */\n    tag_210:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_212\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_161\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_213\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_164\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_165:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_166:\n        /* \"#utility.yul\":3089:3110   */\n      tag_216\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_165\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_24:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_218\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_166\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_167:\n        /* \"#utility.yul\":3426:3450   */\n      tag_220\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_162\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_28:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_222\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_167\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_31:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_225\n      tag_156\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3801:3920   */\n    tag_224:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_226\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_161\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_227\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_161\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_228\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_164\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_168:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_169:\n        /* \"#utility.yul\":4491:4513   */\n      tag_231\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_168\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_37:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_233\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_169\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_43:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_236\n      tag_156\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4822:4941   */\n    tag_235:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_237\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_161\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_170:\n        /* \"#utility.yul\":5168:5192   */\n      tag_239\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_159\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_49:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_241\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_170\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_59:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_244\n      tag_156\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5526:5645   */\n    tag_243:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_245\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_161\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_246\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_161\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_171:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_64:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_249:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_251\n      tag_171\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6329:6413   */\n    tag_250:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6584   */\n    tag_172:\n        /* \"#utility.yul\":6565:6576   */\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6577   */\n      mstore\n        /* \"#utility.yul\":6425:6584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6590:6955   */\n    tag_173:\n        /* \"#utility.yul\":6732:6735   */\n      0x00\n        /* \"#utility.yul\":6753:6819   */\n      tag_254\n        /* \"#utility.yul\":6817:6818   */\n      0x09\n        /* \"#utility.yul\":6812:6815   */\n      dup4\n        /* \"#utility.yul\":6753:6819   */\n      tag_151\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6746:6819   */\n      swap2\n      pop\n        /* \"#utility.yul\":6828:6921   */\n      tag_255\n        /* \"#utility.yul\":6917:6920   */\n      dup3\n        /* \"#utility.yul\":6828:6921   */\n      tag_172\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6946:6948   */\n      0x20\n        /* \"#utility.yul\":6941:6944   */\n      dup3\n        /* \"#utility.yul\":6937:6949   */\n      add\n        /* \"#utility.yul\":6930:6949   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6961:7380   */\n    tag_85:\n        /* \"#utility.yul\":7127:7131   */\n      0x00\n        /* \"#utility.yul\":7165:7167   */\n      0x20\n        /* \"#utility.yul\":7154:7163   */\n      dup3\n        /* \"#utility.yul\":7150:7168   */\n      add\n        /* \"#utility.yul\":7142:7168   */\n      swap1\n      pop\n        /* \"#utility.yul\":7214:7223   */\n      dup2\n        /* \"#utility.yul\":7208:7212   */\n      dup2\n        /* \"#utility.yul\":7204:7224   */\n      sub\n        /* \"#utility.yul\":7200:7201   */\n      0x00\n        /* \"#utility.yul\":7189:7198   */\n      dup4\n        /* \"#utility.yul\":7185:7202   */\n      add\n        /* \"#utility.yul\":7178:7225   */\n      mstore\n        /* \"#utility.yul\":7242:7373   */\n      tag_257\n        /* \"#utility.yul\":7368:7372   */\n      dup2\n        /* \"#utility.yul\":7242:7373   */\n      tag_173\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7234:7373   */\n      swap1\n      pop\n        /* \"#utility.yul\":6961:7380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7386:7606   */\n    tag_174:\n        /* \"#utility.yul\":7526:7560   */\n      0x546865207175616e746974792063616e6e6f7420626520746f6f20736d616c6c\n        /* \"#utility.yul\":7522:7523   */\n      0x00\n        /* \"#utility.yul\":7514:7520   */\n      dup3\n        /* \"#utility.yul\":7510:7524   */\n      add\n        /* \"#utility.yul\":7503:7561   */\n      mstore\n        /* \"#utility.yul\":7595:7598   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7590:7592   */\n      0x20\n        /* \"#utility.yul\":7582:7588   */\n      dup3\n        /* \"#utility.yul\":7578:7593   */\n      add\n        /* \"#utility.yul\":7571:7599   */\n      mstore\n        /* \"#utility.yul\":7386:7606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7612:7978   */\n    tag_175:\n        /* \"#utility.yul\":7754:7757   */\n      0x00\n        /* \"#utility.yul\":7775:7842   */\n      tag_260\n        /* \"#utility.yul\":7839:7841   */\n      0x21\n        /* \"#utility.yul\":7834:7837   */\n      dup4\n        /* \"#utility.yul\":7775:7842   */\n      tag_151\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7768:7842   */\n      swap2\n      pop\n        /* \"#utility.yul\":7851:7944   */\n      tag_261\n        /* \"#utility.yul\":7940:7943   */\n      dup3\n        /* \"#utility.yul\":7851:7944   */\n      tag_174\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7969:7971   */\n      0x40\n        /* \"#utility.yul\":7964:7967   */\n      dup3\n        /* \"#utility.yul\":7960:7972   */\n      add\n        /* \"#utility.yul\":7953:7972   */\n      swap1\n      pop\n        /* \"#utility.yul\":7612:7978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7984:8403   */\n    tag_89:\n        /* \"#utility.yul\":8150:8154   */\n      0x00\n        /* \"#utility.yul\":8188:8190   */\n      0x20\n        /* \"#utility.yul\":8177:8186   */\n      dup3\n        /* \"#utility.yul\":8173:8191   */\n      add\n        /* \"#utility.yul\":8165:8191   */\n      swap1\n      pop\n        /* \"#utility.yul\":8237:8246   */\n      dup2\n        /* \"#utility.yul\":8231:8235   */\n      dup2\n        /* \"#utility.yul\":8227:8247   */\n      sub\n        /* \"#utility.yul\":8223:8224   */\n      0x00\n        /* \"#utility.yul\":8212:8221   */\n      dup4\n        /* \"#utility.yul\":8208:8225   */\n      add\n        /* \"#utility.yul\":8201:8248   */\n      mstore\n        /* \"#utility.yul\":8265:8396   */\n      tag_263\n        /* \"#utility.yul\":8391:8395   */\n      dup2\n        /* \"#utility.yul\":8265:8396   */\n      tag_175\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8257:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":7984:8403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8409:8589   */\n    tag_176:\n        /* \"#utility.yul\":8457:8534   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8454:8455   */\n      0x00\n        /* \"#utility.yul\":8447:8535   */\n      mstore\n        /* \"#utility.yul\":8554:8558   */\n      0x11\n        /* \"#utility.yul\":8551:8552   */\n      0x04\n        /* \"#utility.yul\":8544:8559   */\n      mstore\n        /* \"#utility.yul\":8578:8582   */\n      0x24\n        /* \"#utility.yul\":8575:8576   */\n      0x00\n        /* \"#utility.yul\":8568:8583   */\n      revert\n        /* \"#utility.yul\":8595:8697   */\n    tag_177:\n        /* \"#utility.yul\":8637:8645   */\n      0x00\n        /* \"#utility.yul\":8684:8689   */\n      dup2\n        /* \"#utility.yul\":8681:8682   */\n      0x01\n        /* \"#utility.yul\":8677:8690   */\n      shr\n        /* \"#utility.yul\":8656:8690   */\n      swap1\n      pop\n        /* \"#utility.yul\":8595:8697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8703:9551   */\n    tag_178:\n        /* \"#utility.yul\":8764:8769   */\n      0x00\n        /* \"#utility.yul\":8771:8775   */\n      dup1\n        /* \"#utility.yul\":8795:8801   */\n      dup3\n        /* \"#utility.yul\":8786:8801   */\n      swap2\n      pop\n        /* \"#utility.yul\":8819:8824   */\n      dup4\n        /* \"#utility.yul\":8810:8824   */\n      swap1\n      pop\n        /* \"#utility.yul\":8833:9545   */\n    tag_267:\n        /* \"#utility.yul\":8854:8855   */\n      0x01\n        /* \"#utility.yul\":8844:8852   */\n      dup6\n        /* \"#utility.yul\":8841:8856   */\n      gt\n        /* \"#utility.yul\":8833:9545   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":8949:8953   */\n      dup1\n        /* \"#utility.yul\":8944:8947   */\n      dup7\n        /* \"#utility.yul\":8940:8954   */\n      div\n        /* \"#utility.yul\":8934:8938   */\n      dup2\n        /* \"#utility.yul\":8931:8955   */\n      gt\n        /* \"#utility.yul\":8928:8978   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":8958:8976   */\n      tag_271\n      tag_176\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8928:8978   */\n    tag_270:\n        /* \"#utility.yul\":9008:9009   */\n      0x01\n        /* \"#utility.yul\":8998:9006   */\n      dup6\n        /* \"#utility.yul\":8994:9010   */\n      and\n        /* \"#utility.yul\":8991:9442   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":9423:9427   */\n      dup1\n        /* \"#utility.yul\":9416:9421   */\n      dup3\n        /* \"#utility.yul\":9412:9428   */\n      mul\n        /* \"#utility.yul\":9403:9428   */\n      swap2\n      pop\n        /* \"#utility.yul\":8991:9442   */\n    tag_272:\n        /* \"#utility.yul\":9473:9477   */\n      dup1\n        /* \"#utility.yul\":9467:9471   */\n      dup2\n        /* \"#utility.yul\":9463:9478   */\n      mul\n        /* \"#utility.yul\":9455:9478   */\n      swap1\n      pop\n        /* \"#utility.yul\":9503:9535   */\n      tag_273\n        /* \"#utility.yul\":9526:9534   */\n      dup6\n        /* \"#utility.yul\":9503:9535   */\n      tag_177\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9491:9535   */\n      swap5\n      pop\n        /* \"#utility.yul\":8833:9545   */\n      jump(tag_267)\n    tag_269:\n        /* \"#utility.yul\":8703:9551   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9557:10630   */\n    tag_179:\n        /* \"#utility.yul\":9611:9616   */\n      0x00\n        /* \"#utility.yul\":9802:9810   */\n      dup3\n        /* \"#utility.yul\":9792:9832   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":9823:9824   */\n      0x01\n        /* \"#utility.yul\":9814:9824   */\n      swap1\n      pop\n        /* \"#utility.yul\":9825:9830   */\n      jump(tag_274)\n        /* \"#utility.yul\":9792:9832   */\n    tag_275:\n        /* \"#utility.yul\":9851:9855   */\n      dup2\n        /* \"#utility.yul\":9841:9877   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":9868:9869   */\n      0x00\n        /* \"#utility.yul\":9859:9869   */\n      swap1\n      pop\n        /* \"#utility.yul\":9870:9875   */\n      jump(tag_274)\n        /* \"#utility.yul\":9841:9877   */\n    tag_276:\n        /* \"#utility.yul\":9937:9941   */\n      dup2\n        /* \"#utility.yul\":9985:9986   */\n      0x01\n        /* \"#utility.yul\":9980:10007   */\n      dup2\n      eq\n      tag_278\n      jumpi\n        /* \"#utility.yul\":10021:10022   */\n      0x02\n        /* \"#utility.yul\":10016:10207   */\n      dup2\n      eq\n      tag_279\n      jumpi\n        /* \"#utility.yul\":9930:10207   */\n      jump(tag_277)\n        /* \"#utility.yul\":9980:10007   */\n    tag_278:\n        /* \"#utility.yul\":9998:9999   */\n      0x01\n        /* \"#utility.yul\":9989:9999   */\n      swap2\n      pop\n        /* \"#utility.yul\":10000:10005   */\n      pop\n      jump(tag_274)\n        /* \"#utility.yul\":10016:10207   */\n    tag_279:\n        /* \"#utility.yul\":10061:10064   */\n      0xff\n        /* \"#utility.yul\":10051:10059   */\n      dup5\n        /* \"#utility.yul\":10048:10065   */\n      gt\n        /* \"#utility.yul\":10045:10088   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":10068:10086   */\n      tag_281\n      tag_176\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10045:10088   */\n    tag_280:\n        /* \"#utility.yul\":10117:10125   */\n      dup4\n        /* \"#utility.yul\":10114:10115   */\n      0x02\n        /* \"#utility.yul\":10110:10126   */\n      exp\n        /* \"#utility.yul\":10101:10126   */\n      swap2\n      pop\n        /* \"#utility.yul\":10152:10155   */\n      dup5\n        /* \"#utility.yul\":10145:10150   */\n      dup3\n        /* \"#utility.yul\":10142:10156   */\n      gt\n        /* \"#utility.yul\":10139:10179   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":10159:10177   */\n      tag_283\n      tag_176\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10139:10179   */\n    tag_282:\n        /* \"#utility.yul\":10192:10197   */\n      pop\n      jump(tag_274)\n        /* \"#utility.yul\":9930:10207   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":10316:10318   */\n      0x20\n        /* \"#utility.yul\":10306:10314   */\n      dup4\n        /* \"#utility.yul\":10303:10319   */\n      lt\n        /* \"#utility.yul\":10297:10300   */\n      0x0133\n        /* \"#utility.yul\":10291:10295   */\n      dup4\n        /* \"#utility.yul\":10288:10301   */\n      lt\n        /* \"#utility.yul\":10284:10320   */\n      and\n        /* \"#utility.yul\":10266:10268   */\n      0x4e\n        /* \"#utility.yul\":10256:10264   */\n      dup5\n        /* \"#utility.yul\":10253:10269   */\n      lt\n        /* \"#utility.yul\":10248:10250   */\n      0x0b\n        /* \"#utility.yul\":10242:10246   */\n      dup5\n        /* \"#utility.yul\":10239:10251   */\n      lt\n        /* \"#utility.yul\":10235:10270   */\n      and\n        /* \"#utility.yul\":10219:10330   */\n      or\n        /* \"#utility.yul\":10216:10462   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":10372:10380   */\n      dup3\n        /* \"#utility.yul\":10366:10370   */\n      dup3\n        /* \"#utility.yul\":10362:10381   */\n      exp\n        /* \"#utility.yul\":10353:10381   */\n      swap1\n      pop\n        /* \"#utility.yul\":10407:10410   */\n      dup4\n        /* \"#utility.yul\":10400:10405   */\n      dup2\n        /* \"#utility.yul\":10397:10411   */\n      gt\n        /* \"#utility.yul\":10394:10434   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":10414:10432   */\n      tag_286\n      tag_176\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":10394:10434   */\n    tag_285:\n        /* \"#utility.yul\":10447:10452   */\n      jump(tag_274)\n        /* \"#utility.yul\":10216:10462   */\n    tag_284:\n        /* \"#utility.yul\":10487:10529   */\n      tag_287\n        /* \"#utility.yul\":10525:10528   */\n      dup5\n        /* \"#utility.yul\":10515:10523   */\n      dup5\n        /* \"#utility.yul\":10509:10513   */\n      dup5\n        /* \"#utility.yul\":10506:10507   */\n      0x01\n        /* \"#utility.yul\":10487:10529   */\n      tag_178\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":10472:10529   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10561:10565   */\n      dup2\n        /* \"#utility.yul\":10556:10559   */\n      dup5\n        /* \"#utility.yul\":10552:10566   */\n      div\n        /* \"#utility.yul\":10545:10550   */\n      dup2\n        /* \"#utility.yul\":10542:10567   */\n      gt\n        /* \"#utility.yul\":10539:10590   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":10570:10588   */\n      tag_289\n      tag_176\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10539:10590   */\n    tag_288:\n        /* \"#utility.yul\":10619:10623   */\n      dup2\n        /* \"#utility.yul\":10612:10617   */\n      dup2\n        /* \"#utility.yul\":10608:10624   */\n      mul\n        /* \"#utility.yul\":10599:10624   */\n      swap1\n      pop\n        /* \"#utility.yul\":9557:10630   */\n    tag_274:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10636:10917   */\n    tag_94:\n        /* \"#utility.yul\":10694:10699   */\n      0x00\n        /* \"#utility.yul\":10718:10741   */\n      tag_291\n        /* \"#utility.yul\":10736:10740   */\n      dup3\n        /* \"#utility.yul\":10718:10741   */\n      tag_162\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10710:10741   */\n      swap2\n      pop\n        /* \"#utility.yul\":10762:10787   */\n      tag_292\n        /* \"#utility.yul\":10778:10786   */\n      dup4\n        /* \"#utility.yul\":10762:10787   */\n      tag_168\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10750:10787   */\n      swap3\n      pop\n        /* \"#utility.yul\":10806:10910   */\n      tag_293\n        /* \"#utility.yul\":10843:10909   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10833:10841   */\n      dup5\n        /* \"#utility.yul\":10827:10831   */\n      dup5\n        /* \"#utility.yul\":10806:10910   */\n      tag_179\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":10797:10910   */\n      swap1\n      pop\n        /* \"#utility.yul\":10636:10917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10923:11333   */\n    tag_96:\n        /* \"#utility.yul\":10963:10970   */\n      0x00\n        /* \"#utility.yul\":10986:11006   */\n      tag_295\n        /* \"#utility.yul\":11004:11005   */\n      dup3\n        /* \"#utility.yul\":10986:11006   */\n      tag_162\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10981:11006   */\n      swap2\n      pop\n        /* \"#utility.yul\":11020:11040   */\n      tag_296\n        /* \"#utility.yul\":11038:11039   */\n      dup4\n        /* \"#utility.yul\":11020:11040   */\n      tag_162\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11015:11040   */\n      swap3\n      pop\n        /* \"#utility.yul\":11075:11076   */\n      dup3\n        /* \"#utility.yul\":11072:11073   */\n      dup3\n        /* \"#utility.yul\":11068:11077   */\n      mul\n        /* \"#utility.yul\":11097:11127   */\n      tag_297\n        /* \"#utility.yul\":11115:11126   */\n      dup2\n        /* \"#utility.yul\":11097:11127   */\n      tag_162\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":11086:11127   */\n      swap2\n      pop\n        /* \"#utility.yul\":11276:11277   */\n      dup3\n        /* \"#utility.yul\":11267:11274   */\n      dup3\n        /* \"#utility.yul\":11263:11278   */\n      div\n        /* \"#utility.yul\":11260:11261   */\n      dup5\n        /* \"#utility.yul\":11257:11279   */\n      eq\n        /* \"#utility.yul\":11237:11238   */\n      dup4\n        /* \"#utility.yul\":11230:11239   */\n      iszero\n        /* \"#utility.yul\":11210:11293   */\n      or\n        /* \"#utility.yul\":11187:11326   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":11306:11324   */\n      tag_299\n      tag_176\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":11187:11326   */\n    tag_298:\n        /* \"#utility.yul\":10971:11333   */\n      pop\n        /* \"#utility.yul\":10923:11333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11339:11671   */\n    tag_99:\n        /* \"#utility.yul\":11460:11464   */\n      0x00\n        /* \"#utility.yul\":11498:11500   */\n      0x40\n        /* \"#utility.yul\":11487:11496   */\n      dup3\n        /* \"#utility.yul\":11483:11501   */\n      add\n        /* \"#utility.yul\":11475:11501   */\n      swap1\n      pop\n        /* \"#utility.yul\":11511:11582   */\n      tag_301\n        /* \"#utility.yul\":11579:11580   */\n      0x00\n        /* \"#utility.yul\":11568:11577   */\n      dup4\n        /* \"#utility.yul\":11564:11581   */\n      add\n        /* \"#utility.yul\":11555:11561   */\n      dup6\n        /* \"#utility.yul\":11511:11582   */\n      tag_170\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11592:11664   */\n      tag_302\n        /* \"#utility.yul\":11660:11662   */\n      0x20\n        /* \"#utility.yul\":11649:11658   */\n      dup4\n        /* \"#utility.yul\":11645:11663   */\n      add\n        /* \"#utility.yul\":11636:11642   */\n      dup5\n        /* \"#utility.yul\":11592:11664   */\n      tag_167\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11339:11671   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11677:12119   */\n    tag_120:\n        /* \"#utility.yul\":11826:11830   */\n      0x00\n        /* \"#utility.yul\":11864:11866   */\n      0x60\n        /* \"#utility.yul\":11853:11862   */\n      dup3\n        /* \"#utility.yul\":11849:11867   */\n      add\n        /* \"#utility.yul\":11841:11867   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:11948   */\n      tag_304\n        /* \"#utility.yul\":11945:11946   */\n      0x00\n        /* \"#utility.yul\":11934:11943   */\n      dup4\n        /* \"#utility.yul\":11930:11947   */\n      add\n        /* \"#utility.yul\":11921:11927   */\n      dup7\n        /* \"#utility.yul\":11877:11948   */\n      tag_170\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11958:12030   */\n      tag_305\n        /* \"#utility.yul\":12026:12028   */\n      0x20\n        /* \"#utility.yul\":12015:12024   */\n      dup4\n        /* \"#utility.yul\":12011:12029   */\n      add\n        /* \"#utility.yul\":12002:12008   */\n      dup6\n        /* \"#utility.yul\":11958:12030   */\n      tag_167\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":12040:12112   */\n      tag_306\n        /* \"#utility.yul\":12108:12110   */\n      0x40\n        /* \"#utility.yul\":12097:12106   */\n      dup4\n        /* \"#utility.yul\":12093:12111   */\n      add\n        /* \"#utility.yul\":12084:12090   */\n      dup5\n        /* \"#utility.yul\":12040:12112   */\n      tag_167\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11677:12119   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12125:12316   */\n    tag_143:\n        /* \"#utility.yul\":12165:12168   */\n      0x00\n        /* \"#utility.yul\":12184:12204   */\n      tag_308\n        /* \"#utility.yul\":12202:12203   */\n      dup3\n        /* \"#utility.yul\":12184:12204   */\n      tag_162\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":12179:12204   */\n      swap2\n      pop\n        /* \"#utility.yul\":12218:12238   */\n      tag_309\n        /* \"#utility.yul\":12236:12237   */\n      dup4\n        /* \"#utility.yul\":12218:12238   */\n      tag_162\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":12213:12238   */\n      swap3\n      pop\n        /* \"#utility.yul\":12261:12262   */\n      dup3\n        /* \"#utility.yul\":12258:12259   */\n      dup3\n        /* \"#utility.yul\":12254:12263   */\n      add\n        /* \"#utility.yul\":12247:12263   */\n      swap1\n      pop\n        /* \"#utility.yul\":12282:12285   */\n      dup1\n        /* \"#utility.yul\":12279:12280   */\n      dup3\n        /* \"#utility.yul\":12276:12286   */\n      gt\n        /* \"#utility.yul\":12273:12309   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":12289:12307   */\n      tag_311\n      tag_176\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":12273:12309   */\n    tag_310:\n        /* \"#utility.yul\":12125:12316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209c560356188f46c95328b2f60cabf4b46ba57b35e99f5e118d7d3478900d5acc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 275,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 408,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 267,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1723,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14277:6",
										"nodeType": "YulBlock",
										"src": "0:14277:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2615:81:6",
													"nodeType": "YulBlock",
													"src": "2615:81:6",
													"statements": [
														{
															"nativeSrc": "2625:65:6",
															"nodeType": "YulAssignment",
															"src": "2625:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:6"
																},
																"nativeSrc": "2636:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:6",
														"nodeType": "YulTypedName",
														"src": "2597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:6",
														"nodeType": "YulTypedName",
														"src": "2607:7:6",
														"type": ""
													}
												],
												"src": "2570:126:6"
											},
											{
												"body": {
													"nativeSrc": "2747:51:6",
													"nodeType": "YulBlock",
													"src": "2747:51:6",
													"statements": [
														{
															"nativeSrc": "2757:35:6",
															"nodeType": "YulAssignment",
															"src": "2757:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:6"
																},
																"nativeSrc": "2768:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:6",
														"nodeType": "YulTypedName",
														"src": "2729:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:6",
														"nodeType": "YulTypedName",
														"src": "2739:7:6",
														"type": ""
													}
												],
												"src": "2702:96:6"
											},
											{
												"body": {
													"nativeSrc": "2847:79:6",
													"nodeType": "YulBlock",
													"src": "2847:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:6",
																"nodeType": "YulBlock",
																"src": "2904:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:6"
																			},
																			"nativeSrc": "2906:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:6"
																		},
																		"nativeSrc": "2906:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:6"
																				},
																				"nativeSrc": "2877:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:6"
																		},
																		"nativeSrc": "2867:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:6"
																},
																"nativeSrc": "2860:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:6"
															},
															"nativeSrc": "2857:63:6",
															"nodeType": "YulIf",
															"src": "2857:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:6",
														"nodeType": "YulTypedName",
														"src": "2840:5:6",
														"type": ""
													}
												],
												"src": "2804:122:6"
											},
											{
												"body": {
													"nativeSrc": "2995:80:6",
													"nodeType": "YulBlock",
													"src": "2995:80:6",
													"statements": [
														{
															"nativeSrc": "3005:22:6",
															"nodeType": "YulAssignment",
															"src": "3005:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:6"
																},
																"nativeSrc": "3014:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:6"
																},
																"nativeSrc": "3036:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:6"
															},
															"nativeSrc": "3036:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:6",
														"nodeType": "YulTypedName",
														"src": "2973:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:6",
														"nodeType": "YulTypedName",
														"src": "2981:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:6",
														"nodeType": "YulTypedName",
														"src": "2989:5:6",
														"type": ""
													}
												],
												"src": "2932:143:6"
											},
											{
												"body": {
													"nativeSrc": "3126:32:6",
													"nodeType": "YulBlock",
													"src": "3126:32:6",
													"statements": [
														{
															"nativeSrc": "3136:16:6",
															"nodeType": "YulAssignment",
															"src": "3136:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "3147:5:6",
																"nodeType": "YulIdentifier",
																"src": "3147:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3136:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3136:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3081:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:6",
														"nodeType": "YulTypedName",
														"src": "3108:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3118:7:6",
														"nodeType": "YulTypedName",
														"src": "3118:7:6",
														"type": ""
													}
												],
												"src": "3081:77:6"
											},
											{
												"body": {
													"nativeSrc": "3207:79:6",
													"nodeType": "YulBlock",
													"src": "3207:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:16:6",
																"nodeType": "YulBlock",
																"src": "3264:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3273:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3276:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:6"
																			},
																			"nativeSrc": "3266:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3266:12:6"
																		},
																		"nativeSrc": "3266:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3266:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3255:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3255:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3237:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3237:17:6"
																				},
																				"nativeSrc": "3237:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3237:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3227:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3227:2:6"
																		},
																		"nativeSrc": "3227:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:6"
																},
																"nativeSrc": "3220:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3220:43:6"
															},
															"nativeSrc": "3217:63:6",
															"nodeType": "YulIf",
															"src": "3217:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3164:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:6",
														"nodeType": "YulTypedName",
														"src": "3200:5:6",
														"type": ""
													}
												],
												"src": "3164:122:6"
											},
											{
												"body": {
													"nativeSrc": "3355:80:6",
													"nodeType": "YulBlock",
													"src": "3355:80:6",
													"statements": [
														{
															"nativeSrc": "3365:22:6",
															"nodeType": "YulAssignment",
															"src": "3365:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3380:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3374:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3374:5:6"
																},
																"nativeSrc": "3374:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3374:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3365:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3423:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3423:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3396:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3396:26:6"
																},
																"nativeSrc": "3396:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3396:33:6"
															},
															"nativeSrc": "3396:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3396:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3292:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3333:6:6",
														"nodeType": "YulTypedName",
														"src": "3333:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3341:3:6",
														"nodeType": "YulTypedName",
														"src": "3341:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3349:5:6",
														"nodeType": "YulTypedName",
														"src": "3349:5:6",
														"type": ""
													}
												],
												"src": "3292:143:6"
											},
											{
												"body": {
													"nativeSrc": "3589:1018:6",
													"nodeType": "YulBlock",
													"src": "3589:1018:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3636:83:6",
																"nodeType": "YulBlock",
																"src": "3636:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3638:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3638:77:6"
																			},
																			"nativeSrc": "3638:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3638:79:6"
																		},
																		"nativeSrc": "3638:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3610:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3610:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3619:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3619:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:6"
																		},
																		"nativeSrc": "3606:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3631:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3631:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:6"
																},
																"nativeSrc": "3602:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3602:33:6"
															},
															"nativeSrc": "3599:120:6",
															"nodeType": "YulIf",
															"src": "3599:120:6"
														},
														{
															"nativeSrc": "3729:291:6",
															"nodeType": "YulBlock",
															"src": "3729:291:6",
															"statements": [
																{
																	"nativeSrc": "3744:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3744:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3768:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3768:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3779:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3779:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3764:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3764:3:6"
																				},
																				"nativeSrc": "3764:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3764:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3758:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3758:5:6"
																		},
																		"nativeSrc": "3758:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3758:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3748:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3748:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3829:83:6",
																		"nodeType": "YulBlock",
																		"src": "3829:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3831:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3831:77:6"
																					},
																					"nativeSrc": "3831:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3831:79:6"
																				},
																				"nativeSrc": "3831:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3831:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3801:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3801:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3809:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3809:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3798:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3798:2:6"
																		},
																		"nativeSrc": "3798:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3798:30:6"
																	},
																	"nativeSrc": "3795:117:6",
																	"nodeType": "YulIf",
																	"src": "3795:117:6"
																},
																{
																	"nativeSrc": "3926:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3926:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3982:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3982:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3993:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3993:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3978:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3978:3:6"
																				},
																				"nativeSrc": "3978:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3978:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4002:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4002:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3936:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3936:41:6"
																		},
																		"nativeSrc": "3936:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3936:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3926:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3926:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4030:292:6",
															"nodeType": "YulBlock",
															"src": "4030:292:6",
															"statements": [
																{
																	"nativeSrc": "4045:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4045:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4069:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4069:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4080:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4080:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4065:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4065:3:6"
																				},
																				"nativeSrc": "4065:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4065:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4059:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4059:5:6"
																		},
																		"nativeSrc": "4059:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4059:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4049:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4049:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4131:83:6",
																		"nodeType": "YulBlock",
																		"src": "4131:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4133:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4133:77:6"
																					},
																					"nativeSrc": "4133:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4133:79:6"
																				},
																				"nativeSrc": "4133:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4133:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4103:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4103:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4111:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4100:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4100:2:6"
																		},
																		"nativeSrc": "4100:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4100:30:6"
																	},
																	"nativeSrc": "4097:117:6",
																	"nodeType": "YulIf",
																	"src": "4097:117:6"
																},
																{
																	"nativeSrc": "4228:84:6",
																	"nodeType": "YulAssignment",
																	"src": "4228:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4284:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4284:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4295:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4295:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4280:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4280:3:6"
																				},
																				"nativeSrc": "4280:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4280:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4304:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4304:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4238:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "4238:41:6"
																		},
																		"nativeSrc": "4238:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4228:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4228:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4332:129:6",
															"nodeType": "YulBlock",
															"src": "4332:129:6",
															"statements": [
																{
																	"nativeSrc": "4347:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4347:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4361:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4351:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4351:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4377:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4377:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4423:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4423:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4434:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4434:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4419:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:6"
																				},
																				"nativeSrc": "4419:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4419:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4443:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4387:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4387:31:6"
																		},
																		"nativeSrc": "4387:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4387:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4377:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4377:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4471:129:6",
															"nodeType": "YulBlock",
															"src": "4471:129:6",
															"statements": [
																{
																	"nativeSrc": "4486:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4486:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4500:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4490:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4490:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4516:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4516:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4562:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4562:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4573:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4573:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4558:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:6"
																				},
																				"nativeSrc": "4558:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4558:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4582:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4582:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4526:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4526:31:6"
																		},
																		"nativeSrc": "4526:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4526:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4516:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4516:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory",
												"nativeSrc": "3441:1166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:6",
														"nodeType": "YulTypedName",
														"src": "3535:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3546:7:6",
														"nodeType": "YulTypedName",
														"src": "3546:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3558:6:6",
														"nodeType": "YulTypedName",
														"src": "3558:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3566:6:6",
														"nodeType": "YulTypedName",
														"src": "3566:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3574:6:6",
														"nodeType": "YulTypedName",
														"src": "3574:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3582:6:6",
														"nodeType": "YulTypedName",
														"src": "3582:6:6",
														"type": ""
													}
												],
												"src": "3441:1166:6"
											},
											{
												"body": {
													"nativeSrc": "4672:40:6",
													"nodeType": "YulBlock",
													"src": "4672:40:6",
													"statements": [
														{
															"nativeSrc": "4683:22:6",
															"nodeType": "YulAssignment",
															"src": "4683:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4699:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4699:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:6"
																},
																"nativeSrc": "4693:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4693:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4683:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4613:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4655:5:6",
														"nodeType": "YulTypedName",
														"src": "4655:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4665:6:6",
														"nodeType": "YulTypedName",
														"src": "4665:6:6",
														"type": ""
													}
												],
												"src": "4613:99:6"
											},
											{
												"body": {
													"nativeSrc": "4746:152:6",
													"nodeType": "YulBlock",
													"src": "4746:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4763:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4763:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4766:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4756:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:6"
																},
																"nativeSrc": "4756:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4756:88:6"
															},
															"nativeSrc": "4756:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4756:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4860:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4860:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:6"
																},
																"nativeSrc": "4853:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4853:15:6"
															},
															"nativeSrc": "4853:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4853:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4884:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4887:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4887:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:6"
																},
																"nativeSrc": "4877:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4877:15:6"
															},
															"nativeSrc": "4877:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4877:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4718:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4718:180:6"
											},
											{
												"body": {
													"nativeSrc": "4955:269:6",
													"nodeType": "YulBlock",
													"src": "4955:269:6",
													"statements": [
														{
															"nativeSrc": "4965:22:6",
															"nodeType": "YulAssignment",
															"src": "4965:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4979:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4979:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4985:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4975:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:6"
																},
																"nativeSrc": "4975:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4975:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4965:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:6"
																}
															]
														},
														{
															"nativeSrc": "4996:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4996:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5026:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5026:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5032:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5022:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:6"
																},
																"nativeSrc": "5022:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5022:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5000:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5000:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5073:51:6",
																"nodeType": "YulBlock",
																"src": "5073:51:6",
																"statements": [
																	{
																		"nativeSrc": "5087:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5087:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5101:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5101:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5109:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5109:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5097:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5097:3:6"
																			},
																			"nativeSrc": "5097:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5053:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5053:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5046:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:6"
																},
																"nativeSrc": "5046:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5046:26:6"
															},
															"nativeSrc": "5043:81:6",
															"nodeType": "YulIf",
															"src": "5043:81:6"
														},
														{
															"body": {
																"nativeSrc": "5176:42:6",
																"nodeType": "YulBlock",
																"src": "5176:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5190:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5190:16:6"
																			},
																			"nativeSrc": "5190:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5190:18:6"
																		},
																		"nativeSrc": "5190:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5190:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5140:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5140:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5163:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5171:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5171:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5160:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5160:2:6"
																		},
																		"nativeSrc": "5160:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5137:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5137:2:6"
																},
																"nativeSrc": "5137:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5137:38:6"
															},
															"nativeSrc": "5134:84:6",
															"nodeType": "YulIf",
															"src": "5134:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4904:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4939:4:6",
														"nodeType": "YulTypedName",
														"src": "4939:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4948:6:6",
														"nodeType": "YulTypedName",
														"src": "4948:6:6",
														"type": ""
													}
												],
												"src": "4904:320:6"
											},
											{
												"body": {
													"nativeSrc": "5284:87:6",
													"nodeType": "YulBlock",
													"src": "5284:87:6",
													"statements": [
														{
															"nativeSrc": "5294:11:6",
															"nodeType": "YulAssignment",
															"src": "5294:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "5302:3:6",
																"nodeType": "YulIdentifier",
																"src": "5302:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5322:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5325:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5315:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:6"
																},
																"nativeSrc": "5315:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5315:14:6"
															},
															"nativeSrc": "5315:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "5315:14:6"
														},
														{
															"nativeSrc": "5338:26:6",
															"nodeType": "YulAssignment",
															"src": "5338:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5356:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5356:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5359:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5359:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5346:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5346:9:6"
																},
																"nativeSrc": "5346:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5346:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5338:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5338:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5230:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5271:3:6",
														"nodeType": "YulTypedName",
														"src": "5271:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5279:4:6",
														"nodeType": "YulTypedName",
														"src": "5279:4:6",
														"type": ""
													}
												],
												"src": "5230:141:6"
											},
											{
												"body": {
													"nativeSrc": "5421:49:6",
													"nodeType": "YulBlock",
													"src": "5421:49:6",
													"statements": [
														{
															"nativeSrc": "5431:33:6",
															"nodeType": "YulAssignment",
															"src": "5431:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5449:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5449:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5445:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:6"
																		},
																		"nativeSrc": "5445:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5441:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5441:3:6"
																},
																"nativeSrc": "5441:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5441:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5431:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5377:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5404:5:6",
														"nodeType": "YulTypedName",
														"src": "5404:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5414:6:6",
														"nodeType": "YulTypedName",
														"src": "5414:6:6",
														"type": ""
													}
												],
												"src": "5377:93:6"
											},
											{
												"body": {
													"nativeSrc": "5529:54:6",
													"nodeType": "YulBlock",
													"src": "5529:54:6",
													"statements": [
														{
															"nativeSrc": "5539:37:6",
															"nodeType": "YulAssignment",
															"src": "5539:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5564:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5564:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5570:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5570:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5560:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:6"
																},
																"nativeSrc": "5560:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5560:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5539:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5539:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5476:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5504:4:6",
														"nodeType": "YulTypedName",
														"src": "5504:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5510:5:6",
														"nodeType": "YulTypedName",
														"src": "5510:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5520:8:6",
														"nodeType": "YulTypedName",
														"src": "5520:8:6",
														"type": ""
													}
												],
												"src": "5476:107:6"
											},
											{
												"body": {
													"nativeSrc": "5665:317:6",
													"nodeType": "YulBlock",
													"src": "5665:317:6",
													"statements": [
														{
															"nativeSrc": "5675:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5675:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5696:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5696:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5708:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5708:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5692:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:6"
																},
																"nativeSrc": "5692:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5692:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5679:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5679:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5719:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5719:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5750:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5750:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5761:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5761:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5731:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5731:18:6"
																},
																"nativeSrc": "5731:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5731:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5723:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5723:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5837:51:6",
															"nodeType": "YulAssignment",
															"src": "5837:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5868:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5868:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5879:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5879:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5849:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5849:18:6"
																},
																"nativeSrc": "5849:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5849:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5837:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5837:8:6"
																}
															]
														},
														{
															"nativeSrc": "5897:30:6",
															"nodeType": "YulAssignment",
															"src": "5897:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5910:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5921:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5921:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5917:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:6"
																		},
																		"nativeSrc": "5917:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5917:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5906:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:6"
																},
																"nativeSrc": "5906:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5906:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5897:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5897:5:6"
																}
															]
														},
														{
															"nativeSrc": "5936:40:6",
															"nodeType": "YulAssignment",
															"src": "5936:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5949:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5949:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5960:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5960:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5970:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5970:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:6"
																		},
																		"nativeSrc": "5956:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5946:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5946:2:6"
																},
																"nativeSrc": "5946:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5946:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5936:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5589:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5626:5:6",
														"nodeType": "YulTypedName",
														"src": "5626:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5633:10:6",
														"nodeType": "YulTypedName",
														"src": "5633:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5645:8:6",
														"nodeType": "YulTypedName",
														"src": "5645:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5658:6:6",
														"nodeType": "YulTypedName",
														"src": "5658:6:6",
														"type": ""
													}
												],
												"src": "5589:393:6"
											},
											{
												"body": {
													"nativeSrc": "6020:28:6",
													"nodeType": "YulBlock",
													"src": "6020:28:6",
													"statements": [
														{
															"nativeSrc": "6030:12:6",
															"nodeType": "YulAssignment",
															"src": "6030:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6037:5:6",
																"nodeType": "YulIdentifier",
																"src": "6037:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6030:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5988:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6006:5:6",
														"nodeType": "YulTypedName",
														"src": "6006:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6016:3:6",
														"nodeType": "YulTypedName",
														"src": "6016:3:6",
														"type": ""
													}
												],
												"src": "5988:60:6"
											},
											{
												"body": {
													"nativeSrc": "6114:82:6",
													"nodeType": "YulBlock",
													"src": "6114:82:6",
													"statements": [
														{
															"nativeSrc": "6124:66:6",
															"nodeType": "YulAssignment",
															"src": "6124:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6182:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6182:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6164:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6164:17:6"
																				},
																				"nativeSrc": "6164:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6164:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6155:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "6155:8:6"
																		},
																		"nativeSrc": "6155:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6137:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6137:17:6"
																},
																"nativeSrc": "6137:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6137:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6124:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6124:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6054:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6094:5:6",
														"nodeType": "YulTypedName",
														"src": "6094:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6104:9:6",
														"nodeType": "YulTypedName",
														"src": "6104:9:6",
														"type": ""
													}
												],
												"src": "6054:142:6"
											},
											{
												"body": {
													"nativeSrc": "6249:28:6",
													"nodeType": "YulBlock",
													"src": "6249:28:6",
													"statements": [
														{
															"nativeSrc": "6259:12:6",
															"nodeType": "YulAssignment",
															"src": "6259:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6266:5:6",
																"nodeType": "YulIdentifier",
																"src": "6266:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6259:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6202:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:6",
														"nodeType": "YulTypedName",
														"src": "6235:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6245:3:6",
														"nodeType": "YulTypedName",
														"src": "6245:3:6",
														"type": ""
													}
												],
												"src": "6202:75:6"
											},
											{
												"body": {
													"nativeSrc": "6359:193:6",
													"nodeType": "YulBlock",
													"src": "6359:193:6",
													"statements": [
														{
															"nativeSrc": "6369:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6369:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6424:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6424:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6393:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6393:30:6"
																},
																"nativeSrc": "6393:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6393:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6373:16:6",
																	"nodeType": "YulTypedName",
																	"src": "6373:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6448:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6448:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6488:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6488:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6482:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:6"
																				},
																				"nativeSrc": "6482:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6482:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6495:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6495:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6527:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6527:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6503:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6503:23:6"
																				},
																				"nativeSrc": "6503:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6454:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6454:27:6"
																		},
																		"nativeSrc": "6454:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6454:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6441:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:6"
																},
																"nativeSrc": "6441:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6441:105:6"
															},
															"nativeSrc": "6441:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6441:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6283:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6336:4:6",
														"nodeType": "YulTypedName",
														"src": "6336:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6342:6:6",
														"nodeType": "YulTypedName",
														"src": "6342:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6350:7:6",
														"nodeType": "YulTypedName",
														"src": "6350:7:6",
														"type": ""
													}
												],
												"src": "6283:269:6"
											},
											{
												"body": {
													"nativeSrc": "6607:24:6",
													"nodeType": "YulBlock",
													"src": "6607:24:6",
													"statements": [
														{
															"nativeSrc": "6617:8:6",
															"nodeType": "YulAssignment",
															"src": "6617:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6624:1:6",
																"nodeType": "YulLiteral",
																"src": "6624:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6617:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6558:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6603:3:6",
														"nodeType": "YulTypedName",
														"src": "6603:3:6",
														"type": ""
													}
												],
												"src": "6558:73:6"
											},
											{
												"body": {
													"nativeSrc": "6690:136:6",
													"nodeType": "YulBlock",
													"src": "6690:136:6",
													"statements": [
														{
															"nativeSrc": "6700:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6700:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6714:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6714:30:6"
																},
																"nativeSrc": "6714:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6714:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6704:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6704:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6799:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6799:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6805:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6813:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6755:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6755:43:6"
																},
																"nativeSrc": "6755:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6755:65:6"
															},
															"nativeSrc": "6755:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6755:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6637:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6676:4:6",
														"nodeType": "YulTypedName",
														"src": "6676:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6682:6:6",
														"nodeType": "YulTypedName",
														"src": "6682:6:6",
														"type": ""
													}
												],
												"src": "6637:189:6"
											},
											{
												"body": {
													"nativeSrc": "6882:136:6",
													"nodeType": "YulBlock",
													"src": "6882:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6949:63:6",
																"nodeType": "YulBlock",
																"src": "6949:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6993:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6993:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7000:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7000:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6963:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6963:29:6"
																			},
																			"nativeSrc": "6963:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6963:39:6"
																		},
																		"nativeSrc": "6963:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6963:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6902:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6902:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6909:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6909:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6899:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6899:2:6"
																},
																"nativeSrc": "6899:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6899:14:6"
															},
															"nativeSrc": "6892:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6914:26:6",
																"nodeType": "YulBlock",
																"src": "6914:26:6",
																"statements": [
																	{
																		"nativeSrc": "6916:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6916:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6929:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6929:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6936:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6936:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6925:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6925:3:6"
																			},
																			"nativeSrc": "6925:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6925:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6916:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6916:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6896:2:6",
																"nodeType": "YulBlock",
																"src": "6896:2:6",
																"statements": []
															},
															"src": "6892:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6832:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6870:5:6",
														"nodeType": "YulTypedName",
														"src": "6870:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:6",
														"nodeType": "YulTypedName",
														"src": "6877:3:6",
														"type": ""
													}
												],
												"src": "6832:186:6"
											},
											{
												"body": {
													"nativeSrc": "7103:464:6",
													"nodeType": "YulBlock",
													"src": "7103:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7129:431:6",
																"nodeType": "YulBlock",
																"src": "7129:431:6",
																"statements": [
																	{
																		"nativeSrc": "7143:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7143:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7191:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7191:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7159:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "7159:31:6"
																			},
																			"nativeSrc": "7159:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7159:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7147:8:6",
																				"nodeType": "YulTypedName",
																				"src": "7147:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7210:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7210:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7233:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "7233:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7261:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "7261:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7243:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "7243:17:6"
																					},
																					"nativeSrc": "7243:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7243:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7229:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7229:3:6"
																			},
																			"nativeSrc": "7229:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7214:11:6",
																				"nodeType": "YulTypedName",
																				"src": "7214:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7430:27:6",
																			"nodeType": "YulBlock",
																			"src": "7430:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7432:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7432:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7447:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7447:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7432:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7432:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7414:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7414:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7426:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7426:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7411:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7411:2:6"
																			},
																			"nativeSrc": "7411:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7411:18:6"
																		},
																		"nativeSrc": "7408:49:6",
																		"nodeType": "YulIf",
																		"src": "7408:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7499:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7499:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7516:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7516:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7544:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7544:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7526:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7526:17:6"
																							},
																							"nativeSrc": "7526:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7526:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7512:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7512:3:6"
																					},
																					"nativeSrc": "7512:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7512:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7470:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7470:28:6"
																			},
																			"nativeSrc": "7470:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:80:6"
																		},
																		"nativeSrc": "7470:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7120:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7120:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7117:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7117:2:6"
																},
																"nativeSrc": "7117:11:6",
																"nodeType": "YulFunctionCall",
																"src": "7117:11:6"
															},
															"nativeSrc": "7114:446:6",
															"nodeType": "YulIf",
															"src": "7114:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7024:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7079:5:6",
														"nodeType": "YulTypedName",
														"src": "7079:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7086:3:6",
														"nodeType": "YulTypedName",
														"src": "7086:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7091:10:6",
														"nodeType": "YulTypedName",
														"src": "7091:10:6",
														"type": ""
													}
												],
												"src": "7024:543:6"
											},
											{
												"body": {
													"nativeSrc": "7636:54:6",
													"nodeType": "YulBlock",
													"src": "7636:54:6",
													"statements": [
														{
															"nativeSrc": "7646:37:6",
															"nodeType": "YulAssignment",
															"src": "7646:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7671:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7671:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7677:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7677:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7667:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7667:3:6"
																},
																"nativeSrc": "7667:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7667:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7646:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7646:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7573:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7611:4:6",
														"nodeType": "YulTypedName",
														"src": "7611:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7617:5:6",
														"nodeType": "YulTypedName",
														"src": "7617:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7627:8:6",
														"nodeType": "YulTypedName",
														"src": "7627:8:6",
														"type": ""
													}
												],
												"src": "7573:117:6"
											},
											{
												"body": {
													"nativeSrc": "7747:118:6",
													"nodeType": "YulBlock",
													"src": "7747:118:6",
													"statements": [
														{
															"nativeSrc": "7757:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7757:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7806:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7806:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7809:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7809:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7802:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7802:3:6"
																				},
																				"nativeSrc": "7802:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7802:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7821:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7821:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7817:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7817:3:6"
																				},
																				"nativeSrc": "7817:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7817:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7773:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7773:28:6"
																		},
																		"nativeSrc": "7773:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7773:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:6"
																},
																"nativeSrc": "7769:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7769:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7761:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7761:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7834:25:6",
															"nodeType": "YulAssignment",
															"src": "7834:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7848:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7848:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7854:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7854:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7844:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7844:3:6"
																},
																"nativeSrc": "7844:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7844:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7834:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7834:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7696:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7724:4:6",
														"nodeType": "YulTypedName",
														"src": "7724:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7730:5:6",
														"nodeType": "YulTypedName",
														"src": "7730:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7740:6:6",
														"nodeType": "YulTypedName",
														"src": "7740:6:6",
														"type": ""
													}
												],
												"src": "7696:169:6"
											},
											{
												"body": {
													"nativeSrc": "7951:214:6",
													"nodeType": "YulBlock",
													"src": "7951:214:6",
													"statements": [
														{
															"nativeSrc": "8084:37:6",
															"nodeType": "YulAssignment",
															"src": "8084:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8111:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8111:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8117:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8117:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8092:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "8092:18:6"
																},
																"nativeSrc": "8092:29:6",
																"nodeType": "YulFunctionCall",
																"src": "8092:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8084:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8084:4:6"
																}
															]
														},
														{
															"nativeSrc": "8130:29:6",
															"nodeType": "YulAssignment",
															"src": "8130:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8141:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8141:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8151:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8151:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8154:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8154:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8147:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:6"
																		},
																		"nativeSrc": "8147:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8147:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8138:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8138:2:6"
																},
																"nativeSrc": "8138:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8138:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8130:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8130:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7870:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7932:4:6",
														"nodeType": "YulTypedName",
														"src": "7932:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7938:3:6",
														"nodeType": "YulTypedName",
														"src": "7938:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7946:4:6",
														"nodeType": "YulTypedName",
														"src": "7946:4:6",
														"type": ""
													}
												],
												"src": "7870:295:6"
											},
											{
												"body": {
													"nativeSrc": "8262:1303:6",
													"nodeType": "YulBlock",
													"src": "8262:1303:6",
													"statements": [
														{
															"nativeSrc": "8273:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8273:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8320:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8320:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8287:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8287:32:6"
																},
																"nativeSrc": "8287:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8287:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8277:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8277:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8409:22:6",
																"nodeType": "YulBlock",
																"src": "8409:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8411:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8411:16:6"
																			},
																			"nativeSrc": "8411:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8411:18:6"
																		},
																		"nativeSrc": "8411:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8411:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8381:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8389:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8378:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:6"
																},
																"nativeSrc": "8378:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8378:30:6"
															},
															"nativeSrc": "8375:56:6",
															"nodeType": "YulIf",
															"src": "8375:56:6"
														},
														{
															"nativeSrc": "8441:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8441:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8487:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8487:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8481:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8481:5:6"
																		},
																		"nativeSrc": "8481:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8455:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8455:25:6"
																},
																"nativeSrc": "8455:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8455:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8445:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8445:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8586:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8592:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8592:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8600:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8600:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8540:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8540:45:6"
																},
																"nativeSrc": "8540:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8540:67:6"
															},
															"nativeSrc": "8540:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8540:67:6"
														},
														{
															"nativeSrc": "8617:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8617:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8634:1:6",
																"nodeType": "YulLiteral",
																"src": "8634:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8621:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8621:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8645:17:6",
															"nodeType": "YulAssignment",
															"src": "8645:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8658:4:6",
																"nodeType": "YulLiteral",
																"src": "8658:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8645:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8645:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8709:611:6",
																		"nodeType": "YulBlock",
																		"src": "8709:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8723:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8723:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8742:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8742:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8754:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8754:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8750:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8750:3:6"
																							},
																							"nativeSrc": "8750:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8750:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8738:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8738:3:6"
																					},
																					"nativeSrc": "8738:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8738:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8727:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8727:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8774:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8774:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8820:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8820:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8788:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8788:31:6"
																					},
																					"nativeSrc": "8788:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8788:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8778:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8778:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8838:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8838:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8847:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8847:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8842:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8842:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8906:163:6",
																					"nodeType": "YulBlock",
																					"src": "8906:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8931:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8931:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8949:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8949:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8954:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8954:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8945:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8945:3:6"
																												},
																												"nativeSrc": "8945:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8945:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8939:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8939:5:6"
																										},
																										"nativeSrc": "8939:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8939:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8924:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8924:6:6"
																								},
																								"nativeSrc": "8924:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8924:42:6"
																							},
																							"nativeSrc": "8924:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8924:42:6"
																						},
																						{
																							"nativeSrc": "8983:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8983:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8997:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8997:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9005:1:6",
																										"nodeType": "YulLiteral",
																										"src": "9005:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8993:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8993:3:6"
																								},
																								"nativeSrc": "8993:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8993:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8983:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8983:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9024:31:6",
																							"nodeType": "YulAssignment",
																							"src": "9024:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9041:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "9041:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9052:2:6",
																										"nodeType": "YulLiteral",
																										"src": "9052:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9037:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9037:3:6"
																								},
																								"nativeSrc": "9037:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9037:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9024:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "9024:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8872:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8872:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8875:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8875:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8869:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8869:2:6"
																					},
																					"nativeSrc": "8869:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8869:14:6"
																				},
																				"nativeSrc": "8861:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8884:21:6",
																					"nodeType": "YulBlock",
																					"src": "8884:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8886:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8886:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8895:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8895:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8898:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8898:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8891:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8891:3:6"
																								},
																								"nativeSrc": "8891:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8891:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8886:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8886:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8865:3:6",
																					"nodeType": "YulBlock",
																					"src": "8865:3:6",
																					"statements": []
																				},
																				"src": "8861:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "9105:156:6",
																					"nodeType": "YulBlock",
																					"src": "9105:156:6",
																					"statements": [
																						{
																							"nativeSrc": "9123:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9123:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9150:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9150:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9155:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9155:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9146:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9146:3:6"
																										},
																										"nativeSrc": "9146:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9146:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9140:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9140:5:6"
																								},
																								"nativeSrc": "9140:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9140:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9127:9:6",
																									"nodeType": "YulTypedName",
																									"src": "9127:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9190:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9190:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9217:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9217:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9232:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "9232:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9240:4:6",
																														"nodeType": "YulLiteral",
																														"src": "9240:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9228:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "9228:3:6"
																												},
																												"nativeSrc": "9228:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "9228:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9198:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "9198:18:6"
																										},
																										"nativeSrc": "9198:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9198:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9183:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9183:6:6"
																								},
																								"nativeSrc": "9183:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9183:64:6"
																							},
																							"nativeSrc": "9183:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "9183:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9088:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "9088:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9097:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "9097:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9085:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "9085:2:6"
																					},
																					"nativeSrc": "9085:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9085:19:6"
																				},
																				"nativeSrc": "9082:179:6",
																				"nodeType": "YulIf",
																				"src": "9082:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9281:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9281:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9295:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "9295:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9303:1:6",
																											"nodeType": "YulLiteral",
																											"src": "9303:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9291:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9291:3:6"
																									},
																									"nativeSrc": "9291:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "9291:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9307:1:6",
																									"nodeType": "YulLiteral",
																									"src": "9307:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9287:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9287:3:6"
																							},
																							"nativeSrc": "9287:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9287:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9274:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9274:6:6"
																					},
																					"nativeSrc": "9274:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9274:36:6"
																				},
																				"nativeSrc": "9274:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9274:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8702:618:6",
																	"nodeType": "YulCase",
																	"src": "8702:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8707:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9337:222:6",
																		"nodeType": "YulBlock",
																		"src": "9337:222:6",
																		"statements": [
																			{
																				"nativeSrc": "9351:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9351:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9364:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9364:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9355:5:6",
																						"nodeType": "YulTypedName",
																						"src": "9355:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9388:67:6",
																					"nodeType": "YulBlock",
																					"src": "9388:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9406:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9406:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9425:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9425:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9430:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9430:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9421:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9421:3:6"
																										},
																										"nativeSrc": "9421:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9421:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9415:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9415:5:6"
																								},
																								"nativeSrc": "9415:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9415:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9406:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9406:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9381:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9381:6:6"
																				},
																				"nativeSrc": "9378:77:6",
																				"nodeType": "YulIf",
																				"src": "9378:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9475:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9475:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9534:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9534:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9541:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9541:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9481:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9481:52:6"
																							},
																							"nativeSrc": "9481:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9481:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9468:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:6"
																					},
																					"nativeSrc": "9468:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9468:81:6"
																				},
																				"nativeSrc": "9468:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9468:81:6"
																			}
																		]
																	},
																	"nativeSrc": "9329:230:6",
																	"nodeType": "YulCase",
																	"src": "9329:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8682:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8682:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8690:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8690:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8679:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8679:2:6"
																},
																"nativeSrc": "8679:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8679:14:6"
															},
															"nativeSrc": "8672:887:6",
															"nodeType": "YulSwitch",
															"src": "8672:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8170:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8251:4:6",
														"nodeType": "YulTypedName",
														"src": "8251:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8257:3:6",
														"nodeType": "YulTypedName",
														"src": "8257:3:6",
														"type": ""
													}
												],
												"src": "8170:1395:6"
											},
											{
												"body": {
													"nativeSrc": "9599:152:6",
													"nodeType": "YulBlock",
													"src": "9599:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9616:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9616:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9619:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9619:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9609:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9609:6:6"
																},
																"nativeSrc": "9609:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9609:88:6"
															},
															"nativeSrc": "9609:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9609:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9713:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9713:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9716:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9716:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9706:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9706:6:6"
																},
																"nativeSrc": "9706:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9706:15:6"
															},
															"nativeSrc": "9706:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9706:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9737:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9737:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9740:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9740:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9730:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9730:6:6"
																},
																"nativeSrc": "9730:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9730:15:6"
															},
															"nativeSrc": "9730:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9730:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9571:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9571:180:6"
											},
											{
												"body": {
													"nativeSrc": "9808:51:6",
													"nodeType": "YulBlock",
													"src": "9808:51:6",
													"statements": [
														{
															"nativeSrc": "9818:34:6",
															"nodeType": "YulAssignment",
															"src": "9818:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9843:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9843:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9846:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9846:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9839:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9839:3:6"
																},
																"nativeSrc": "9839:13:6",
																"nodeType": "YulFunctionCall",
																"src": "9839:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9818:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "9818:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9757:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9789:5:6",
														"nodeType": "YulTypedName",
														"src": "9789:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9799:8:6",
														"nodeType": "YulTypedName",
														"src": "9799:8:6",
														"type": ""
													}
												],
												"src": "9757:102:6"
											},
											{
												"body": {
													"nativeSrc": "9938:775:6",
													"nodeType": "YulBlock",
													"src": "9938:775:6",
													"statements": [
														{
															"nativeSrc": "9948:15:6",
															"nodeType": "YulAssignment",
															"src": "9948:15:6",
															"value": {
																"name": "_power",
																"nativeSrc": "9957:6:6",
																"nodeType": "YulIdentifier",
																"src": "9957:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9948:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9948:5:6"
																}
															]
														},
														{
															"nativeSrc": "9972:14:6",
															"nodeType": "YulAssignment",
															"src": "9972:14:6",
															"value": {
																"name": "_base",
																"nativeSrc": "9981:5:6",
																"nodeType": "YulIdentifier",
																"src": "9981:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9972:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9972:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10030:677:6",
																"nodeType": "YulBlock",
																"src": "10030:677:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10118:22:6",
																			"nodeType": "YulBlock",
																			"src": "10118:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10120:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "10120:16:6"
																						},
																						"nativeSrc": "10120:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10120:18:6"
																					},
																					"nativeSrc": "10120:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "10120:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10096:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "10096:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10106:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10106:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10111:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "10111:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10102:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "10102:3:6"
																					},
																					"nativeSrc": "10102:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10102:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10093:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "10093:2:6"
																			},
																			"nativeSrc": "10093:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10093:24:6"
																		},
																		"nativeSrc": "10090:50:6",
																		"nodeType": "YulIf",
																		"src": "10090:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "10185:419:6",
																			"nodeType": "YulBlock",
																			"src": "10185:419:6",
																			"statements": [
																				{
																					"nativeSrc": "10565:25:6",
																					"nodeType": "YulAssignment",
																					"src": "10565:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10578:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "10578:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10585:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "10585:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10574:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10574:3:6"
																						},
																						"nativeSrc": "10574:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10574:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10565:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "10565:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10160:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "10160:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10170:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10170:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10156:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10156:3:6"
																			},
																			"nativeSrc": "10156:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10156:16:6"
																		},
																		"nativeSrc": "10153:451:6",
																		"nodeType": "YulIf",
																		"src": "10153:451:6"
																	},
																	{
																		"nativeSrc": "10617:23:6",
																		"nodeType": "YulAssignment",
																		"src": "10617:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10629:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "10629:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10635:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "10635:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10625:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10625:3:6"
																			},
																			"nativeSrc": "10625:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10625:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10617:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10617:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10653:44:6",
																		"nodeType": "YulAssignment",
																		"src": "10653:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10688:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "10688:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10665:22:6",
																				"nodeType": "YulIdentifier",
																				"src": "10665:22:6"
																			},
																			"nativeSrc": "10665:32:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10665:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10653:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "10653:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10006:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "10006:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10016:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10016:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10003:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10003:2:6"
																},
																"nativeSrc": "10003:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10003:15:6"
															},
															"nativeSrc": "9995:712:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10019:2:6",
																"nodeType": "YulBlock",
																"src": "10019:2:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9999:3:6",
																"nodeType": "YulBlock",
																"src": "9999:3:6",
																"statements": []
															},
															"src": "9995:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9865:848:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9893:6:6",
														"nodeType": "YulTypedName",
														"src": "9893:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9901:5:6",
														"nodeType": "YulTypedName",
														"src": "9901:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9908:8:6",
														"nodeType": "YulTypedName",
														"src": "9908:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9918:3:6",
														"nodeType": "YulTypedName",
														"src": "9918:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9926:5:6",
														"nodeType": "YulTypedName",
														"src": "9926:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9933:4:6",
														"nodeType": "YulTypedName",
														"src": "9933:4:6",
														"type": ""
													}
												],
												"src": "9865:848:6"
											},
											{
												"body": {
													"nativeSrc": "10779:1013:6",
													"nodeType": "YulBlock",
													"src": "10779:1013:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10974:20:6",
																"nodeType": "YulBlock",
																"src": "10974:20:6",
																"statements": [
																	{
																		"nativeSrc": "10976:10:6",
																		"nodeType": "YulAssignment",
																		"src": "10976:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10985:1:6",
																			"nodeType": "YulLiteral",
																			"src": "10985:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10976:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10976:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10987:5:6",
																		"nodeType": "YulLeave",
																		"src": "10987:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10964:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "10964:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10957:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10957:6:6"
																},
																"nativeSrc": "10957:16:6",
																"nodeType": "YulFunctionCall",
																"src": "10957:16:6"
															},
															"nativeSrc": "10954:40:6",
															"nodeType": "YulIf",
															"src": "10954:40:6"
														},
														{
															"body": {
																"nativeSrc": "11019:20:6",
																"nodeType": "YulBlock",
																"src": "11019:20:6",
																"statements": [
																	{
																		"nativeSrc": "11021:10:6",
																		"nodeType": "YulAssignment",
																		"src": "11021:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11030:1:6",
																			"nodeType": "YulLiteral",
																			"src": "11030:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11021:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "11021:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11032:5:6",
																		"nodeType": "YulLeave",
																		"src": "11032:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11013:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11013:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11006:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11006:6:6"
																},
																"nativeSrc": "11006:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11006:12:6"
															},
															"nativeSrc": "11003:36:6",
															"nodeType": "YulIf",
															"src": "11003:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11149:20:6",
																		"nodeType": "YulBlock",
																		"src": "11149:20:6",
																		"statements": [
																			{
																				"nativeSrc": "11151:10:6",
																				"nodeType": "YulAssignment",
																				"src": "11151:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11160:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11160:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11151:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11151:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11162:5:6",
																				"nodeType": "YulLeave",
																				"src": "11162:5:6"
																			}
																		]
																	},
																	"nativeSrc": "11142:27:6",
																	"nodeType": "YulCase",
																	"src": "11142:27:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11147:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11147:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11193:176:6",
																		"nodeType": "YulBlock",
																		"src": "11193:176:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11228:22:6",
																					"nodeType": "YulBlock",
																					"src": "11228:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11230:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "11230:16:6"
																								},
																								"nativeSrc": "11230:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "11230:18:6"
																							},
																							"nativeSrc": "11230:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "11230:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11213:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "11213:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11223:3:6",
																							"nodeType": "YulLiteral",
																							"src": "11223:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11210:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "11210:2:6"
																					},
																					"nativeSrc": "11210:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11210:17:6"
																				},
																				"nativeSrc": "11207:43:6",
																				"nodeType": "YulIf",
																				"src": "11207:43:6"
																			},
																			{
																				"nativeSrc": "11263:25:6",
																				"nodeType": "YulAssignment",
																				"src": "11263:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11276:1:6",
																							"nodeType": "YulLiteral",
																							"src": "11276:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11279:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "11279:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11272:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "11272:3:6"
																					},
																					"nativeSrc": "11272:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11272:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11263:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11263:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11319:22:6",
																					"nodeType": "YulBlock",
																					"src": "11319:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11321:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "11321:16:6"
																								},
																								"nativeSrc": "11321:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "11321:18:6"
																							},
																							"nativeSrc": "11321:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "11321:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11307:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "11307:5:6"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11314:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "11314:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11304:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "11304:2:6"
																					},
																					"nativeSrc": "11304:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11304:14:6"
																				},
																				"nativeSrc": "11301:40:6",
																				"nodeType": "YulIf",
																				"src": "11301:40:6"
																			},
																			{
																				"nativeSrc": "11354:5:6",
																				"nodeType": "YulLeave",
																				"src": "11354:5:6"
																			}
																		]
																	},
																	"nativeSrc": "11178:191:6",
																	"nodeType": "YulCase",
																	"src": "11178:191:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11183:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11183:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11099:4:6",
																"nodeType": "YulIdentifier",
																"src": "11099:4:6"
															},
															"nativeSrc": "11092:277:6",
															"nodeType": "YulSwitch",
															"src": "11092:277:6"
														},
														{
															"body": {
																"nativeSrc": "11501:123:6",
																"nodeType": "YulBlock",
																"src": "11501:123:6",
																"statements": [
																	{
																		"nativeSrc": "11515:28:6",
																		"nodeType": "YulAssignment",
																		"src": "11515:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11528:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "11528:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11534:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "11534:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11524:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11524:3:6"
																			},
																			"nativeSrc": "11524:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11524:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11515:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "11515:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11574:22:6",
																			"nodeType": "YulBlock",
																			"src": "11574:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11576:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "11576:16:6"
																						},
																						"nativeSrc": "11576:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "11576:18:6"
																					},
																					"nativeSrc": "11576:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "11576:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11562:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "11562:5:6"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11569:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11569:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11559:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "11559:2:6"
																			},
																			"nativeSrc": "11559:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11559:14:6"
																		},
																		"nativeSrc": "11556:40:6",
																		"nodeType": "YulIf",
																		"src": "11556:40:6"
																	},
																	{
																		"nativeSrc": "11609:5:6",
																		"nodeType": "YulLeave",
																		"src": "11609:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11404:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "11404:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11410:2:6",
																						"nodeType": "YulLiteral",
																						"src": "11410:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11401:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11401:2:6"
																				},
																				"nativeSrc": "11401:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11401:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11418:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "11418:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11428:2:6",
																						"nodeType": "YulLiteral",
																						"src": "11428:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11415:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11415:2:6"
																				},
																				"nativeSrc": "11415:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11415:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11397:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11397:3:6"
																		},
																		"nativeSrc": "11397:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11397:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11453:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "11453:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11459:3:6",
																						"nodeType": "YulLiteral",
																						"src": "11459:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11450:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11450:2:6"
																				},
																				"nativeSrc": "11450:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11450:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11468:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "11468:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11478:2:6",
																						"nodeType": "YulLiteral",
																						"src": "11478:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11465:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11465:2:6"
																				},
																				"nativeSrc": "11465:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11465:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11446:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11446:3:6"
																		},
																		"nativeSrc": "11446:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11446:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11381:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11381:2:6"
																},
																"nativeSrc": "11381:111:6",
																"nodeType": "YulFunctionCall",
																"src": "11381:111:6"
															},
															"nativeSrc": "11378:246:6",
															"nodeType": "YulIf",
															"src": "11378:246:6"
														},
														{
															"nativeSrc": "11634:57:6",
															"nodeType": "YulAssignment",
															"src": "11634:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11668:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11668:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11671:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11671:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11677:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "11677:8:6"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11687:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11687:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11649:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "11649:18:6"
																},
																"nativeSrc": "11649:42:6",
																"nodeType": "YulFunctionCall",
																"src": "11649:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11634:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11634:5:6"
																},
																{
																	"name": "base",
																	"nativeSrc": "11641:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11641:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11730:22:6",
																"nodeType": "YulBlock",
																"src": "11730:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11732:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11732:16:6"
																			},
																			"nativeSrc": "11732:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11732:18:6"
																		},
																		"nativeSrc": "11732:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11732:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11707:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11707:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11718:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11718:3:6"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11723:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11723:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11714:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11714:3:6"
																		},
																		"nativeSrc": "11714:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11714:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11704:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11704:2:6"
																},
																"nativeSrc": "11704:25:6",
																"nodeType": "YulFunctionCall",
																"src": "11704:25:6"
															},
															"nativeSrc": "11701:51:6",
															"nodeType": "YulIf",
															"src": "11701:51:6"
														},
														{
															"nativeSrc": "11761:25:6",
															"nodeType": "YulAssignment",
															"src": "11761:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11774:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11774:5:6"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11781:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11781:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11770:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:6"
																},
																"nativeSrc": "11770:16:6",
																"nodeType": "YulFunctionCall",
																"src": "11770:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11761:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11761:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10719:1073:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10749:4:6",
														"nodeType": "YulTypedName",
														"src": "10749:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10755:8:6",
														"nodeType": "YulTypedName",
														"src": "10755:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10765:3:6",
														"nodeType": "YulTypedName",
														"src": "10765:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10773:5:6",
														"nodeType": "YulTypedName",
														"src": "10773:5:6",
														"type": ""
													}
												],
												"src": "10719:1073:6"
											},
											{
												"body": {
													"nativeSrc": "11841:43:6",
													"nodeType": "YulBlock",
													"src": "11841:43:6",
													"statements": [
														{
															"nativeSrc": "11851:27:6",
															"nodeType": "YulAssignment",
															"src": "11851:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11866:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11873:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11873:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11862:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11862:3:6"
																},
																"nativeSrc": "11862:16:6",
																"nodeType": "YulFunctionCall",
																"src": "11862:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11851:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11851:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "11798:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11823:5:6",
														"nodeType": "YulTypedName",
														"src": "11823:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11833:7:6",
														"nodeType": "YulTypedName",
														"src": "11833:7:6",
														"type": ""
													}
												],
												"src": "11798:86:6"
											},
											{
												"body": {
													"nativeSrc": "11954:217:6",
													"nodeType": "YulBlock",
													"src": "11954:217:6",
													"statements": [
														{
															"nativeSrc": "11964:31:6",
															"nodeType": "YulAssignment",
															"src": "11964:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11990:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11990:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11972:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11972:17:6"
																},
																"nativeSrc": "11972:23:6",
																"nodeType": "YulFunctionCall",
																"src": "11972:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11964:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11964:4:6"
																}
															]
														},
														{
															"nativeSrc": "12004:37:6",
															"nodeType": "YulAssignment",
															"src": "12004:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12032:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "12032:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12016:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "12016:15:6"
																},
																"nativeSrc": "12016:25:6",
																"nodeType": "YulFunctionCall",
																"src": "12016:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12004:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "12004:8:6"
																}
															]
														},
														{
															"nativeSrc": "12051:113:6",
															"nodeType": "YulAssignment",
															"src": "12051:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12081:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12081:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12087:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "12087:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12097:66:6",
																		"nodeType": "YulLiteral",
																		"src": "12097:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12060:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "12060:20:6"
																},
																"nativeSrc": "12060:104:6",
																"nodeType": "YulFunctionCall",
																"src": "12060:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12051:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12051:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11890:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11929:4:6",
														"nodeType": "YulTypedName",
														"src": "11929:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11935:8:6",
														"nodeType": "YulTypedName",
														"src": "11935:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11948:5:6",
														"nodeType": "YulTypedName",
														"src": "11948:5:6",
														"type": ""
													}
												],
												"src": "11890:281:6"
											},
											{
												"body": {
													"nativeSrc": "12225:362:6",
													"nodeType": "YulBlock",
													"src": "12225:362:6",
													"statements": [
														{
															"nativeSrc": "12235:25:6",
															"nodeType": "YulAssignment",
															"src": "12235:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12258:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12258:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12240:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12240:17:6"
																},
																"nativeSrc": "12240:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12240:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12235:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12235:1:6"
																}
															]
														},
														{
															"nativeSrc": "12269:25:6",
															"nodeType": "YulAssignment",
															"src": "12269:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12292:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12292:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12274:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12274:17:6"
																},
																"nativeSrc": "12274:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12274:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12269:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12269:1:6"
																}
															]
														},
														{
															"nativeSrc": "12303:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12303:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12326:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12326:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12329:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12329:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12322:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12322:3:6"
																},
																"nativeSrc": "12322:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12322:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12307:11:6",
																	"nodeType": "YulTypedName",
																	"src": "12307:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12340:41:6",
															"nodeType": "YulAssignment",
															"src": "12340:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12369:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "12369:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12351:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12351:17:6"
																},
																"nativeSrc": "12351:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12351:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12340:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "12340:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12558:22:6",
																"nodeType": "YulBlock",
																"src": "12558:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12560:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12560:16:6"
																			},
																			"nativeSrc": "12560:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12560:18:6"
																		},
																		"nativeSrc": "12560:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12560:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12491:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12491:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12484:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "12484:6:6"
																				},
																				"nativeSrc": "12484:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12484:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12514:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12514:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12521:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "12521:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12530:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "12530:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12517:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "12517:3:6"
																						},
																						"nativeSrc": "12517:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "12517:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12511:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "12511:2:6"
																				},
																				"nativeSrc": "12511:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12511:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12464:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12464:2:6"
																		},
																		"nativeSrc": "12464:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12464:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12444:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12444:6:6"
																},
																"nativeSrc": "12444:113:6",
																"nodeType": "YulFunctionCall",
																"src": "12444:113:6"
															},
															"nativeSrc": "12441:139:6",
															"nodeType": "YulIf",
															"src": "12441:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12177:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12208:1:6",
														"nodeType": "YulTypedName",
														"src": "12208:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12211:1:6",
														"nodeType": "YulTypedName",
														"src": "12211:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12217:7:6",
														"nodeType": "YulTypedName",
														"src": "12217:7:6",
														"type": ""
													}
												],
												"src": "12177:410:6"
											},
											{
												"body": {
													"nativeSrc": "12658:53:6",
													"nodeType": "YulBlock",
													"src": "12658:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12675:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12675:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12698:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12698:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12680:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "12680:17:6"
																		},
																		"nativeSrc": "12680:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12680:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12668:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12668:6:6"
																},
																"nativeSrc": "12668:37:6",
																"nodeType": "YulFunctionCall",
																"src": "12668:37:6"
															},
															"nativeSrc": "12668:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "12668:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12593:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12646:5:6",
														"nodeType": "YulTypedName",
														"src": "12646:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12653:3:6",
														"nodeType": "YulTypedName",
														"src": "12653:3:6",
														"type": ""
													}
												],
												"src": "12593:118:6"
											},
											{
												"body": {
													"nativeSrc": "12782:53:6",
													"nodeType": "YulBlock",
													"src": "12782:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12799:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12799:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12822:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12822:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12804:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "12804:17:6"
																		},
																		"nativeSrc": "12804:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12804:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12792:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12792:6:6"
																},
																"nativeSrc": "12792:37:6",
																"nodeType": "YulFunctionCall",
																"src": "12792:37:6"
															},
															"nativeSrc": "12792:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "12792:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12717:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12770:5:6",
														"nodeType": "YulTypedName",
														"src": "12770:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12777:3:6",
														"nodeType": "YulTypedName",
														"src": "12777:3:6",
														"type": ""
													}
												],
												"src": "12717:118:6"
											},
											{
												"body": {
													"nativeSrc": "12967:206:6",
													"nodeType": "YulBlock",
													"src": "12967:206:6",
													"statements": [
														{
															"nativeSrc": "12977:26:6",
															"nodeType": "YulAssignment",
															"src": "12977:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12989:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12989:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13000:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13000:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12985:3:6"
																},
																"nativeSrc": "12985:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12985:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12977:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12977:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13057:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13070:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13070:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13081:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13081:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13066:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13066:3:6"
																		},
																		"nativeSrc": "13066:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13066:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13013:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13013:43:6"
																},
																"nativeSrc": "13013:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13013:71:6"
															},
															"nativeSrc": "13013:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13013:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13138:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13138:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13151:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13151:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13162:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13162:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13147:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:6"
																		},
																		"nativeSrc": "13147:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13147:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13094:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13094:43:6"
																},
																"nativeSrc": "13094:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13094:72:6"
															},
															"nativeSrc": "13094:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13094:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12841:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12931:9:6",
														"nodeType": "YulTypedName",
														"src": "12931:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12943:6:6",
														"nodeType": "YulTypedName",
														"src": "12943:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12951:6:6",
														"nodeType": "YulTypedName",
														"src": "12951:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12962:4:6",
														"nodeType": "YulTypedName",
														"src": "12962:4:6",
														"type": ""
													}
												],
												"src": "12841:332:6"
											},
											{
												"body": {
													"nativeSrc": "13277:124:6",
													"nodeType": "YulBlock",
													"src": "13277:124:6",
													"statements": [
														{
															"nativeSrc": "13287:26:6",
															"nodeType": "YulAssignment",
															"src": "13287:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13299:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13299:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13310:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13310:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13295:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13295:3:6"
																},
																"nativeSrc": "13295:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13295:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13287:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13287:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13367:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13367:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13380:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13391:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13391:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:6"
																		},
																		"nativeSrc": "13376:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13376:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13323:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13323:43:6"
																},
																"nativeSrc": "13323:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13323:71:6"
															},
															"nativeSrc": "13323:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13323:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "13179:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13249:9:6",
														"nodeType": "YulTypedName",
														"src": "13249:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13261:6:6",
														"nodeType": "YulTypedName",
														"src": "13261:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13272:4:6",
														"nodeType": "YulTypedName",
														"src": "13272:4:6",
														"type": ""
													}
												],
												"src": "13179:222:6"
											},
											{
												"body": {
													"nativeSrc": "13451:147:6",
													"nodeType": "YulBlock",
													"src": "13451:147:6",
													"statements": [
														{
															"nativeSrc": "13461:25:6",
															"nodeType": "YulAssignment",
															"src": "13461:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13484:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13484:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13466:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13466:17:6"
																},
																"nativeSrc": "13466:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13466:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13461:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13461:1:6"
																}
															]
														},
														{
															"nativeSrc": "13495:25:6",
															"nodeType": "YulAssignment",
															"src": "13495:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13518:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13518:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13500:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13500:17:6"
																},
																"nativeSrc": "13500:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13500:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13495:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13495:1:6"
																}
															]
														},
														{
															"nativeSrc": "13529:16:6",
															"nodeType": "YulAssignment",
															"src": "13529:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13540:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13540:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13543:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13543:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13536:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13536:3:6"
																},
																"nativeSrc": "13536:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13536:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13529:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13529:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13569:22:6",
																"nodeType": "YulBlock",
																"src": "13569:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13571:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13571:16:6"
																			},
																			"nativeSrc": "13571:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13571:18:6"
																		},
																		"nativeSrc": "13571:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13571:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13561:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13561:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13564:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13564:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13558:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13558:2:6"
																},
																"nativeSrc": "13558:10:6",
																"nodeType": "YulFunctionCall",
																"src": "13558:10:6"
															},
															"nativeSrc": "13555:36:6",
															"nodeType": "YulIf",
															"src": "13555:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13407:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13438:1:6",
														"nodeType": "YulTypedName",
														"src": "13438:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13441:1:6",
														"nodeType": "YulTypedName",
														"src": "13441:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13447:3:6",
														"nodeType": "YulTypedName",
														"src": "13447:3:6",
														"type": ""
													}
												],
												"src": "13407:191:6"
											},
											{
												"body": {
													"nativeSrc": "13758:288:6",
													"nodeType": "YulBlock",
													"src": "13758:288:6",
													"statements": [
														{
															"nativeSrc": "13768:26:6",
															"nodeType": "YulAssignment",
															"src": "13768:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13780:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13780:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13791:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13791:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13776:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13776:3:6"
																},
																"nativeSrc": "13776:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13776:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13768:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13768:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13848:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13848:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13861:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13861:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13872:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13872:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13857:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13857:3:6"
																		},
																		"nativeSrc": "13857:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13857:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13804:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13804:43:6"
																},
																"nativeSrc": "13804:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13804:71:6"
															},
															"nativeSrc": "13804:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13804:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13929:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13929:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13942:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13942:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13953:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13953:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13938:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13938:3:6"
																		},
																		"nativeSrc": "13938:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13938:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13885:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13885:43:6"
																},
																"nativeSrc": "13885:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13885:72:6"
															},
															"nativeSrc": "13885:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13885:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14011:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14011:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14024:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14024:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14035:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14035:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14020:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14020:3:6"
																		},
																		"nativeSrc": "14020:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14020:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13967:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13967:43:6"
																},
																"nativeSrc": "13967:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13967:72:6"
															},
															"nativeSrc": "13967:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13967:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13604:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13714:9:6",
														"nodeType": "YulTypedName",
														"src": "13714:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13726:6:6",
														"nodeType": "YulTypedName",
														"src": "13726:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13734:6:6",
														"nodeType": "YulTypedName",
														"src": "13734:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13742:6:6",
														"nodeType": "YulTypedName",
														"src": "13742:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13753:4:6",
														"nodeType": "YulTypedName",
														"src": "13753:4:6",
														"type": ""
													}
												],
												"src": "13604:442:6"
											},
											{
												"body": {
													"nativeSrc": "14150:124:6",
													"nodeType": "YulBlock",
													"src": "14150:124:6",
													"statements": [
														{
															"nativeSrc": "14160:26:6",
															"nodeType": "YulAssignment",
															"src": "14160:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14172:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14172:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14183:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14183:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14168:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14168:3:6"
																},
																"nativeSrc": "14168:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14168:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14160:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14160:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14240:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14240:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14253:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14253:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14264:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14264:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14249:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14249:3:6"
																		},
																		"nativeSrc": "14249:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14249:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14196:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14196:43:6"
																},
																"nativeSrc": "14196:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14196:71:6"
															},
															"nativeSrc": "14196:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14196:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14052:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14122:9:6",
														"nodeType": "YulTypedName",
														"src": "14122:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14134:6:6",
														"nodeType": "YulTypedName",
														"src": "14134:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14145:4:6",
														"nodeType": "YulTypedName",
														"src": "14145:4:6",
														"type": ""
													}
												],
												"src": "14052:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611ebf380380611ebf8339818101604052810190610031919061058b565b83838160039081610042919061082b565b508060049081610052919061082b565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100c9826100a761010b60201b60201c565b600a6100b39190610a62565b836100be9190610aac565b61011360201b60201c565b7f45704679a40d4b2ffe28aa7324f021775faaca4d40917fef2cdf38e53fd90a2482826040516100fa929190610b0b565b60405180910390a150505050610bcc565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610183575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161017a9190610b32565b60405180910390fd5b6101945f838361019860201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101e8578060025f8282546101dc9190610b4b565b925050819055506102b6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610271578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161026893929190610b7e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102fd578060025f8282540392505081905550610347565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103a49190610bb3565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610410826103ca565b810181811067ffffffffffffffff8211171561042f5761042e6103da565b5b80604052505050565b5f6104416103b1565b905061044d8282610407565b919050565b5f67ffffffffffffffff82111561046c5761046b6103da565b5b610475826103ca565b9050602081019050919050565b8281835e5f83830152505050565b5f6104a261049d84610452565b610438565b9050828152602081018484840111156104be576104bd6103c6565b5b6104c9848285610482565b509392505050565b5f82601f8301126104e5576104e46103c2565b5b81516104f5848260208601610490565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610527826104fe565b9050919050565b6105378161051d565b8114610541575f80fd5b50565b5f815190506105528161052e565b92915050565b5f819050919050565b61056a81610558565b8114610574575f80fd5b50565b5f8151905061058581610561565b92915050565b5f805f80608085870312156105a3576105a26103ba565b5b5f85015167ffffffffffffffff8111156105c0576105bf6103be565b5b6105cc878288016104d1565b945050602085015167ffffffffffffffff8111156105ed576105ec6103be565b5b6105f9878288016104d1565b935050604061060a87828801610544565b925050606061061b87828801610577565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061067557607f821691505b60208210810361068857610687610631565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106ea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106af565b6106f486836106af565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61072f61072a61072584610558565b61070c565b610558565b9050919050565b5f819050919050565b61074883610715565b61075c61075482610736565b8484546106bb565b825550505050565b5f90565b610770610764565b61077b81848461073f565b505050565b5b8181101561079e576107935f82610768565b600181019050610781565b5050565b601f8211156107e3576107b48161068e565b6107bd846106a0565b810160208510156107cc578190505b6107e06107d8856106a0565b830182610780565b50505b505050565b5f82821c905092915050565b5f6108035f19846008026107e8565b1980831691505092915050565b5f61081b83836107f4565b9150826002028217905092915050565b61083482610627565b67ffffffffffffffff81111561084d5761084c6103da565b5b610857825461065e565b6108628282856107a2565b5f60209050601f831160018114610893575f8415610881578287015190505b61088b8582610810565b8655506108f2565b601f1984166108a18661068e565b5f5b828110156108c8578489015182556001820191506020850194506020810190506108a3565b868310156108e557848901516108e1601f8916826107f4565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561097c57808604811115610958576109576108fa565b5b60018516156109675780820291505b808102905061097585610927565b945061093c565b94509492505050565b5f826109945760019050610a4f565b816109a1575f9050610a4f565b81600181146109b757600281146109c1576109f0565b6001915050610a4f565b60ff8411156109d3576109d26108fa565b5b8360020a9150848211156109ea576109e96108fa565b5b50610a4f565b5060208310610133831016604e8410600b8410161715610a255782820a905083811115610a2057610a1f6108fa565b5b610a4f565b610a328484846001610933565b92509050818404811115610a4957610a486108fa565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610a6c82610558565b9150610a7783610a56565b9250610aa47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610985565b905092915050565b5f610ab682610558565b9150610ac183610558565b9250828202610acf81610558565b91508282048414831517610ae657610ae56108fa565b5b5092915050565b610af68161051d565b82525050565b610b0581610558565b82525050565b5f604082019050610b1e5f830185610aed565b610b2b6020830184610afc565b9392505050565b5f602082019050610b455f830184610aed565b92915050565b5f610b5582610558565b9150610b6083610558565b9250828201905080821115610b7857610b776108fa565b5b92915050565b5f606082019050610b915f830186610aed565b610b9e6020830185610afc565b610bab6040830184610afc565b949350505050565b5f602082019050610bc65f830184610afc565b92915050565b6112e680610bd95f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a08231146101815780638da5cb5b146101b157806395d89b41146101cf578063a9059cbb146101ed578063dd62ed3e1461021d576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024d565b6040516100c09190610c88565b60405180910390f35b6100e360048036038101906100de9190610d39565b6102dd565b6040516100f09190610d91565b60405180910390f35b6101016102ff565b60405161010e9190610db9565b60405180910390f35b610131600480360381019061012c9190610dd2565b610308565b60405161013e9190610d91565b60405180910390f35b61014f610336565b60405161015c9190610e3d565b60405180910390f35b61017f600480360381019061017a9190610d39565b61033e565b005b61019b60048036038101906101969190610e56565b610478565b6040516101a89190610db9565b60405180910390f35b6101b96104bd565b6040516101c69190610e90565b60405180910390f35b6101d76104e2565b6040516101e49190610c88565b60405180910390f35b61020760048036038101906102029190610d39565b610572565b6040516102149190610d91565b60405180910390f35b61023760048036038101906102329190610ea9565b610594565b6040516102449190610db9565b60405180910390f35b60606003805461025c90610f14565b80601f016020809104026020016040519081016040528092919081815260200182805461028890610f14565b80156102d35780601f106102aa576101008083540402835291602001916102d3565b820191905f5260205f20905b8154815290600101906020018083116102b657829003601f168201915b5050505050905090565b5f806102e7610616565b90506102f481858561061d565b600191505092915050565b5f600254905090565b5f80610312610616565b905061031f85828561062f565b61032a8585856106c1565b60019150509392505050565b5f6012905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490610f8e565b60405180910390fd5b806001811015610412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104099061101c565b60405180910390fd5b61043a8361041e610336565b600a61042a9190611196565b8461043591906111e0565b6107b1565b7f45704679a40d4b2ffe28aa7324f021775faaca4d40917fef2cdf38e53fd90a24838360405161046b929190611221565b60405180910390a1505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546104f190610f14565b80601f016020809104026020016040519081016040528092919081815260200182805461051d90610f14565b80156105685780601f1061053f57610100808354040283529160200191610568565b820191905f5260205f20905b81548152906001019060200180831161054b57829003601f168201915b5050505050905090565b5f8061057c610616565b90506105898185856106c1565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61062a8383836001610830565b505050565b5f61063a8484610594565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106bb57818110156106ac578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106a393929190611248565b60405180910390fd5b6106ba84848484035f610830565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610731575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107289190610e90565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a1575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107989190610e90565b60405180910390fd5b6107ac8383836109ff565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610821575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108189190610e90565b60405180910390fd5b61082c5f83836109ff565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108a0575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108979190610e90565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610910575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109079190610e90565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156109f9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109f09190610db9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4f578060025f828254610a43919061127d565b92505081905550610b1d565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ad8578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610acf93929190611248565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b64578060025f8282540392505081905550610bae565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c0b9190610db9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c5a82610c18565b610c648185610c22565b9350610c74818560208601610c32565b610c7d81610c40565b840191505092915050565b5f6020820190508181035f830152610ca08184610c50565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cd582610cac565b9050919050565b610ce581610ccb565b8114610cef575f80fd5b50565b5f81359050610d0081610cdc565b92915050565b5f819050919050565b610d1881610d06565b8114610d22575f80fd5b50565b5f81359050610d3381610d0f565b92915050565b5f8060408385031215610d4f57610d4e610ca8565b5b5f610d5c85828601610cf2565b9250506020610d6d85828601610d25565b9150509250929050565b5f8115159050919050565b610d8b81610d77565b82525050565b5f602082019050610da45f830184610d82565b92915050565b610db381610d06565b82525050565b5f602082019050610dcc5f830184610daa565b92915050565b5f805f60608486031215610de957610de8610ca8565b5b5f610df686828701610cf2565b9350506020610e0786828701610cf2565b9250506040610e1886828701610d25565b9150509250925092565b5f60ff82169050919050565b610e3781610e22565b82525050565b5f602082019050610e505f830184610e2e565b92915050565b5f60208284031215610e6b57610e6a610ca8565b5b5f610e7884828501610cf2565b91505092915050565b610e8a81610ccb565b82525050565b5f602082019050610ea35f830184610e81565b92915050565b5f8060408385031215610ebf57610ebe610ca8565b5b5f610ecc85828601610cf2565b9250506020610edd85828601610cf2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f2b57607f821691505b602082108103610f3e57610f3d610ee7565b5b50919050565b7f6e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610f78600983610c22565b9150610f8382610f44565b602082019050919050565b5f6020820190508181035f830152610fa581610f6c565b9050919050565b7f546865207175616e746974792063616e6e6f7420626520746f6f20736d616c6c5f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611006602183610c22565b915061101182610fac565b604082019050919050565b5f6020820190508181035f83015261103381610ffa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156110bc578086048111156110985761109761103a565b5b60018516156110a75780820291505b80810290506110b585611067565b945061107c565b94509492505050565b5f826110d4576001905061118f565b816110e1575f905061118f565b81600181146110f7576002811461110157611130565b600191505061118f565b60ff8411156111135761111261103a565b5b8360020a91508482111561112a5761112961103a565b5b5061118f565b5060208310610133831016604e8410600b84101617156111655782820a9050838111156111605761115f61103a565b5b61118f565b6111728484846001611073565b925090508184048111156111895761118861103a565b5b81810290505b9392505050565b5f6111a082610d06565b91506111ab83610e22565b92506111d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846110c5565b905092915050565b5f6111ea82610d06565b91506111f583610d06565b925082820261120381610d06565b9150828204841483151761121a5761121961103a565b5b5092915050565b5f6040820190506112345f830185610e81565b6112416020830184610daa565b9392505050565b5f60608201905061125b5f830186610e81565b6112686020830185610daa565b6112756040830184610daa565b949350505050565b5f61128782610d06565b915061129283610d06565b92508282019050808211156112aa576112a961103a565b5b9291505056fea26469706673582212209c560356188f46c95328b2f60cabf4b46ba57b35e99f5e118d7d3478900d5acc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1EBF CODESIZE SUB DUP1 PUSH2 0x1EBF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xC9 DUP3 PUSH2 0xA7 PUSH2 0x10B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST DUP4 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x113 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH32 0x45704679A40D4B2FFE28AA7324F021775FAACA4D40917FEF2CDF38E53FD90A24 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFA SWAP3 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP PUSH2 0xBCC JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x183 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x194 PUSH0 DUP4 DUP4 PUSH2 0x198 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2B6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x271 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x347 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x410 DUP3 PUSH2 0x3CA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x42F JUMPI PUSH2 0x42E PUSH2 0x3DA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x441 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x44D DUP3 DUP3 PUSH2 0x407 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0x3DA JUMP JUMPDEST JUMPDEST PUSH2 0x475 DUP3 PUSH2 0x3CA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A2 PUSH2 0x49D DUP5 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x3C6 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP5 DUP3 DUP6 PUSH2 0x482 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4E5 JUMPI PUSH2 0x4E4 PUSH2 0x3C2 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4F5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x527 DUP3 PUSH2 0x4FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537 DUP2 PUSH2 0x51D JUMP JUMPDEST DUP2 EQ PUSH2 0x541 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x552 DUP2 PUSH2 0x52E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x558 JUMP JUMPDEST DUP2 EQ PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x585 DUP2 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5A3 JUMPI PUSH2 0x5A2 PUSH2 0x3BA JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x3BE JUMP JUMPDEST JUMPDEST PUSH2 0x5CC DUP8 DUP3 DUP9 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5EC PUSH2 0x3BE JUMP JUMPDEST JUMPDEST PUSH2 0x5F9 DUP8 DUP3 DUP9 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x60A DUP8 DUP3 DUP9 ADD PUSH2 0x544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x61B DUP8 DUP3 DUP9 ADD PUSH2 0x577 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x675 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0x631 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x6EA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x6F4 DUP7 DUP4 PUSH2 0x6AF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x72F PUSH2 0x72A PUSH2 0x725 DUP5 PUSH2 0x558 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x748 DUP4 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x75C PUSH2 0x754 DUP3 PUSH2 0x736 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6BB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x764 JUMP JUMPDEST PUSH2 0x77B DUP2 DUP5 DUP5 PUSH2 0x73F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x79E JUMPI PUSH2 0x793 PUSH0 DUP3 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x781 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7E3 JUMPI PUSH2 0x7B4 DUP2 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x7BD DUP5 PUSH2 0x6A0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7CC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7E0 PUSH2 0x7D8 DUP6 PUSH2 0x6A0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x780 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x803 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7E8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x81B DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x834 DUP3 PUSH2 0x627 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x3DA JUMP JUMPDEST JUMPDEST PUSH2 0x857 DUP3 SLOAD PUSH2 0x65E JUMP JUMPDEST PUSH2 0x862 DUP3 DUP3 DUP6 PUSH2 0x7A2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x893 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x881 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x88B DUP6 DUP3 PUSH2 0x810 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x8A1 DUP7 PUSH2 0x68E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8C8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8A3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8E5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8E1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7F4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x97C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x958 JUMPI PUSH2 0x957 PUSH2 0x8FA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x967 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x975 DUP6 PUSH2 0x927 JUMP JUMPDEST SWAP5 POP PUSH2 0x93C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x994 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xA4F JUMP JUMPDEST DUP2 PUSH2 0x9A1 JUMPI PUSH0 SWAP1 POP PUSH2 0xA4F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x9B7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9C1 JUMPI PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA4F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9D3 JUMPI PUSH2 0x9D2 PUSH2 0x8FA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x9EA JUMPI PUSH2 0x9E9 PUSH2 0x8FA JUMP JUMPDEST JUMPDEST POP PUSH2 0xA4F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA25 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA1F PUSH2 0x8FA JUMP JUMPDEST JUMPDEST PUSH2 0xA4F JUMP JUMPDEST PUSH2 0xA32 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x933 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xA49 JUMPI PUSH2 0xA48 PUSH2 0x8FA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6C DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP2 POP PUSH2 0xA77 DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB6 DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC1 DUP4 PUSH2 0x558 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xACF DUP2 PUSH2 0x558 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x8FA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF6 DUP2 PUSH2 0x51D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB1E PUSH0 DUP4 ADD DUP6 PUSH2 0xAED JUMP JUMPDEST PUSH2 0xB2B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB45 PUSH0 DUP4 ADD DUP5 PUSH2 0xAED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB55 DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP2 POP PUSH2 0xB60 DUP4 PUSH2 0x558 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB78 JUMPI PUSH2 0xB77 PUSH2 0x8FA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB91 PUSH0 DUP4 ADD DUP7 PUSH2 0xAED JUMP JUMPDEST PUSH2 0xB9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0xBAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC6 PUSH0 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E6 DUP1 PUSH2 0xBD9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21D JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25C SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E7 PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F4 DUP2 DUP6 DUP6 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x312 PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH2 0x31F DUP6 DUP3 DUP6 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x32A DUP6 DUP6 DUP6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x41E PUSH2 0x336 JUMP JUMPDEST PUSH1 0xA PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST DUP5 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH32 0x45704679A40D4B2FFE28AA7324F021775FAACA4D40917FEF2CDF38E53FD90A24 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x46B SWAP3 SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4F1 SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x51D SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x568 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x568 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x57C PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH2 0x589 DUP2 DUP6 DUP6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x62A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x830 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63A DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6BB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6AC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x830 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x731 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AC DUP4 DUP4 DUP4 PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82C PUSH0 DUP4 DUP4 PUSH2 0x9FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x910 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x9F9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB1D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAD8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB64 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBAE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5A DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC64 DUP2 DUP6 PUSH2 0xC22 JUMP JUMPDEST SWAP4 POP PUSH2 0xC74 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST PUSH2 0xC7D DUP2 PUSH2 0xC40 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA0 DUP2 DUP5 PUSH2 0xC50 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD5 DUP3 PUSH2 0xCAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE5 DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP2 EQ PUSH2 0xCEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD00 DUP2 PUSH2 0xCDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP2 EQ PUSH2 0xD22 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD33 DUP2 PUSH2 0xD0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD5C DUP6 DUP3 DUP7 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD6D DUP6 DUP3 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB3 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCC PUSH0 DUP4 ADD DUP5 PUSH2 0xDAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH2 0xDE8 PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF6 DUP7 DUP3 DUP8 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE07 DUP7 DUP3 DUP8 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE18 DUP7 DUP3 DUP8 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE50 PUSH0 DUP4 ADD DUP5 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE78 DUP5 DUP3 DUP6 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA3 PUSH0 DUP4 ADD DUP5 PUSH2 0xE81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xECC DUP6 DUP3 DUP7 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDD DUP6 DUP3 DUP7 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF3E JUMPI PUSH2 0xF3D PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF78 PUSH1 0x9 DUP4 PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP PUSH2 0xF83 DUP3 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA5 DUP2 PUSH2 0xF6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865207175616E746974792063616E6E6F7420626520746F6F20736D616C6C PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1006 PUSH1 0x21 DUP4 PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1011 DUP3 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1033 DUP2 PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x10BC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0x103A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x10A7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x10B5 DUP6 PUSH2 0x1067 JUMP JUMPDEST SWAP5 POP PUSH2 0x107C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10D4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x118F JUMP JUMPDEST DUP2 PUSH2 0x10E1 JUMPI PUSH0 SWAP1 POP PUSH2 0x118F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x10F7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1101 JUMPI PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x118F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1113 JUMPI PUSH2 0x1112 PUSH2 0x103A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x112A JUMPI PUSH2 0x1129 PUSH2 0x103A JUMP JUMPDEST JUMPDEST POP PUSH2 0x118F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1165 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1160 JUMPI PUSH2 0x115F PUSH2 0x103A JUMP JUMPDEST JUMPDEST PUSH2 0x118F JUMP JUMPDEST PUSH2 0x1172 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1073 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x103A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11A0 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AB DUP4 PUSH2 0xE22 JUMP JUMPDEST SWAP3 POP PUSH2 0x11D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11EA DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F5 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1203 DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x121A JUMPI PUSH2 0x1219 PUSH2 0x103A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1234 PUSH0 DUP4 ADD DUP6 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x1241 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDAA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x125B PUSH0 DUP4 ADD DUP7 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x1268 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDAA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1287 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1292 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12AA JUMPI PUSH2 0x12A9 PUSH2 0x103A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 JUMP SUB JUMP XOR DUP16 CHAINID 0xC9 MSTORE8 0x28 0xB2 0xF6 0xC 0xAB DELEGATECALL 0xB4 PUSH12 0xA57B35E99F5E118D7D347890 0xD GAS 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "190:975:5:-:0;;;366:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;459:5;465:7;1675:5:1;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;492:10:5::1;484:5;;:18;;;;;;;;;;;;;;;;;;513:40;519:8;542:10;:8;;;:10;;:::i;:::-;536:2;:16;;;;:::i;:::-;529:4;:23;;;;:::i;:::-;513:5;;;:40;;:::i;:::-;593:25;603:8;613:4;593:25;;;;;;;:::i;:::-;;;;;;;;366:260:::0;;;;190:975;;2707:82:1;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:77::-;3118:7;3147:5;3136:16;;3081:77;;;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:143::-;3349:5;3380:6;3374:13;3365:22;;3396:33;3423:5;3396:33;:::i;:::-;3292:143;;;;:::o;3441:1166::-;3558:6;3566;3574;3582;3631:3;3619:9;3610:7;3606:23;3602:33;3599:120;;;3638:79;;:::i;:::-;3599:120;3779:1;3768:9;3764:17;3758:24;3809:18;3801:6;3798:30;3795:117;;;3831:79;;:::i;:::-;3795:117;3936:74;4002:7;3993:6;3982:9;3978:22;3936:74;:::i;:::-;3926:84;;3729:291;4080:2;4069:9;4065:18;4059:25;4111:18;4103:6;4100:30;4097:117;;;4133:79;;:::i;:::-;4097:117;4238:74;4304:7;4295:6;4284:9;4280:22;4238:74;:::i;:::-;4228:84;;4030:292;4361:2;4387:64;4443:7;4434:6;4423:9;4419:22;4387:64;:::i;:::-;4377:74;;4332:129;4500:2;4526:64;4582:7;4573:6;4562:9;4558:22;4526:64;:::i;:::-;4516:74;;4471:129;3441:1166;;;;;;;:::o;4613:99::-;4665:6;4699:5;4693:12;4683:22;;4613:99;;;:::o;4718:180::-;4766:77;4763:1;4756:88;4863:4;4860:1;4853:15;4887:4;4884:1;4877:15;4904:320;4948:6;4985:1;4979:4;4975:12;4965:22;;5032:1;5026:4;5022:12;5053:18;5043:81;;5109:4;5101:6;5097:17;5087:27;;5043:81;5171:2;5163:6;5160:14;5140:18;5137:38;5134:84;;5190:18;;:::i;:::-;5134:84;4955:269;4904:320;;;:::o;5230:141::-;5279:4;5302:3;5294:11;;5325:3;5322:1;5315:14;5359:4;5356:1;5346:18;5338:26;;5230:141;;;:::o;5377:93::-;5414:6;5461:2;5456;5449:5;5445:14;5441:23;5431:33;;5377:93;;;:::o;5476:107::-;5520:8;5570:5;5564:4;5560:16;5539:37;;5476:107;;;;:::o;5589:393::-;5658:6;5708:1;5696:10;5692:18;5731:97;5761:66;5750:9;5731:97;:::i;:::-;5849:39;5879:8;5868:9;5849:39;:::i;:::-;5837:51;;5921:4;5917:9;5910:5;5906:21;5897:30;;5970:4;5960:8;5956:19;5949:5;5946:30;5936:40;;5665:317;;5589:393;;;;;:::o;5988:60::-;6016:3;6037:5;6030:12;;5988:60;;;:::o;6054:142::-;6104:9;6137:53;6155:34;6164:24;6182:5;6164:24;:::i;:::-;6155:34;:::i;:::-;6137:53;:::i;:::-;6124:66;;6054:142;;;:::o;6202:75::-;6245:3;6266:5;6259:12;;6202:75;;;:::o;6283:269::-;6393:39;6424:7;6393:39;:::i;:::-;6454:91;6503:41;6527:16;6503:41;:::i;:::-;6495:6;6488:4;6482:11;6454:91;:::i;:::-;6448:4;6441:105;6359:193;6283:269;;;:::o;6558:73::-;6603:3;6558:73;:::o;6637:189::-;6714:32;;:::i;:::-;6755:65;6813:6;6805;6799:4;6755:65;:::i;:::-;6690:136;6637:189;;:::o;6832:186::-;6892:120;6909:3;6902:5;6899:14;6892:120;;;6963:39;7000:1;6993:5;6963:39;:::i;:::-;6936:1;6929:5;6925:13;6916:22;;6892:120;;;6832:186;;:::o;7024:543::-;7125:2;7120:3;7117:11;7114:446;;;7159:38;7191:5;7159:38;:::i;:::-;7243:29;7261:10;7243:29;:::i;:::-;7233:8;7229:44;7426:2;7414:10;7411:18;7408:49;;;7447:8;7432:23;;7408:49;7470:80;7526:22;7544:3;7526:22;:::i;:::-;7516:8;7512:37;7499:11;7470:80;:::i;:::-;7129:431;;7114:446;7024:543;;;:::o;7573:117::-;7627:8;7677:5;7671:4;7667:16;7646:37;;7573:117;;;;:::o;7696:169::-;7740:6;7773:51;7821:1;7817:6;7809:5;7806:1;7802:13;7773:51;:::i;:::-;7769:56;7854:4;7848;7844:15;7834:25;;7747:118;7696:169;;;;:::o;7870:295::-;7946:4;8092:29;8117:3;8111:4;8092:29;:::i;:::-;8084:37;;8154:3;8151:1;8147:11;8141:4;8138:21;8130:29;;7870:295;;;;:::o;8170:1395::-;8287:37;8320:3;8287:37;:::i;:::-;8389:18;8381:6;8378:30;8375:56;;;8411:18;;:::i;:::-;8375:56;8455:38;8487:4;8481:11;8455:38;:::i;:::-;8540:67;8600:6;8592;8586:4;8540:67;:::i;:::-;8634:1;8658:4;8645:17;;8690:2;8682:6;8679:14;8707:1;8702:618;;;;9364:1;9381:6;9378:77;;;9430:9;9425:3;9421:19;9415:26;9406:35;;9378:77;9481:67;9541:6;9534:5;9481:67;:::i;:::-;9475:4;9468:81;9337:222;8672:887;;8702:618;8754:4;8750:9;8742:6;8738:22;8788:37;8820:4;8788:37;:::i;:::-;8847:1;8861:208;8875:7;8872:1;8869:14;8861:208;;;8954:9;8949:3;8945:19;8939:26;8931:6;8924:42;9005:1;8997:6;8993:14;8983:24;;9052:2;9041:9;9037:18;9024:31;;8898:4;8895:1;8891:12;8886:17;;8861:208;;;9097:6;9088:7;9085:19;9082:179;;;9155:9;9150:3;9146:19;9140:26;9198:48;9240:4;9232:6;9228:17;9217:9;9198:48;:::i;:::-;9190:6;9183:64;9105:156;9082:179;9307:1;9303;9295:6;9291:14;9287:22;9281:4;9274:36;8709:611;;;8672:887;;8262:1303;;;8170:1395;;:::o;9571:180::-;9619:77;9616:1;9609:88;9716:4;9713:1;9706:15;9740:4;9737:1;9730:15;9757:102;9799:8;9846:5;9843:1;9839:13;9818:34;;9757:102;;;:::o;9865:848::-;9926:5;9933:4;9957:6;9948:15;;9981:5;9972:14;;9995:712;10016:1;10006:8;10003:15;9995:712;;;10111:4;10106:3;10102:14;10096:4;10093:24;10090:50;;;10120:18;;:::i;:::-;10090:50;10170:1;10160:8;10156:16;10153:451;;;10585:4;10578:5;10574:16;10565:25;;10153:451;10635:4;10629;10625:15;10617:23;;10665:32;10688:8;10665:32;:::i;:::-;10653:44;;9995:712;;;9865:848;;;;;;;:::o;10719:1073::-;10773:5;10964:8;10954:40;;10985:1;10976:10;;10987:5;;10954:40;11013:4;11003:36;;11030:1;11021:10;;11032:5;;11003:36;11099:4;11147:1;11142:27;;;;11183:1;11178:191;;;;11092:277;;11142:27;11160:1;11151:10;;11162:5;;;11178:191;11223:3;11213:8;11210:17;11207:43;;;11230:18;;:::i;:::-;11207:43;11279:8;11276:1;11272:16;11263:25;;11314:3;11307:5;11304:14;11301:40;;;11321:18;;:::i;:::-;11301:40;11354:5;;;11092:277;;11478:2;11468:8;11465:16;11459:3;11453:4;11450:13;11446:36;11428:2;11418:8;11415:16;11410:2;11404:4;11401:12;11397:35;11381:111;11378:246;;;11534:8;11528:4;11524:19;11515:28;;11569:3;11562:5;11559:14;11556:40;;;11576:18;;:::i;:::-;11556:40;11609:5;;11378:246;11649:42;11687:3;11677:8;11671:4;11668:1;11649:42;:::i;:::-;11634:57;;;;11723:4;11718:3;11714:14;11707:5;11704:25;11701:51;;;11732:18;;:::i;:::-;11701:51;11781:4;11774:5;11770:16;11761:25;;10719:1073;;;;;;:::o;11798:86::-;11833:7;11873:4;11866:5;11862:16;11851:27;;11798:86;;;:::o;11890:281::-;11948:5;11972:23;11990:4;11972:23;:::i;:::-;11964:31;;12016:25;12032:8;12016:25;:::i;:::-;12004:37;;12060:104;12097:66;12087:8;12081:4;12060:104;:::i;:::-;12051:113;;11890:281;;;;:::o;12177:410::-;12217:7;12240:20;12258:1;12240:20;:::i;:::-;12235:25;;12274:20;12292:1;12274:20;:::i;:::-;12269:25;;12329:1;12326;12322:9;12351:30;12369:11;12351:30;:::i;:::-;12340:41;;12530:1;12521:7;12517:15;12514:1;12511:22;12491:1;12484:9;12464:83;12441:139;;12560:18;;:::i;:::-;12441:139;12225:362;12177:410;;;;:::o;12593:118::-;12680:24;12698:5;12680:24;:::i;:::-;12675:3;12668:37;12593:118;;:::o;12717:::-;12804:24;12822:5;12804:24;:::i;:::-;12799:3;12792:37;12717:118;;:::o;12841:332::-;12962:4;13000:2;12989:9;12985:18;12977:26;;13013:71;13081:1;13070:9;13066:17;13057:6;13013:71;:::i;:::-;13094:72;13162:2;13151:9;13147:18;13138:6;13094:72;:::i;:::-;12841:332;;;;;:::o;13179:222::-;13272:4;13310:2;13299:9;13295:18;13287:26;;13323:71;13391:1;13380:9;13376:17;13367:6;13323:71;:::i;:::-;13179:222;;;;:::o;13407:191::-;13447:3;13466:20;13484:1;13466:20;:::i;:::-;13461:25;;13500:20;13518:1;13500:20;:::i;:::-;13495:25;;13543:1;13540;13536:9;13529:16;;13564:3;13561:1;13558:10;13555:36;;;13571:18;;:::i;:::-;13555:36;13407:191;;;;:::o;13604:442::-;13753:4;13791:2;13780:9;13776:18;13768:26;;13804:71;13872:1;13861:9;13857:17;13848:6;13804:71;:::i;:::-;13885:72;13953:2;13942:9;13938:18;13929:6;13885:72;:::i;:::-;13967;14035:2;14024:9;14020:18;14011:6;13967:72;:::i;:::-;13604:442;;;;;;:::o;14052:222::-;14145:4;14183:2;14172:9;14168:18;14160:26;;14196:71;14264:1;14253:9;14249:17;14240:6;14196:71;:::i;:::-;14052:222;;;;:::o;190:975:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1565,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 2096,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 1969,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1558,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1583,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1729,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2559,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1428,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 733,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1144,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 822,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_887": {
									"entryPoint": 830,
									"id": 887,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 589,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_792": {
									"entryPoint": 1213,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 1250,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 767,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 776,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1394,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12319:6",
										"nodeType": "YulBlock",
										"src": "0:12319:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5146:53:6",
													"nodeType": "YulBlock",
													"src": "5146:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:6"
																		},
																		"nativeSrc": "5168:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:6"
																},
																"nativeSrc": "5156:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:6"
															},
															"nativeSrc": "5156:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:6",
														"nodeType": "YulTypedName",
														"src": "5134:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:6",
														"nodeType": "YulTypedName",
														"src": "5141:3:6",
														"type": ""
													}
												],
												"src": "5081:118:6"
											},
											{
												"body": {
													"nativeSrc": "5303:124:6",
													"nodeType": "YulBlock",
													"src": "5303:124:6",
													"statements": [
														{
															"nativeSrc": "5313:26:6",
															"nodeType": "YulAssignment",
															"src": "5313:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:6"
																},
																"nativeSrc": "5321:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:6"
																		},
																		"nativeSrc": "5402:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:6"
																},
																"nativeSrc": "5349:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:6"
															},
															"nativeSrc": "5349:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:6",
														"nodeType": "YulTypedName",
														"src": "5275:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:6",
														"nodeType": "YulTypedName",
														"src": "5287:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:6",
														"nodeType": "YulTypedName",
														"src": "5298:4:6",
														"type": ""
													}
												],
												"src": "5205:222:6"
											},
											{
												"body": {
													"nativeSrc": "5516:391:6",
													"nodeType": "YulBlock",
													"src": "5516:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:6",
																"nodeType": "YulBlock",
																"src": "5562:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:6"
																			},
																			"nativeSrc": "5564:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:6"
																		},
																		"nativeSrc": "5564:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:6"
																		},
																		"nativeSrc": "5533:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:6"
																},
																"nativeSrc": "5529:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:6"
															},
															"nativeSrc": "5526:119:6",
															"nodeType": "YulIf",
															"src": "5526:119:6"
														},
														{
															"nativeSrc": "5655:117:6",
															"nodeType": "YulBlock",
															"src": "5655:117:6",
															"statements": [
																{
																	"nativeSrc": "5670:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:6"
																				},
																				"nativeSrc": "5730:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:6"
																		},
																		"nativeSrc": "5709:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:6",
															"nodeType": "YulBlock",
															"src": "5782:118:6",
															"statements": [
																{
																	"nativeSrc": "5797:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:6"
																				},
																				"nativeSrc": "5858:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:6"
																		},
																		"nativeSrc": "5837:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:6",
														"nodeType": "YulTypedName",
														"src": "5478:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:6",
														"nodeType": "YulTypedName",
														"src": "5489:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:6",
														"nodeType": "YulTypedName",
														"src": "5501:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:6",
														"nodeType": "YulTypedName",
														"src": "5509:6:6",
														"type": ""
													}
												],
												"src": "5433:474:6"
											},
											{
												"body": {
													"nativeSrc": "5941:152:6",
													"nodeType": "YulBlock",
													"src": "5941:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:6"
																},
																"nativeSrc": "5951:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:6"
															},
															"nativeSrc": "5951:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:6"
																},
																"nativeSrc": "6048:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:6"
															},
															"nativeSrc": "6048:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:6"
																},
																"nativeSrc": "6072:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:6"
															},
															"nativeSrc": "6072:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:6"
											},
											{
												"body": {
													"nativeSrc": "6150:269:6",
													"nodeType": "YulBlock",
													"src": "6150:269:6",
													"statements": [
														{
															"nativeSrc": "6160:22:6",
															"nodeType": "YulAssignment",
															"src": "6160:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:6"
																},
																"nativeSrc": "6170:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:6"
																}
															]
														},
														{
															"nativeSrc": "6191:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:6"
																},
																"nativeSrc": "6217:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:6",
																"nodeType": "YulBlock",
																"src": "6268:51:6",
																"statements": [
																	{
																		"nativeSrc": "6282:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:6"
																			},
																			"nativeSrc": "6292:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:6"
																},
																"nativeSrc": "6241:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:6"
															},
															"nativeSrc": "6238:81:6",
															"nodeType": "YulIf",
															"src": "6238:81:6"
														},
														{
															"body": {
																"nativeSrc": "6371:42:6",
																"nodeType": "YulBlock",
																"src": "6371:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:6"
																			},
																			"nativeSrc": "6385:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:6"
																		},
																		"nativeSrc": "6385:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:6"
																		},
																		"nativeSrc": "6355:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:6"
																},
																"nativeSrc": "6332:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:6"
															},
															"nativeSrc": "6329:84:6",
															"nodeType": "YulIf",
															"src": "6329:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:6",
														"nodeType": "YulTypedName",
														"src": "6134:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:6",
														"nodeType": "YulTypedName",
														"src": "6143:6:6",
														"type": ""
													}
												],
												"src": "6099:320:6"
											},
											{
												"body": {
													"nativeSrc": "6531:53:6",
													"nodeType": "YulBlock",
													"src": "6531:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:6"
																		},
																		"nativeSrc": "6549:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:6"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6565:11:6",
																		"nodeType": "YulLiteral",
																		"src": "6565:11:6",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:6"
																},
																"nativeSrc": "6542:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6542:35:6"
															},
															"nativeSrc": "6542:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6542:35:6"
														}
													]
												},
												"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
												"nativeSrc": "6425:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:6",
														"nodeType": "YulTypedName",
														"src": "6523:6:6",
														"type": ""
													}
												],
												"src": "6425:159:6"
											},
											{
												"body": {
													"nativeSrc": "6736:219:6",
													"nodeType": "YulBlock",
													"src": "6736:219:6",
													"statements": [
														{
															"nativeSrc": "6746:73:6",
															"nodeType": "YulAssignment",
															"src": "6746:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6812:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6812:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6817:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6817:1:6",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6753:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6753:58:6"
																},
																"nativeSrc": "6753:66:6",
																"nodeType": "YulFunctionCall",
																"src": "6753:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6746:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6917:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6917:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																	"nativeSrc": "6828:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6828:88:6"
																},
																"nativeSrc": "6828:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6828:93:6"
															},
															"nativeSrc": "6828:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6828:93:6"
														},
														{
															"nativeSrc": "6930:19:6",
															"nodeType": "YulAssignment",
															"src": "6930:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6941:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6941:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6946:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6946:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6937:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6937:3:6"
																},
																"nativeSrc": "6937:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6937:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6930:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6930:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6590:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6724:3:6",
														"nodeType": "YulTypedName",
														"src": "6724:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6732:3:6",
														"nodeType": "YulTypedName",
														"src": "6732:3:6",
														"type": ""
													}
												],
												"src": "6590:365:6"
											},
											{
												"body": {
													"nativeSrc": "7132:248:6",
													"nodeType": "YulBlock",
													"src": "7132:248:6",
													"statements": [
														{
															"nativeSrc": "7142:26:6",
															"nodeType": "YulAssignment",
															"src": "7142:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7154:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7154:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7165:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7165:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7150:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7150:3:6"
																},
																"nativeSrc": "7150:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7150:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7142:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7142:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7189:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7200:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7200:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7185:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:6"
																		},
																		"nativeSrc": "7185:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7185:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7208:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7208:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7214:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7214:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7204:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7204:3:6"
																		},
																		"nativeSrc": "7204:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7204:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7178:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:6"
																},
																"nativeSrc": "7178:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7178:47:6"
															},
															"nativeSrc": "7178:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7178:47:6"
														},
														{
															"nativeSrc": "7234:139:6",
															"nodeType": "YulAssignment",
															"src": "7234:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7368:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7368:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7242:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7242:124:6"
																},
																"nativeSrc": "7242:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7242:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7234:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7234:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6961:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7112:9:6",
														"nodeType": "YulTypedName",
														"src": "7112:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7127:4:6",
														"nodeType": "YulTypedName",
														"src": "7127:4:6",
														"type": ""
													}
												],
												"src": "6961:419:6"
											},
											{
												"body": {
													"nativeSrc": "7492:114:6",
													"nodeType": "YulBlock",
													"src": "7492:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7514:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7514:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7522:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7522:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7510:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7510:3:6"
																		},
																		"nativeSrc": "7510:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7510:14:6"
																	},
																	{
																		"hexValue": "546865207175616e746974792063616e6e6f7420626520746f6f20736d616c6c",
																		"kind": "string",
																		"nativeSrc": "7526:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7526:34:6",
																		"type": "",
																		"value": "The quantity cannot be too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7503:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7503:6:6"
																},
																"nativeSrc": "7503:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7503:58:6"
															},
															"nativeSrc": "7503:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7503:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7590:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7590:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7578:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7578:3:6"
																		},
																		"nativeSrc": "7578:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7578:15:6"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "7595:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7595:3:6",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7571:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7571:6:6"
																},
																"nativeSrc": "7571:28:6",
																"nodeType": "YulFunctionCall",
																"src": "7571:28:6"
															},
															"nativeSrc": "7571:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "7571:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7",
												"nativeSrc": "7386:220:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7484:6:6",
														"nodeType": "YulTypedName",
														"src": "7484:6:6",
														"type": ""
													}
												],
												"src": "7386:220:6"
											},
											{
												"body": {
													"nativeSrc": "7758:220:6",
													"nodeType": "YulBlock",
													"src": "7758:220:6",
													"statements": [
														{
															"nativeSrc": "7768:74:6",
															"nodeType": "YulAssignment",
															"src": "7768:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7834:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7834:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7839:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7839:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7775:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7775:58:6"
																},
																"nativeSrc": "7775:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7775:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7768:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7768:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7940:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7940:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7",
																	"nativeSrc": "7851:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7851:88:6"
																},
																"nativeSrc": "7851:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7851:93:6"
															},
															"nativeSrc": "7851:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7851:93:6"
														},
														{
															"nativeSrc": "7953:19:6",
															"nodeType": "YulAssignment",
															"src": "7953:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7964:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7964:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7969:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7969:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7960:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7960:3:6"
																},
																"nativeSrc": "7960:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7960:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7953:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7612:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7746:3:6",
														"nodeType": "YulTypedName",
														"src": "7746:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7754:3:6",
														"nodeType": "YulTypedName",
														"src": "7754:3:6",
														"type": ""
													}
												],
												"src": "7612:366:6"
											},
											{
												"body": {
													"nativeSrc": "8155:248:6",
													"nodeType": "YulBlock",
													"src": "8155:248:6",
													"statements": [
														{
															"nativeSrc": "8165:26:6",
															"nodeType": "YulAssignment",
															"src": "8165:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8177:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8177:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8188:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8188:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8173:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8173:3:6"
																},
																"nativeSrc": "8173:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8173:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8165:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8165:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8212:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8223:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8223:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8208:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8208:3:6"
																		},
																		"nativeSrc": "8208:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8208:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8231:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8231:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8237:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8237:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8227:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8227:3:6"
																		},
																		"nativeSrc": "8227:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8227:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8201:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8201:6:6"
																},
																"nativeSrc": "8201:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8201:47:6"
															},
															"nativeSrc": "8201:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8201:47:6"
														},
														{
															"nativeSrc": "8257:139:6",
															"nodeType": "YulAssignment",
															"src": "8257:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8391:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8391:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8265:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8265:124:6"
																},
																"nativeSrc": "8265:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8265:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8257:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8257:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7984:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8135:9:6",
														"nodeType": "YulTypedName",
														"src": "8135:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8150:4:6",
														"nodeType": "YulTypedName",
														"src": "8150:4:6",
														"type": ""
													}
												],
												"src": "7984:419:6"
											},
											{
												"body": {
													"nativeSrc": "8437:152:6",
													"nodeType": "YulBlock",
													"src": "8437:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8454:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8454:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8457:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8457:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8447:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8447:6:6"
																},
																"nativeSrc": "8447:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8447:88:6"
															},
															"nativeSrc": "8447:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8447:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8551:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8551:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8554:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8554:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:6"
																},
																"nativeSrc": "8544:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8544:15:6"
															},
															"nativeSrc": "8544:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8544:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8575:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8575:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8578:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8578:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8568:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8568:6:6"
																},
																"nativeSrc": "8568:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8568:15:6"
															},
															"nativeSrc": "8568:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8568:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8409:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8409:180:6"
											},
											{
												"body": {
													"nativeSrc": "8646:51:6",
													"nodeType": "YulBlock",
													"src": "8646:51:6",
													"statements": [
														{
															"nativeSrc": "8656:34:6",
															"nodeType": "YulAssignment",
															"src": "8656:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8681:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8681:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8684:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8684:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8677:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8677:3:6"
																},
																"nativeSrc": "8677:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8677:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8656:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "8656:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8595:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8627:5:6",
														"nodeType": "YulTypedName",
														"src": "8627:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8637:8:6",
														"nodeType": "YulTypedName",
														"src": "8637:8:6",
														"type": ""
													}
												],
												"src": "8595:102:6"
											},
											{
												"body": {
													"nativeSrc": "8776:775:6",
													"nodeType": "YulBlock",
													"src": "8776:775:6",
													"statements": [
														{
															"nativeSrc": "8786:15:6",
															"nodeType": "YulAssignment",
															"src": "8786:15:6",
															"value": {
																"name": "_power",
																"nativeSrc": "8795:6:6",
																"nodeType": "YulIdentifier",
																"src": "8795:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8786:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8786:5:6"
																}
															]
														},
														{
															"nativeSrc": "8810:14:6",
															"nodeType": "YulAssignment",
															"src": "8810:14:6",
															"value": {
																"name": "_base",
																"nativeSrc": "8819:5:6",
																"nodeType": "YulIdentifier",
																"src": "8819:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8810:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8810:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8868:677:6",
																"nodeType": "YulBlock",
																"src": "8868:677:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8956:22:6",
																			"nodeType": "YulBlock",
																			"src": "8956:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8958:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "8958:16:6"
																						},
																						"nativeSrc": "8958:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8958:18:6"
																					},
																					"nativeSrc": "8958:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "8958:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8934:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "8934:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8944:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8944:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8949:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8949:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8940:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8940:3:6"
																					},
																					"nativeSrc": "8940:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8940:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8931:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "8931:2:6"
																			},
																			"nativeSrc": "8931:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8931:24:6"
																		},
																		"nativeSrc": "8928:50:6",
																		"nodeType": "YulIf",
																		"src": "8928:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "9023:419:6",
																			"nodeType": "YulBlock",
																			"src": "9023:419:6",
																			"statements": [
																				{
																					"nativeSrc": "9403:25:6",
																					"nodeType": "YulAssignment",
																					"src": "9403:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9416:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "9416:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9423:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "9423:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9412:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9412:3:6"
																						},
																						"nativeSrc": "9412:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9412:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9403:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "9403:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8998:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "8998:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9008:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9008:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8994:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8994:3:6"
																			},
																			"nativeSrc": "8994:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8994:16:6"
																		},
																		"nativeSrc": "8991:451:6",
																		"nodeType": "YulIf",
																		"src": "8991:451:6"
																	},
																	{
																		"nativeSrc": "9455:23:6",
																		"nodeType": "YulAssignment",
																		"src": "9455:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9467:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "9467:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9473:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "9473:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9463:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "9463:3:6"
																			},
																			"nativeSrc": "9463:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9463:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9455:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9455:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9491:44:6",
																		"nodeType": "YulAssignment",
																		"src": "9491:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9526:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "9526:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9503:22:6",
																				"nodeType": "YulIdentifier",
																				"src": "9503:22:6"
																			},
																			"nativeSrc": "9503:32:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9503:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9491:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "9491:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8844:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "8844:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8854:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8841:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8841:2:6"
																},
																"nativeSrc": "8841:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8841:15:6"
															},
															"nativeSrc": "8833:712:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8857:2:6",
																"nodeType": "YulBlock",
																"src": "8857:2:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8837:3:6",
																"nodeType": "YulBlock",
																"src": "8837:3:6",
																"statements": []
															},
															"src": "8833:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8703:848:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8731:6:6",
														"nodeType": "YulTypedName",
														"src": "8731:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8739:5:6",
														"nodeType": "YulTypedName",
														"src": "8739:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8746:8:6",
														"nodeType": "YulTypedName",
														"src": "8746:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8756:3:6",
														"nodeType": "YulTypedName",
														"src": "8756:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8764:5:6",
														"nodeType": "YulTypedName",
														"src": "8764:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8771:4:6",
														"nodeType": "YulTypedName",
														"src": "8771:4:6",
														"type": ""
													}
												],
												"src": "8703:848:6"
											},
											{
												"body": {
													"nativeSrc": "9617:1013:6",
													"nodeType": "YulBlock",
													"src": "9617:1013:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9812:20:6",
																"nodeType": "YulBlock",
																"src": "9812:20:6",
																"statements": [
																	{
																		"nativeSrc": "9814:10:6",
																		"nodeType": "YulAssignment",
																		"src": "9814:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9823:1:6",
																			"nodeType": "YulLiteral",
																			"src": "9823:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9814:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9814:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulLeave",
																		"src": "9825:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9802:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "9802:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9795:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9795:6:6"
																},
																"nativeSrc": "9795:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9795:16:6"
															},
															"nativeSrc": "9792:40:6",
															"nodeType": "YulIf",
															"src": "9792:40:6"
														},
														{
															"body": {
																"nativeSrc": "9857:20:6",
																"nodeType": "YulBlock",
																"src": "9857:20:6",
																"statements": [
																	{
																		"nativeSrc": "9859:10:6",
																		"nodeType": "YulAssignment",
																		"src": "9859:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9868:1:6",
																			"nodeType": "YulLiteral",
																			"src": "9868:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9859:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9859:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9870:5:6",
																		"nodeType": "YulLeave",
																		"src": "9870:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9851:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9851:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9844:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:6"
																},
																"nativeSrc": "9844:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9844:12:6"
															},
															"nativeSrc": "9841:36:6",
															"nodeType": "YulIf",
															"src": "9841:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9987:20:6",
																		"nodeType": "YulBlock",
																		"src": "9987:20:6",
																		"statements": [
																			{
																				"nativeSrc": "9989:10:6",
																				"nodeType": "YulAssignment",
																				"src": "9989:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9998:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9998:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9989:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "9989:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10000:5:6",
																				"nodeType": "YulLeave",
																				"src": "10000:5:6"
																			}
																		]
																	},
																	"nativeSrc": "9980:27:6",
																	"nodeType": "YulCase",
																	"src": "9980:27:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9985:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9985:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10031:176:6",
																		"nodeType": "YulBlock",
																		"src": "10031:176:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10066:22:6",
																					"nodeType": "YulBlock",
																					"src": "10066:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10068:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "10068:16:6"
																								},
																								"nativeSrc": "10068:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10068:18:6"
																							},
																							"nativeSrc": "10068:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "10068:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10051:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "10051:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10061:3:6",
																							"nodeType": "YulLiteral",
																							"src": "10061:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10048:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "10048:2:6"
																					},
																					"nativeSrc": "10048:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10048:17:6"
																				},
																				"nativeSrc": "10045:43:6",
																				"nodeType": "YulIf",
																				"src": "10045:43:6"
																			},
																			{
																				"nativeSrc": "10101:25:6",
																				"nodeType": "YulAssignment",
																				"src": "10101:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10114:1:6",
																							"nodeType": "YulLiteral",
																							"src": "10114:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10117:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "10117:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10110:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "10110:3:6"
																					},
																					"nativeSrc": "10110:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10110:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10101:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "10101:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10157:22:6",
																					"nodeType": "YulBlock",
																					"src": "10157:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10159:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "10159:16:6"
																								},
																								"nativeSrc": "10159:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10159:18:6"
																							},
																							"nativeSrc": "10159:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "10159:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10145:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "10145:5:6"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10152:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10152:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10142:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "10142:2:6"
																					},
																					"nativeSrc": "10142:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10142:14:6"
																				},
																				"nativeSrc": "10139:40:6",
																				"nodeType": "YulIf",
																				"src": "10139:40:6"
																			},
																			{
																				"nativeSrc": "10192:5:6",
																				"nodeType": "YulLeave",
																				"src": "10192:5:6"
																			}
																		]
																	},
																	"nativeSrc": "10016:191:6",
																	"nodeType": "YulCase",
																	"src": "10016:191:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10021:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10021:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9937:4:6",
																"nodeType": "YulIdentifier",
																"src": "9937:4:6"
															},
															"nativeSrc": "9930:277:6",
															"nodeType": "YulSwitch",
															"src": "9930:277:6"
														},
														{
															"body": {
																"nativeSrc": "10339:123:6",
																"nodeType": "YulBlock",
																"src": "10339:123:6",
																"statements": [
																	{
																		"nativeSrc": "10353:28:6",
																		"nodeType": "YulAssignment",
																		"src": "10353:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10366:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "10366:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10372:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "10372:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10362:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10362:3:6"
																			},
																			"nativeSrc": "10362:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10362:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10353:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10353:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10412:22:6",
																			"nodeType": "YulBlock",
																			"src": "10412:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10414:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "10414:16:6"
																						},
																						"nativeSrc": "10414:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10414:18:6"
																					},
																					"nativeSrc": "10414:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "10414:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "10400:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "10400:5:6"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "10407:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10407:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10397:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "10397:2:6"
																			},
																			"nativeSrc": "10397:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10397:14:6"
																		},
																		"nativeSrc": "10394:40:6",
																		"nodeType": "YulIf",
																		"src": "10394:40:6"
																	},
																	{
																		"nativeSrc": "10447:5:6",
																		"nodeType": "YulLeave",
																		"src": "10447:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10242:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "10242:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10248:2:6",
																						"nodeType": "YulLiteral",
																						"src": "10248:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10239:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10239:2:6"
																				},
																				"nativeSrc": "10239:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10239:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10256:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "10256:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10266:2:6",
																						"nodeType": "YulLiteral",
																						"src": "10266:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10253:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10253:2:6"
																				},
																				"nativeSrc": "10253:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10253:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:6"
																		},
																		"nativeSrc": "10235:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10235:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10291:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "10291:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10297:3:6",
																						"nodeType": "YulLiteral",
																						"src": "10297:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10288:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10288:2:6"
																				},
																				"nativeSrc": "10288:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10288:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10306:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "10306:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10316:2:6",
																						"nodeType": "YulLiteral",
																						"src": "10316:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10303:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10303:2:6"
																				},
																				"nativeSrc": "10303:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10303:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10284:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10284:3:6"
																		},
																		"nativeSrc": "10284:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10284:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10219:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10219:2:6"
																},
																"nativeSrc": "10219:111:6",
																"nodeType": "YulFunctionCall",
																"src": "10219:111:6"
															},
															"nativeSrc": "10216:246:6",
															"nodeType": "YulIf",
															"src": "10216:246:6"
														},
														{
															"nativeSrc": "10472:57:6",
															"nodeType": "YulAssignment",
															"src": "10472:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10506:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10506:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10509:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10509:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10515:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "10515:8:6"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10525:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10525:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10487:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "10487:18:6"
																},
																"nativeSrc": "10487:42:6",
																"nodeType": "YulFunctionCall",
																"src": "10487:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10472:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10472:5:6"
																},
																{
																	"name": "base",
																	"nativeSrc": "10479:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10479:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10568:22:6",
																"nodeType": "YulBlock",
																"src": "10568:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10570:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10570:16:6"
																			},
																			"nativeSrc": "10570:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10570:18:6"
																		},
																		"nativeSrc": "10570:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10570:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10545:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10545:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10556:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10556:3:6"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10561:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10561:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10552:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10552:3:6"
																		},
																		"nativeSrc": "10552:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10552:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10542:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10542:2:6"
																},
																"nativeSrc": "10542:25:6",
																"nodeType": "YulFunctionCall",
																"src": "10542:25:6"
															},
															"nativeSrc": "10539:51:6",
															"nodeType": "YulIf",
															"src": "10539:51:6"
														},
														{
															"nativeSrc": "10599:25:6",
															"nodeType": "YulAssignment",
															"src": "10599:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10612:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10612:5:6"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10619:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10619:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10608:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10608:3:6"
																},
																"nativeSrc": "10608:16:6",
																"nodeType": "YulFunctionCall",
																"src": "10608:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10599:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10599:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9557:1073:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9587:4:6",
														"nodeType": "YulTypedName",
														"src": "9587:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9593:8:6",
														"nodeType": "YulTypedName",
														"src": "9593:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9603:3:6",
														"nodeType": "YulTypedName",
														"src": "9603:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9611:5:6",
														"nodeType": "YulTypedName",
														"src": "9611:5:6",
														"type": ""
													}
												],
												"src": "9557:1073:6"
											},
											{
												"body": {
													"nativeSrc": "10700:217:6",
													"nodeType": "YulBlock",
													"src": "10700:217:6",
													"statements": [
														{
															"nativeSrc": "10710:31:6",
															"nodeType": "YulAssignment",
															"src": "10710:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10736:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10736:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10718:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10718:17:6"
																},
																"nativeSrc": "10718:23:6",
																"nodeType": "YulFunctionCall",
																"src": "10718:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10710:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10710:4:6"
																}
															]
														},
														{
															"nativeSrc": "10750:37:6",
															"nodeType": "YulAssignment",
															"src": "10750:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10778:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "10778:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10762:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "10762:15:6"
																},
																"nativeSrc": "10762:25:6",
																"nodeType": "YulFunctionCall",
																"src": "10762:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10750:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "10750:8:6"
																}
															]
														},
														{
															"nativeSrc": "10797:113:6",
															"nodeType": "YulAssignment",
															"src": "10797:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10827:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10827:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10833:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "10833:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10843:66:6",
																		"nodeType": "YulLiteral",
																		"src": "10843:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10806:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "10806:20:6"
																},
																"nativeSrc": "10806:104:6",
																"nodeType": "YulFunctionCall",
																"src": "10806:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10797:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10797:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10636:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10675:4:6",
														"nodeType": "YulTypedName",
														"src": "10675:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10681:8:6",
														"nodeType": "YulTypedName",
														"src": "10681:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10694:5:6",
														"nodeType": "YulTypedName",
														"src": "10694:5:6",
														"type": ""
													}
												],
												"src": "10636:281:6"
											},
											{
												"body": {
													"nativeSrc": "10971:362:6",
													"nodeType": "YulBlock",
													"src": "10971:362:6",
													"statements": [
														{
															"nativeSrc": "10981:25:6",
															"nodeType": "YulAssignment",
															"src": "10981:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11004:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11004:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10986:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10986:17:6"
																},
																"nativeSrc": "10986:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10986:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10981:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10981:1:6"
																}
															]
														},
														{
															"nativeSrc": "11015:25:6",
															"nodeType": "YulAssignment",
															"src": "11015:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11038:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11038:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11020:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11020:17:6"
																},
																"nativeSrc": "11020:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11020:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11015:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11015:1:6"
																}
															]
														},
														{
															"nativeSrc": "11049:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11049:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11072:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11072:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11075:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11075:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11068:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11068:3:6"
																},
																"nativeSrc": "11068:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11068:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11053:11:6",
																	"nodeType": "YulTypedName",
																	"src": "11053:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11086:41:6",
															"nodeType": "YulAssignment",
															"src": "11086:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11115:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "11115:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11097:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11097:17:6"
																},
																"nativeSrc": "11097:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11097:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11086:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11086:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11304:22:6",
																"nodeType": "YulBlock",
																"src": "11304:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11306:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11306:16:6"
																			},
																			"nativeSrc": "11306:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11306:18:6"
																		},
																		"nativeSrc": "11306:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11306:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11237:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "11237:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11230:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "11230:6:6"
																				},
																				"nativeSrc": "11230:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11230:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11260:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "11260:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11267:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "11267:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11276:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "11276:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11263:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "11263:3:6"
																						},
																						"nativeSrc": "11263:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "11263:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11257:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11257:2:6"
																				},
																				"nativeSrc": "11257:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11257:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11210:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "11210:2:6"
																		},
																		"nativeSrc": "11210:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11210:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11190:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11190:6:6"
																},
																"nativeSrc": "11190:113:6",
																"nodeType": "YulFunctionCall",
																"src": "11190:113:6"
															},
															"nativeSrc": "11187:139:6",
															"nodeType": "YulIf",
															"src": "11187:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10923:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10954:1:6",
														"nodeType": "YulTypedName",
														"src": "10954:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10957:1:6",
														"nodeType": "YulTypedName",
														"src": "10957:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10963:7:6",
														"nodeType": "YulTypedName",
														"src": "10963:7:6",
														"type": ""
													}
												],
												"src": "10923:410:6"
											},
											{
												"body": {
													"nativeSrc": "11465:206:6",
													"nodeType": "YulBlock",
													"src": "11465:206:6",
													"statements": [
														{
															"nativeSrc": "11475:26:6",
															"nodeType": "YulAssignment",
															"src": "11475:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11487:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11487:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11498:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11483:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11483:3:6"
																},
																"nativeSrc": "11483:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11483:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11475:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11475:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11555:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11555:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11568:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11568:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11579:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11579:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11564:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11564:3:6"
																		},
																		"nativeSrc": "11564:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11564:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11511:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11511:43:6"
																},
																"nativeSrc": "11511:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11511:71:6"
															},
															"nativeSrc": "11511:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11511:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11636:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11636:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11649:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11649:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11660:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11645:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11645:3:6"
																		},
																		"nativeSrc": "11645:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11645:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11592:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11592:43:6"
																},
																"nativeSrc": "11592:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11592:72:6"
															},
															"nativeSrc": "11592:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11592:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11339:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11429:9:6",
														"nodeType": "YulTypedName",
														"src": "11429:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11441:6:6",
														"nodeType": "YulTypedName",
														"src": "11441:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11449:6:6",
														"nodeType": "YulTypedName",
														"src": "11449:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11460:4:6",
														"nodeType": "YulTypedName",
														"src": "11460:4:6",
														"type": ""
													}
												],
												"src": "11339:332:6"
											},
											{
												"body": {
													"nativeSrc": "11831:288:6",
													"nodeType": "YulBlock",
													"src": "11831:288:6",
													"statements": [
														{
															"nativeSrc": "11841:26:6",
															"nodeType": "YulAssignment",
															"src": "11841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11853:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11864:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11849:3:6"
																},
																"nativeSrc": "11849:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11841:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11841:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11921:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11921:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11934:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11934:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11945:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11945:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11930:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11930:3:6"
																		},
																		"nativeSrc": "11930:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11930:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11877:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11877:43:6"
																},
																"nativeSrc": "11877:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11877:71:6"
															},
															"nativeSrc": "11877:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11877:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12002:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12002:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12015:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12015:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12026:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12026:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12011:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12011:3:6"
																		},
																		"nativeSrc": "12011:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12011:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11958:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11958:43:6"
																},
																"nativeSrc": "11958:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11958:72:6"
															},
															"nativeSrc": "11958:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11958:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12084:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12084:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12097:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12097:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12108:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12108:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12093:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12093:3:6"
																		},
																		"nativeSrc": "12093:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12093:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12040:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12040:43:6"
																},
																"nativeSrc": "12040:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12040:72:6"
															},
															"nativeSrc": "12040:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12040:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11677:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11787:9:6",
														"nodeType": "YulTypedName",
														"src": "11787:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11799:6:6",
														"nodeType": "YulTypedName",
														"src": "11799:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11807:6:6",
														"nodeType": "YulTypedName",
														"src": "11807:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11815:6:6",
														"nodeType": "YulTypedName",
														"src": "11815:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11826:4:6",
														"nodeType": "YulTypedName",
														"src": "11826:4:6",
														"type": ""
													}
												],
												"src": "11677:442:6"
											},
											{
												"body": {
													"nativeSrc": "12169:147:6",
													"nodeType": "YulBlock",
													"src": "12169:147:6",
													"statements": [
														{
															"nativeSrc": "12179:25:6",
															"nodeType": "YulAssignment",
															"src": "12179:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12202:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12202:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12184:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12184:17:6"
																},
																"nativeSrc": "12184:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12184:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12179:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12179:1:6"
																}
															]
														},
														{
															"nativeSrc": "12213:25:6",
															"nodeType": "YulAssignment",
															"src": "12213:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12236:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12236:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12218:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12218:17:6"
																},
																"nativeSrc": "12218:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12218:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12213:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12213:1:6"
																}
															]
														},
														{
															"nativeSrc": "12247:16:6",
															"nodeType": "YulAssignment",
															"src": "12247:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12258:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12258:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12261:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12261:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12254:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12254:3:6"
																},
																"nativeSrc": "12254:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12254:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12247:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12247:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12287:22:6",
																"nodeType": "YulBlock",
																"src": "12287:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12289:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12289:16:6"
																			},
																			"nativeSrc": "12289:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12289:18:6"
																		},
																		"nativeSrc": "12289:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12289:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12279:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12279:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12282:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12282:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12276:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12276:2:6"
																},
																"nativeSrc": "12276:10:6",
																"nodeType": "YulFunctionCall",
																"src": "12276:10:6"
															},
															"nativeSrc": "12273:36:6",
															"nodeType": "YulIf",
															"src": "12273:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12125:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12156:1:6",
														"nodeType": "YulTypedName",
														"src": "12156:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12159:1:6",
														"nodeType": "YulTypedName",
														"src": "12159:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12165:3:6",
														"nodeType": "YulTypedName",
														"src": "12165:3:6",
														"type": ""
													}
												],
												"src": "12125:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"The quantity cannot be too small\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a08231146101815780638da5cb5b146101b157806395d89b41146101cf578063a9059cbb146101ed578063dd62ed3e1461021d576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024d565b6040516100c09190610c88565b60405180910390f35b6100e360048036038101906100de9190610d39565b6102dd565b6040516100f09190610d91565b60405180910390f35b6101016102ff565b60405161010e9190610db9565b60405180910390f35b610131600480360381019061012c9190610dd2565b610308565b60405161013e9190610d91565b60405180910390f35b61014f610336565b60405161015c9190610e3d565b60405180910390f35b61017f600480360381019061017a9190610d39565b61033e565b005b61019b60048036038101906101969190610e56565b610478565b6040516101a89190610db9565b60405180910390f35b6101b96104bd565b6040516101c69190610e90565b60405180910390f35b6101d76104e2565b6040516101e49190610c88565b60405180910390f35b61020760048036038101906102029190610d39565b610572565b6040516102149190610d91565b60405180910390f35b61023760048036038101906102329190610ea9565b610594565b6040516102449190610db9565b60405180910390f35b60606003805461025c90610f14565b80601f016020809104026020016040519081016040528092919081815260200182805461028890610f14565b80156102d35780601f106102aa576101008083540402835291602001916102d3565b820191905f5260205f20905b8154815290600101906020018083116102b657829003601f168201915b5050505050905090565b5f806102e7610616565b90506102f481858561061d565b600191505092915050565b5f600254905090565b5f80610312610616565b905061031f85828561062f565b61032a8585856106c1565b60019150509392505050565b5f6012905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490610f8e565b60405180910390fd5b806001811015610412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104099061101c565b60405180910390fd5b61043a8361041e610336565b600a61042a9190611196565b8461043591906111e0565b6107b1565b7f45704679a40d4b2ffe28aa7324f021775faaca4d40917fef2cdf38e53fd90a24838360405161046b929190611221565b60405180910390a1505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546104f190610f14565b80601f016020809104026020016040519081016040528092919081815260200182805461051d90610f14565b80156105685780601f1061053f57610100808354040283529160200191610568565b820191905f5260205f20905b81548152906001019060200180831161054b57829003601f168201915b5050505050905090565b5f8061057c610616565b90506105898185856106c1565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61062a8383836001610830565b505050565b5f61063a8484610594565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106bb57818110156106ac578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106a393929190611248565b60405180910390fd5b6106ba84848484035f610830565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610731575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107289190610e90565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a1575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107989190610e90565b60405180910390fd5b6107ac8383836109ff565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610821575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108189190610e90565b60405180910390fd5b61082c5f83836109ff565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108a0575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108979190610e90565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610910575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109079190610e90565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156109f9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109f09190610db9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4f578060025f828254610a43919061127d565b92505081905550610b1d565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ad8578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610acf93929190611248565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b64578060025f8282540392505081905550610bae565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c0b9190610db9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c5a82610c18565b610c648185610c22565b9350610c74818560208601610c32565b610c7d81610c40565b840191505092915050565b5f6020820190508181035f830152610ca08184610c50565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cd582610cac565b9050919050565b610ce581610ccb565b8114610cef575f80fd5b50565b5f81359050610d0081610cdc565b92915050565b5f819050919050565b610d1881610d06565b8114610d22575f80fd5b50565b5f81359050610d3381610d0f565b92915050565b5f8060408385031215610d4f57610d4e610ca8565b5b5f610d5c85828601610cf2565b9250506020610d6d85828601610d25565b9150509250929050565b5f8115159050919050565b610d8b81610d77565b82525050565b5f602082019050610da45f830184610d82565b92915050565b610db381610d06565b82525050565b5f602082019050610dcc5f830184610daa565b92915050565b5f805f60608486031215610de957610de8610ca8565b5b5f610df686828701610cf2565b9350506020610e0786828701610cf2565b9250506040610e1886828701610d25565b9150509250925092565b5f60ff82169050919050565b610e3781610e22565b82525050565b5f602082019050610e505f830184610e2e565b92915050565b5f60208284031215610e6b57610e6a610ca8565b5b5f610e7884828501610cf2565b91505092915050565b610e8a81610ccb565b82525050565b5f602082019050610ea35f830184610e81565b92915050565b5f8060408385031215610ebf57610ebe610ca8565b5b5f610ecc85828601610cf2565b9250506020610edd85828601610cf2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f2b57607f821691505b602082108103610f3e57610f3d610ee7565b5b50919050565b7f6e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610f78600983610c22565b9150610f8382610f44565b602082019050919050565b5f6020820190508181035f830152610fa581610f6c565b9050919050565b7f546865207175616e746974792063616e6e6f7420626520746f6f20736d616c6c5f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611006602183610c22565b915061101182610fac565b604082019050919050565b5f6020820190508181035f83015261103381610ffa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156110bc578086048111156110985761109761103a565b5b60018516156110a75780820291505b80810290506110b585611067565b945061107c565b94509492505050565b5f826110d4576001905061118f565b816110e1575f905061118f565b81600181146110f7576002811461110157611130565b600191505061118f565b60ff8411156111135761111261103a565b5b8360020a91508482111561112a5761112961103a565b5b5061118f565b5060208310610133831016604e8410600b84101617156111655782820a9050838111156111605761115f61103a565b5b61118f565b6111728484846001611073565b925090508184048111156111895761118861103a565b5b81810290505b9392505050565b5f6111a082610d06565b91506111ab83610e22565b92506111d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846110c5565b905092915050565b5f6111ea82610d06565b91506111f583610d06565b925082820261120381610d06565b9150828204841483151761121a5761121961103a565b5b5092915050565b5f6040820190506112345f830185610e81565b6112416020830184610daa565b9392505050565b5f60608201905061125b5f830186610e81565b6112686020830185610daa565b6112756040830184610daa565b949350505050565b5f61128782610d06565b915061129283610d06565b92508282019050808211156112aa576112a961103a565b5b9291505056fea26469706673582212209c560356188f46c95328b2f60cabf4b46ba57b35e99f5e118d7d3478900d5acc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21D JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25C SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E7 PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F4 DUP2 DUP6 DUP6 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x312 PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH2 0x31F DUP6 DUP3 DUP6 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x32A DUP6 DUP6 DUP6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43A DUP4 PUSH2 0x41E PUSH2 0x336 JUMP JUMPDEST PUSH1 0xA PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST DUP5 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH32 0x45704679A40D4B2FFE28AA7324F021775FAACA4D40917FEF2CDF38E53FD90A24 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x46B SWAP3 SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4F1 SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x51D SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x568 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x568 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x57C PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH2 0x589 DUP2 DUP6 DUP6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x62A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x830 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63A DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6BB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6AC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x830 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x731 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AC DUP4 DUP4 DUP4 PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82C PUSH0 DUP4 DUP4 PUSH2 0x9FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x910 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x9F9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB1D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAD8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB64 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBAE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5A DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC64 DUP2 DUP6 PUSH2 0xC22 JUMP JUMPDEST SWAP4 POP PUSH2 0xC74 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST PUSH2 0xC7D DUP2 PUSH2 0xC40 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA0 DUP2 DUP5 PUSH2 0xC50 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD5 DUP3 PUSH2 0xCAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE5 DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP2 EQ PUSH2 0xCEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD00 DUP2 PUSH2 0xCDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP2 EQ PUSH2 0xD22 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD33 DUP2 PUSH2 0xD0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD5C DUP6 DUP3 DUP7 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD6D DUP6 DUP3 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB3 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCC PUSH0 DUP4 ADD DUP5 PUSH2 0xDAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH2 0xDE8 PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF6 DUP7 DUP3 DUP8 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE07 DUP7 DUP3 DUP8 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE18 DUP7 DUP3 DUP8 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE50 PUSH0 DUP4 ADD DUP5 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE78 DUP5 DUP3 DUP6 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8A DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA3 PUSH0 DUP4 ADD DUP5 PUSH2 0xE81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xECC DUP6 DUP3 DUP7 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDD DUP6 DUP3 DUP7 ADD PUSH2 0xCF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF3E JUMPI PUSH2 0xF3D PUSH2 0xEE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF78 PUSH1 0x9 DUP4 PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP PUSH2 0xF83 DUP3 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA5 DUP2 PUSH2 0xF6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865207175616E746974792063616E6E6F7420626520746F6F20736D616C6C PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1006 PUSH1 0x21 DUP4 PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1011 DUP3 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1033 DUP2 PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x10BC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0x103A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x10A7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x10B5 DUP6 PUSH2 0x1067 JUMP JUMPDEST SWAP5 POP PUSH2 0x107C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10D4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x118F JUMP JUMPDEST DUP2 PUSH2 0x10E1 JUMPI PUSH0 SWAP1 POP PUSH2 0x118F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x10F7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1101 JUMPI PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x118F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1113 JUMPI PUSH2 0x1112 PUSH2 0x103A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x112A JUMPI PUSH2 0x1129 PUSH2 0x103A JUMP JUMPDEST JUMPDEST POP PUSH2 0x118F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1165 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1160 JUMPI PUSH2 0x115F PUSH2 0x103A JUMP JUMPDEST JUMPDEST PUSH2 0x118F JUMP JUMPDEST PUSH2 0x1172 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1073 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x103A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11A0 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AB DUP4 PUSH2 0xE22 JUMP JUMPDEST SWAP3 POP PUSH2 0x11D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11EA DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F5 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1203 DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x121A JUMPI PUSH2 0x1219 PUSH2 0x103A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1234 PUSH0 DUP4 ADD DUP6 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x1241 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDAA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x125B PUSH0 DUP4 ADD DUP7 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x1268 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDAA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1287 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1292 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12AA JUMPI PUSH2 0x12A9 PUSH2 0x103A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 JUMP SUB JUMP XOR DUP16 CHAINID 0xC9 MSTORE8 0x28 0xB2 0xF6 0xC 0xAB DELEGATECALL 0xB4 PUSH12 0xA57B35E99F5E118D7D347890 0xD GAS 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "190:975:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:231:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;244:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;931:231:5:-;713:5;;;;;;;;;;;699:19;;:10;:19;;;691:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1002:4:::1;850:1;842:4;:9;;834:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1043:39:::2;1049:7;1071:10;:8;:10::i;:::-;1065:2;:16;;;;:::i;:::-;1058:4;:23;;;;:::i;:::-;1043:5;:39::i;:::-;1130:24;1140:7;1149:4;1130:24;;;;;;;:::i;:::-;;;;;;;;743:1:::1;931:231:::0;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;244:20:5:-;;;;;;;;;;;;;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:159::-;6565:11;6561:1;6553:6;6549:14;6542:35;6425:159;:::o;6590:365::-;6732:3;6753:66;6817:1;6812:3;6753:66;:::i;:::-;6746:73;;6828:93;6917:3;6828:93;:::i;:::-;6946:2;6941:3;6937:12;6930:19;;6590:365;;;:::o;6961:419::-;7127:4;7165:2;7154:9;7150:18;7142:26;;7214:9;7208:4;7204:20;7200:1;7189:9;7185:17;7178:47;7242:131;7368:4;7242:131;:::i;:::-;7234:139;;6961:419;;;:::o;7386:220::-;7526:34;7522:1;7514:6;7510:14;7503:58;7595:3;7590:2;7582:6;7578:15;7571:28;7386:220;:::o;7612:366::-;7754:3;7775:67;7839:2;7834:3;7775:67;:::i;:::-;7768:74;;7851:93;7940:3;7851:93;:::i;:::-;7969:2;7964:3;7960:12;7953:19;;7612:366;;;:::o;7984:419::-;8150:4;8188:2;8177:9;8173:18;8165:26;;8237:9;8231:4;8227:20;8223:1;8212:9;8208:17;8201:47;8265:131;8391:4;8265:131;:::i;:::-;8257:139;;7984:419;;;:::o;8409:180::-;8457:77;8454:1;8447:88;8554:4;8551:1;8544:15;8578:4;8575:1;8568:15;8595:102;8637:8;8684:5;8681:1;8677:13;8656:34;;8595:102;;;:::o;8703:848::-;8764:5;8771:4;8795:6;8786:15;;8819:5;8810:14;;8833:712;8854:1;8844:8;8841:15;8833:712;;;8949:4;8944:3;8940:14;8934:4;8931:24;8928:50;;;8958:18;;:::i;:::-;8928:50;9008:1;8998:8;8994:16;8991:451;;;9423:4;9416:5;9412:16;9403:25;;8991:451;9473:4;9467;9463:15;9455:23;;9503:32;9526:8;9503:32;:::i;:::-;9491:44;;8833:712;;;8703:848;;;;;;;:::o;9557:1073::-;9611:5;9802:8;9792:40;;9823:1;9814:10;;9825:5;;9792:40;9851:4;9841:36;;9868:1;9859:10;;9870:5;;9841:36;9937:4;9985:1;9980:27;;;;10021:1;10016:191;;;;9930:277;;9980:27;9998:1;9989:10;;10000:5;;;10016:191;10061:3;10051:8;10048:17;10045:43;;;10068:18;;:::i;:::-;10045:43;10117:8;10114:1;10110:16;10101:25;;10152:3;10145:5;10142:14;10139:40;;;10159:18;;:::i;:::-;10139:40;10192:5;;;9930:277;;10316:2;10306:8;10303:16;10297:3;10291:4;10288:13;10284:36;10266:2;10256:8;10253:16;10248:2;10242:4;10239:12;10235:35;10219:111;10216:246;;;10372:8;10366:4;10362:19;10353:28;;10407:3;10400:5;10397:14;10394:40;;;10414:18;;:::i;:::-;10394:40;10447:5;;10216:246;10487:42;10525:3;10515:8;10509:4;10506:1;10487:42;:::i;:::-;10472:57;;;;10561:4;10556:3;10552:14;10545:5;10542:25;10539:51;;;10570:18;;:::i;:::-;10539:51;10619:4;10612:5;10608:16;10599:25;;9557:1073;;;;;;:::o;10636:281::-;10694:5;10718:23;10736:4;10718:23;:::i;:::-;10710:31;;10762:25;10778:8;10762:25;:::i;:::-;10750:37;;10806:104;10843:66;10833:8;10827:4;10806:104;:::i;:::-;10797:113;;10636:281;;;;:::o;10923:410::-;10963:7;10986:20;11004:1;10986:20;:::i;:::-;10981:25;;11020:20;11038:1;11020:20;:::i;:::-;11015:25;;11075:1;11072;11068:9;11097:30;11115:11;11097:30;:::i;:::-;11086:41;;11276:1;11267:7;11263:15;11260:1;11257:22;11237:1;11230:9;11210:83;11187:139;;11306:18;;:::i;:::-;11187:139;10971:362;10923:410;;;;:::o;11339:332::-;11460:4;11498:2;11487:9;11483:18;11475:26;;11511:71;11579:1;11568:9;11564:17;11555:6;11511:71;:::i;:::-;11592:72;11660:2;11649:9;11645:18;11636:6;11592:72;:::i;:::-;11339:332;;;;;:::o;11677:442::-;11826:4;11864:2;11853:9;11849:18;11841:26;;11877:71;11945:1;11934:9;11930:17;11921:6;11877:71;:::i;:::-;11958:72;12026:2;12015:9;12011:18;12002:6;11958:72;:::i;:::-;12040;12108:2;12097:9;12093:18;12084:6;12040:72;:::i;:::-;11677:442;;;;;;:::o;12125:191::-;12165:3;12184:20;12202:1;12184:20;:::i;:::-;12179:25;;12218:20;12236:1;12218:20;:::i;:::-;12213:25;;12261:1;12258;12254:9;12247:16;;12282:3;12279:1;12276:10;12273:36;;;12289:18;;:::i;:::-;12273:36;12125:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "967600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2552",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 190,
									"end": 1165,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 366,
									"end": 626,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 366,
									"end": 626,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 366,
									"end": 626,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 366,
									"end": 626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 366,
									"end": 626,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 366,
									"end": 626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 366,
									"end": 626,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 459,
									"end": 464,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 465,
									"end": 472,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 492,
									"end": 502,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 484,
									"end": 489,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 484,
									"end": 489,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 484,
									"end": 502,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 513,
									"end": 553,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 519,
									"end": 527,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 552,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 542,
									"end": 550,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 542,
									"end": 550,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 542,
									"end": 550,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 542,
									"end": 552,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 542,
									"end": 552,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 542,
									"end": 552,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 542,
									"end": 552,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 542,
									"end": 552,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 536,
									"end": 538,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 536,
									"end": 552,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 536,
									"end": 552,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 536,
									"end": 552,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 536,
									"end": 552,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 536,
									"end": 552,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 536,
									"end": 552,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 536,
									"end": 552,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 529,
									"end": 533,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 529,
									"end": 552,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 529,
									"end": 552,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 529,
									"end": 552,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 529,
									"end": 552,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 529,
									"end": 552,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 529,
									"end": 552,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 529,
									"end": 552,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 513,
									"end": 518,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 513,
									"end": 518,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 513,
									"end": 518,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 513,
									"end": 553,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 513,
									"end": 553,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 513,
									"end": 553,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 513,
									"end": 553,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 513,
									"end": 553,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "45704679A40D4B2FFE28AA7324F021775FAACA4D40917FEF2CDF38E53FD90A24"
								},
								{
									"begin": 603,
									"end": 611,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 617,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 593,
									"end": 618,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 593,
									"end": 618,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 366,
									"end": 626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3118,
									"end": 3125,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3152,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3237,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3235,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3262,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3349,
									"end": 3354,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3386,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3387,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 3423,
									"end": 3428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3396,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3566,
									"end": 3572,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3634,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3619,
									"end": 3628,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3617,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3629,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3638,
									"end": 3717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3779,
									"end": 3780,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3777,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3781,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3758,
									"end": 3782,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3827,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3798,
									"end": 3828,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3831,
									"end": 3910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 4002,
									"end": 4009,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3993,
									"end": 3999,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3982,
									"end": 3991,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3978,
									"end": 4000,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3936,
									"end": 4010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3926,
									"end": 4010,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3926,
									"end": 4010,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3729,
									"end": 4020,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4069,
									"end": 4078,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4059,
									"end": 4084,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4111,
									"end": 4129,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4103,
									"end": 4109,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4100,
									"end": 4130,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 4133,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 4304,
									"end": 4311,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4295,
									"end": 4301,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4284,
									"end": 4293,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4280,
									"end": 4302,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 4238,
									"end": 4312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4228,
									"end": 4312,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4228,
									"end": 4312,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4030,
									"end": 4322,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4361,
									"end": 4363,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 4443,
									"end": 4450,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4434,
									"end": 4440,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4423,
									"end": 4432,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4419,
									"end": 4441,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4387,
									"end": 4451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4332,
									"end": 4461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4500,
									"end": 4502,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 4582,
									"end": 4589,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4573,
									"end": 4579,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4580,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4526,
									"end": 4590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4471,
									"end": 4600,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4671,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4699,
									"end": 4704,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4693,
									"end": 4705,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4613,
									"end": 4712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4766,
									"end": 4843,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4763,
									"end": 4764,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4756,
									"end": 4844,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4863,
									"end": 4867,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4860,
									"end": 4861,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4853,
									"end": 4868,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4891,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4884,
									"end": 4885,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4877,
									"end": 4892,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4948,
									"end": 4954,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4979,
									"end": 4983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4975,
									"end": 4987,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5032,
									"end": 5033,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5026,
									"end": 5030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5022,
									"end": 5034,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5053,
									"end": 5071,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5109,
									"end": 5113,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 5101,
									"end": 5107,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5097,
									"end": 5114,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5171,
									"end": 5173,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5169,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5160,
									"end": 5174,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5137,
									"end": 5175,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5190,
									"end": 5208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4955,
									"end": 5224,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4904,
									"end": 5224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5279,
									"end": 5283,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5325,
									"end": 5328,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5323,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5315,
									"end": 5329,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5359,
									"end": 5363,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5356,
									"end": 5357,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5346,
									"end": 5364,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5414,
									"end": 5420,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5461,
									"end": 5463,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5456,
									"end": 5458,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5449,
									"end": 5454,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5445,
									"end": 5459,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5441,
									"end": 5464,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5377,
									"end": 5470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5520,
									"end": 5528,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5570,
									"end": 5575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5568,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5560,
									"end": 5576,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5476,
									"end": 5583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5658,
									"end": 5664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5708,
									"end": 5709,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5696,
									"end": 5706,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5692,
									"end": 5710,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 5761,
									"end": 5827,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5750,
									"end": 5759,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 5731,
									"end": 5828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 5879,
									"end": 5887,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5868,
									"end": 5877,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 5849,
									"end": 5888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5921,
									"end": 5925,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5917,
									"end": 5926,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5910,
									"end": 5915,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5906,
									"end": 5927,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5970,
									"end": 5974,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5960,
									"end": 5968,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5956,
									"end": 5975,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5949,
									"end": 5954,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5946,
									"end": 5976,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6016,
									"end": 6019,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6037,
									"end": 6042,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6104,
									"end": 6113,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6182,
									"end": 6187,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6164,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 6155,
									"end": 6189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6137,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6245,
									"end": 6248,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6266,
									"end": 6271,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 6424,
									"end": 6431,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 6393,
									"end": 6432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 6527,
									"end": 6543,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 6503,
									"end": 6544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6495,
									"end": 6501,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6488,
									"end": 6492,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6482,
									"end": 6493,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 6454,
									"end": 6545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6448,
									"end": 6452,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6441,
									"end": 6546,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6359,
									"end": 6552,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6283,
									"end": 6552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 6606,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6558,
									"end": 6631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 6714,
									"end": 6746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 6813,
									"end": 6819,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6805,
									"end": 6811,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6799,
									"end": 6803,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 6755,
									"end": 6820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6690,
									"end": 6826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6637,
									"end": 6826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6909,
									"end": 6912,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6902,
									"end": 6907,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6899,
									"end": 6913,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 7000,
									"end": 7001,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6993,
									"end": 6998,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 6963,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6936,
									"end": 6937,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6929,
									"end": 6934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 7018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7125,
									"end": 7127,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7120,
									"end": 7123,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7117,
									"end": 7128,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7159,
									"end": 7197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 7261,
									"end": 7271,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7243,
									"end": 7272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7233,
									"end": 7241,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7229,
									"end": 7273,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7426,
									"end": 7428,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7414,
									"end": 7424,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7411,
									"end": 7429,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7447,
									"end": 7455,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 7544,
									"end": 7547,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7526,
									"end": 7548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7516,
									"end": 7524,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7512,
									"end": 7549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 7510,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 7470,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7024,
									"end": 7567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7635,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7677,
									"end": 7682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 7675,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7667,
									"end": 7683,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7740,
									"end": 7746,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 7821,
									"end": 7822,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7817,
									"end": 7823,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7809,
									"end": 7814,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7806,
									"end": 7807,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7802,
									"end": 7815,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 7773,
									"end": 7824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7769,
									"end": 7825,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7854,
									"end": 7858,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7848,
									"end": 7852,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7844,
									"end": 7859,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7747,
									"end": 7865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7946,
									"end": 7950,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 8117,
									"end": 8120,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8111,
									"end": 8115,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 8092,
									"end": 8121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8154,
									"end": 8157,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8151,
									"end": 8152,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8147,
									"end": 8158,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8141,
									"end": 8145,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8138,
									"end": 8159,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7870,
									"end": 8165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 8320,
									"end": 8323,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 8287,
									"end": 8324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8389,
									"end": 8407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8381,
									"end": 8387,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8378,
									"end": 8408,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 8411,
									"end": 8429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 8487,
									"end": 8491,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8492,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 8455,
									"end": 8493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8592,
									"end": 8598,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8586,
									"end": 8590,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 8540,
									"end": 8607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "tag",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8634,
									"end": 8635,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8662,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8690,
									"end": 8692,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8682,
									"end": 8688,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8679,
									"end": 8693,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8707,
									"end": 8708,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9364,
									"end": 9365,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9381,
									"end": 9387,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9430,
									"end": 9439,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9425,
									"end": 9428,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9421,
									"end": 9440,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9415,
									"end": 9441,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "tag",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9541,
									"end": 9547,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9534,
									"end": 9539,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 9481,
									"end": 9548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "tag",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9475,
									"end": 9479,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9468,
									"end": 9549,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9337,
									"end": 9559,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "tag",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8754,
									"end": 8758,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8750,
									"end": 8759,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8742,
									"end": 8748,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8738,
									"end": 8760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 8820,
									"end": 8824,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8788,
									"end": 8825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "tag",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8847,
									"end": 8848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8875,
									"end": 8882,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8872,
									"end": 8873,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8869,
									"end": 8883,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8954,
									"end": 8963,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8949,
									"end": 8952,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8945,
									"end": 8964,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8939,
									"end": 8965,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8931,
									"end": 8937,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8924,
									"end": 8966,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9005,
									"end": 9006,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8997,
									"end": 9003,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8993,
									"end": 9007,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9052,
									"end": 9054,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9041,
									"end": 9050,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9037,
									"end": 9055,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8902,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8895,
									"end": 8896,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8891,
									"end": 8903,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9097,
									"end": 9103,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9088,
									"end": 9095,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9085,
									"end": 9104,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9155,
									"end": 9164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9150,
									"end": 9153,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9146,
									"end": 9165,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9140,
									"end": 9166,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 9240,
									"end": 9244,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9232,
									"end": 9238,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9228,
									"end": 9245,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9226,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 9198,
									"end": 9246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9190,
									"end": 9196,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9183,
									"end": 9247,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9105,
									"end": 9261,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "tag",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9307,
									"end": 9308,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9303,
									"end": 9304,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 9295,
									"end": 9301,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9291,
									"end": 9305,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9287,
									"end": 9309,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9281,
									"end": 9285,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9274,
									"end": 9310,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8170,
									"end": 9565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9571,
									"end": 9751,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 9571,
									"end": 9751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9619,
									"end": 9696,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9616,
									"end": 9617,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9609,
									"end": 9697,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9716,
									"end": 9720,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 9713,
									"end": 9714,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9706,
									"end": 9721,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9740,
									"end": 9744,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9737,
									"end": 9738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9730,
									"end": 9745,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9757,
									"end": 9859,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 9757,
									"end": 9859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9799,
									"end": 9807,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9846,
									"end": 9851,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9843,
									"end": 9844,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9839,
									"end": 9852,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 9818,
									"end": 9852,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9818,
									"end": 9852,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9757,
									"end": 9859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9757,
									"end": 9859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9757,
									"end": 9859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9757,
									"end": 9859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9926,
									"end": 9931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9933,
									"end": 9937,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9957,
									"end": 9963,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9948,
									"end": 9963,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9948,
									"end": 9963,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9981,
									"end": 9986,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9972,
									"end": 9986,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9972,
									"end": 9986,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10016,
									"end": 10017,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10006,
									"end": 10014,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10003,
									"end": 10018,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10111,
									"end": 10115,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10106,
									"end": 10109,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10102,
									"end": 10116,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 10096,
									"end": 10100,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10093,
									"end": 10117,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10090,
									"end": 10140,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10090,
									"end": 10140,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "206"
								},
								{
									"begin": 10090,
									"end": 10140,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10120,
									"end": 10138,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "207"
								},
								{
									"begin": 10120,
									"end": 10138,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 10120,
									"end": 10138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10120,
									"end": 10138,
									"name": "tag",
									"source": 6,
									"value": "207"
								},
								{
									"begin": 10120,
									"end": 10138,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10090,
									"end": 10140,
									"name": "tag",
									"source": 6,
									"value": "206"
								},
								{
									"begin": 10090,
									"end": 10140,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10170,
									"end": 10171,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10160,
									"end": 10168,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10156,
									"end": 10172,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10153,
									"end": 10604,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10153,
									"end": 10604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "208"
								},
								{
									"begin": 10153,
									"end": 10604,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10585,
									"end": 10589,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10578,
									"end": 10583,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10574,
									"end": 10590,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 10590,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 10590,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10153,
									"end": 10604,
									"name": "tag",
									"source": 6,
									"value": "208"
								},
								{
									"begin": 10153,
									"end": 10604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10635,
									"end": 10639,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10629,
									"end": 10633,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10625,
									"end": 10640,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 10617,
									"end": 10640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10617,
									"end": 10640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10665,
									"end": 10697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "209"
								},
								{
									"begin": 10688,
									"end": 10696,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10665,
									"end": 10697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 10665,
									"end": 10697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10665,
									"end": 10697,
									"name": "tag",
									"source": 6,
									"value": "209"
								},
								{
									"begin": 10665,
									"end": 10697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10653,
									"end": 10697,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10653,
									"end": 10697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "tag",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 9995,
									"end": 10707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9865,
									"end": 10713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10773,
									"end": 10778,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10964,
									"end": 10972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10954,
									"end": 10994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "211"
								},
								{
									"begin": 10954,
									"end": 10994,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10985,
									"end": 10986,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10976,
									"end": 10986,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10976,
									"end": 10986,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10987,
									"end": 10992,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 10987,
									"end": 10992,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10954,
									"end": 10994,
									"name": "tag",
									"source": 6,
									"value": "211"
								},
								{
									"begin": 10954,
									"end": 10994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11013,
									"end": 11017,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11003,
									"end": 11039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "212"
								},
								{
									"begin": 11003,
									"end": 11039,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11030,
									"end": 11031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11021,
									"end": 11031,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11021,
									"end": 11031,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11032,
									"end": 11037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 11032,
									"end": 11037,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11003,
									"end": 11039,
									"name": "tag",
									"source": 6,
									"value": "212"
								},
								{
									"begin": 11003,
									"end": 11039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11099,
									"end": 11103,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11147,
									"end": 11148,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 11142,
									"end": 11169,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11142,
									"end": 11169,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 11142,
									"end": 11169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "214"
								},
								{
									"begin": 11142,
									"end": 11169,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11183,
									"end": 11184,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 11178,
									"end": 11369,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11178,
									"end": 11369,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 11178,
									"end": 11369,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "215"
								},
								{
									"begin": 11178,
									"end": 11369,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11092,
									"end": 11369,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "213"
								},
								{
									"begin": 11092,
									"end": 11369,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11142,
									"end": 11169,
									"name": "tag",
									"source": 6,
									"value": "214"
								},
								{
									"begin": 11142,
									"end": 11169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11160,
									"end": 11161,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 11151,
									"end": 11161,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11151,
									"end": 11161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11162,
									"end": 11167,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11162,
									"end": 11167,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 11162,
									"end": 11167,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11178,
									"end": 11369,
									"name": "tag",
									"source": 6,
									"value": "215"
								},
								{
									"begin": 11178,
									"end": 11369,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11223,
									"end": 11226,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 11213,
									"end": 11221,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11210,
									"end": 11227,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11207,
									"end": 11250,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11207,
									"end": 11250,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "216"
								},
								{
									"begin": 11207,
									"end": 11250,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11230,
									"end": 11248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "217"
								},
								{
									"begin": 11230,
									"end": 11248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 11230,
									"end": 11248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11230,
									"end": 11248,
									"name": "tag",
									"source": 6,
									"value": "217"
								},
								{
									"begin": 11230,
									"end": 11248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11207,
									"end": 11250,
									"name": "tag",
									"source": 6,
									"value": "216"
								},
								{
									"begin": 11207,
									"end": 11250,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11279,
									"end": 11287,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11276,
									"end": 11277,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 11272,
									"end": 11288,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 11263,
									"end": 11288,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11263,
									"end": 11288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11314,
									"end": 11317,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11307,
									"end": 11312,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11301,
									"end": 11341,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11301,
									"end": 11341,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "218"
								},
								{
									"begin": 11301,
									"end": 11341,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11321,
									"end": 11339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "219"
								},
								{
									"begin": 11321,
									"end": 11339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 11321,
									"end": 11339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11321,
									"end": 11339,
									"name": "tag",
									"source": 6,
									"value": "219"
								},
								{
									"begin": 11321,
									"end": 11339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11301,
									"end": 11341,
									"name": "tag",
									"source": 6,
									"value": "218"
								},
								{
									"begin": 11301,
									"end": 11341,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11354,
									"end": 11359,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11354,
									"end": 11359,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 11354,
									"end": 11359,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11092,
									"end": 11369,
									"name": "tag",
									"source": 6,
									"value": "213"
								},
								{
									"begin": 11092,
									"end": 11369,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11092,
									"end": 11369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11478,
									"end": 11480,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 11468,
									"end": 11476,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11465,
									"end": 11481,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11459,
									"end": 11462,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 11453,
									"end": 11457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11450,
									"end": 11463,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11446,
									"end": 11482,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 11428,
									"end": 11430,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 11418,
									"end": 11426,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11415,
									"end": 11431,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11410,
									"end": 11412,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 11404,
									"end": 11408,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11401,
									"end": 11413,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11397,
									"end": 11432,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 11381,
									"end": 11492,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 11378,
									"end": 11624,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11378,
									"end": 11624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "220"
								},
								{
									"begin": 11378,
									"end": 11624,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11534,
									"end": 11542,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11528,
									"end": 11532,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11524,
									"end": 11543,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 11515,
									"end": 11543,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11515,
									"end": 11543,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11569,
									"end": 11572,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11562,
									"end": 11567,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11559,
									"end": 11573,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11556,
									"end": 11596,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11556,
									"end": 11596,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "221"
								},
								{
									"begin": 11556,
									"end": 11596,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11576,
									"end": 11594,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "222"
								},
								{
									"begin": 11576,
									"end": 11594,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 11576,
									"end": 11594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11576,
									"end": 11594,
									"name": "tag",
									"source": 6,
									"value": "222"
								},
								{
									"begin": 11576,
									"end": 11594,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11556,
									"end": 11596,
									"name": "tag",
									"source": 6,
									"value": "221"
								},
								{
									"begin": 11556,
									"end": 11596,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11609,
									"end": 11614,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 11609,
									"end": 11614,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11378,
									"end": 11624,
									"name": "tag",
									"source": 6,
									"value": "220"
								},
								{
									"begin": 11378,
									"end": 11624,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11649,
									"end": 11691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "223"
								},
								{
									"begin": 11687,
									"end": 11690,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11677,
									"end": 11685,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11671,
									"end": 11675,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11668,
									"end": 11669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 11649,
									"end": 11691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 11649,
									"end": 11691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11649,
									"end": 11691,
									"name": "tag",
									"source": 6,
									"value": "223"
								},
								{
									"begin": 11649,
									"end": 11691,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11634,
									"end": 11691,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11634,
									"end": 11691,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11634,
									"end": 11691,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11634,
									"end": 11691,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11723,
									"end": 11727,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11718,
									"end": 11721,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11714,
									"end": 11728,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 11707,
									"end": 11712,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11704,
									"end": 11729,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11701,
									"end": 11752,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11701,
									"end": 11752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "224"
								},
								{
									"begin": 11701,
									"end": 11752,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11732,
									"end": 11750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "225"
								},
								{
									"begin": 11732,
									"end": 11750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 11732,
									"end": 11750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11732,
									"end": 11750,
									"name": "tag",
									"source": 6,
									"value": "225"
								},
								{
									"begin": 11732,
									"end": 11750,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11701,
									"end": 11752,
									"name": "tag",
									"source": 6,
									"value": "224"
								},
								{
									"begin": 11701,
									"end": 11752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11781,
									"end": 11785,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11774,
									"end": 11779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11770,
									"end": 11786,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 11761,
									"end": 11786,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11761,
									"end": 11786,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "tag",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10719,
									"end": 11792,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11798,
									"end": 11884,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 11798,
									"end": 11884,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11833,
									"end": 11840,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11873,
									"end": 11877,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 11866,
									"end": 11871,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11862,
									"end": 11878,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 11851,
									"end": 11878,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11851,
									"end": 11878,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11798,
									"end": 11884,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11798,
									"end": 11884,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11798,
									"end": 11884,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11798,
									"end": 11884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11890,
									"end": 12171,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 11890,
									"end": 12171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11948,
									"end": 11953,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11972,
									"end": 11995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "228"
								},
								{
									"begin": 11990,
									"end": 11994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11972,
									"end": 11995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 11972,
									"end": 11995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11972,
									"end": 11995,
									"name": "tag",
									"source": 6,
									"value": "228"
								},
								{
									"begin": 11972,
									"end": 11995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11964,
									"end": 11995,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11964,
									"end": 11995,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12016,
									"end": 12041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "229"
								},
								{
									"begin": 12032,
									"end": 12040,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12016,
									"end": 12041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 12016,
									"end": 12041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12016,
									"end": 12041,
									"name": "tag",
									"source": 6,
									"value": "229"
								},
								{
									"begin": 12016,
									"end": 12041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12004,
									"end": 12041,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12004,
									"end": 12041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12060,
									"end": 12164,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "230"
								},
								{
									"begin": 12097,
									"end": 12163,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12087,
									"end": 12095,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 12081,
									"end": 12085,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 12060,
									"end": 12164,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 12060,
									"end": 12164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12060,
									"end": 12164,
									"name": "tag",
									"source": 6,
									"value": "230"
								},
								{
									"begin": 12060,
									"end": 12164,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12051,
									"end": 12164,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12051,
									"end": 12164,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11890,
									"end": 12171,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11890,
									"end": 12171,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11890,
									"end": 12171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11890,
									"end": 12171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11890,
									"end": 12171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12177,
									"end": 12587,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 12177,
									"end": 12587,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12217,
									"end": 12224,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12240,
									"end": 12260,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "232"
								},
								{
									"begin": 12258,
									"end": 12259,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12240,
									"end": 12260,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 12240,
									"end": 12260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12240,
									"end": 12260,
									"name": "tag",
									"source": 6,
									"value": "232"
								},
								{
									"begin": 12240,
									"end": 12260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12235,
									"end": 12260,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12235,
									"end": 12260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12274,
									"end": 12294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "233"
								},
								{
									"begin": 12292,
									"end": 12293,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12274,
									"end": 12294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 12274,
									"end": 12294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12274,
									"end": 12294,
									"name": "tag",
									"source": 6,
									"value": "233"
								},
								{
									"begin": 12274,
									"end": 12294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12269,
									"end": 12294,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12269,
									"end": 12294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12329,
									"end": 12330,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12326,
									"end": 12327,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12322,
									"end": 12331,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 12351,
									"end": 12381,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "234"
								},
								{
									"begin": 12369,
									"end": 12380,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 12351,
									"end": 12381,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 12351,
									"end": 12381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12351,
									"end": 12381,
									"name": "tag",
									"source": 6,
									"value": "234"
								},
								{
									"begin": 12351,
									"end": 12381,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12340,
									"end": 12381,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12340,
									"end": 12381,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12530,
									"end": 12531,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12521,
									"end": 12528,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12517,
									"end": 12532,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 12514,
									"end": 12515,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 12511,
									"end": 12533,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 12491,
									"end": 12492,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12484,
									"end": 12493,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 12464,
									"end": 12547,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 12441,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "235"
								},
								{
									"begin": 12441,
									"end": 12580,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 12560,
									"end": 12578,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "236"
								},
								{
									"begin": 12560,
									"end": 12578,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 12560,
									"end": 12578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12560,
									"end": 12578,
									"name": "tag",
									"source": 6,
									"value": "236"
								},
								{
									"begin": 12560,
									"end": 12578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12441,
									"end": 12580,
									"name": "tag",
									"source": 6,
									"value": "235"
								},
								{
									"begin": 12441,
									"end": 12580,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12225,
									"end": 12587,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12177,
									"end": 12587,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12177,
									"end": 12587,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12177,
									"end": 12587,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12177,
									"end": 12587,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12177,
									"end": 12587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12593,
									"end": 12711,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 12593,
									"end": 12711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12680,
									"end": 12704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "238"
								},
								{
									"begin": 12698,
									"end": 12703,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 12680,
									"end": 12704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 12680,
									"end": 12704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12680,
									"end": 12704,
									"name": "tag",
									"source": 6,
									"value": "238"
								},
								{
									"begin": 12680,
									"end": 12704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12675,
									"end": 12678,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12668,
									"end": 12705,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 12593,
									"end": 12711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12593,
									"end": 12711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12593,
									"end": 12711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12717,
									"end": 12835,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 12717,
									"end": 12835,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12804,
									"end": 12828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "240"
								},
								{
									"begin": 12822,
									"end": 12827,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 12804,
									"end": 12828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 12804,
									"end": 12828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12804,
									"end": 12828,
									"name": "tag",
									"source": 6,
									"value": "240"
								},
								{
									"begin": 12804,
									"end": 12828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12799,
									"end": 12802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12792,
									"end": 12829,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 12717,
									"end": 12835,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12717,
									"end": 12835,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12717,
									"end": 12835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12841,
									"end": 13173,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 12841,
									"end": 13173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12962,
									"end": 12966,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13000,
									"end": 13002,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 12989,
									"end": 12998,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12985,
									"end": 13003,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12977,
									"end": 13003,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12977,
									"end": 13003,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13013,
									"end": 13084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "242"
								},
								{
									"begin": 13081,
									"end": 13082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13070,
									"end": 13079,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13066,
									"end": 13083,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13057,
									"end": 13063,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 13013,
									"end": 13084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 13013,
									"end": 13084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13013,
									"end": 13084,
									"name": "tag",
									"source": 6,
									"value": "242"
								},
								{
									"begin": 13013,
									"end": 13084,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13094,
									"end": 13166,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "243"
								},
								{
									"begin": 13162,
									"end": 13164,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 13151,
									"end": 13160,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13147,
									"end": 13165,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13138,
									"end": 13144,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 13094,
									"end": 13166,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 13094,
									"end": 13166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13094,
									"end": 13166,
									"name": "tag",
									"source": 6,
									"value": "243"
								},
								{
									"begin": 13094,
									"end": 13166,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12841,
									"end": 13173,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 12841,
									"end": 13173,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12841,
									"end": 13173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12841,
									"end": 13173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12841,
									"end": 13173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12841,
									"end": 13173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13179,
									"end": 13401,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 13179,
									"end": 13401,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13272,
									"end": 13276,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13310,
									"end": 13312,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 13299,
									"end": 13308,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13295,
									"end": 13313,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13287,
									"end": 13313,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 13287,
									"end": 13313,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13323,
									"end": 13394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "245"
								},
								{
									"begin": 13391,
									"end": 13392,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13380,
									"end": 13389,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13376,
									"end": 13393,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13367,
									"end": 13373,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 13323,
									"end": 13394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 13323,
									"end": 13394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13323,
									"end": 13394,
									"name": "tag",
									"source": 6,
									"value": "245"
								},
								{
									"begin": 13323,
									"end": 13394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13179,
									"end": 13401,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 13179,
									"end": 13401,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 13179,
									"end": 13401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13179,
									"end": 13401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13179,
									"end": 13401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13407,
									"end": 13598,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 13407,
									"end": 13598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13447,
									"end": 13450,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13466,
									"end": 13486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "247"
								},
								{
									"begin": 13484,
									"end": 13485,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13466,
									"end": 13486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 13466,
									"end": 13486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13466,
									"end": 13486,
									"name": "tag",
									"source": 6,
									"value": "247"
								},
								{
									"begin": 13466,
									"end": 13486,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13461,
									"end": 13486,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 13461,
									"end": 13486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13500,
									"end": 13520,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "248"
								},
								{
									"begin": 13518,
									"end": 13519,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13500,
									"end": 13520,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 13500,
									"end": 13520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13500,
									"end": 13520,
									"name": "tag",
									"source": 6,
									"value": "248"
								},
								{
									"begin": 13500,
									"end": 13520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13495,
									"end": 13520,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 13495,
									"end": 13520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13543,
									"end": 13544,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13540,
									"end": 13541,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13536,
									"end": 13545,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13529,
									"end": 13545,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 13529,
									"end": 13545,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13564,
									"end": 13567,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 13561,
									"end": 13562,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13558,
									"end": 13568,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 13555,
									"end": 13591,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 13555,
									"end": 13591,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "249"
								},
								{
									"begin": 13555,
									"end": 13591,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 13571,
									"end": 13589,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "250"
								},
								{
									"begin": 13571,
									"end": 13589,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 13571,
									"end": 13589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13571,
									"end": 13589,
									"name": "tag",
									"source": 6,
									"value": "250"
								},
								{
									"begin": 13571,
									"end": 13589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13555,
									"end": 13591,
									"name": "tag",
									"source": 6,
									"value": "249"
								},
								{
									"begin": 13555,
									"end": 13591,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13407,
									"end": 13598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 13407,
									"end": 13598,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 13407,
									"end": 13598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13407,
									"end": 13598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13407,
									"end": 13598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13753,
									"end": 13757,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13791,
									"end": 13793,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 13780,
									"end": 13789,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13776,
									"end": 13794,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13768,
									"end": 13794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 13768,
									"end": 13794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13804,
									"end": 13875,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "252"
								},
								{
									"begin": 13872,
									"end": 13873,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13861,
									"end": 13870,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13857,
									"end": 13874,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13848,
									"end": 13854,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 13804,
									"end": 13875,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 13804,
									"end": 13875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13804,
									"end": 13875,
									"name": "tag",
									"source": 6,
									"value": "252"
								},
								{
									"begin": 13804,
									"end": 13875,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13885,
									"end": 13957,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "253"
								},
								{
									"begin": 13953,
									"end": 13955,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 13942,
									"end": 13951,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13938,
									"end": 13956,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13929,
									"end": 13935,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 13885,
									"end": 13957,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 13885,
									"end": 13957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13885,
									"end": 13957,
									"name": "tag",
									"source": 6,
									"value": "253"
								},
								{
									"begin": 13885,
									"end": 13957,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13967,
									"end": 14039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "254"
								},
								{
									"begin": 14035,
									"end": 14037,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 14024,
									"end": 14033,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 14020,
									"end": 14038,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 14011,
									"end": 14017,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 13967,
									"end": 14039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 13967,
									"end": 14039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13967,
									"end": 14039,
									"name": "tag",
									"source": 6,
									"value": "254"
								},
								{
									"begin": 13967,
									"end": 14039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13604,
									"end": 14046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14052,
									"end": 14274,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 14052,
									"end": 14274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14145,
									"end": 14149,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 14183,
									"end": 14185,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 14172,
									"end": 14181,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 14168,
									"end": 14186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 14160,
									"end": 14186,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14160,
									"end": 14186,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14196,
									"end": 14267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "256"
								},
								{
									"begin": 14264,
									"end": 14265,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 14253,
									"end": 14262,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 14249,
									"end": 14266,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 14240,
									"end": 14246,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 14196,
									"end": 14267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 14196,
									"end": 14267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14196,
									"end": 14267,
									"name": "tag",
									"source": 6,
									"value": "256"
								},
								{
									"begin": 14196,
									"end": 14267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14052,
									"end": 14274,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 14052,
									"end": 14274,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14052,
									"end": 14274,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14052,
									"end": 14274,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14052,
									"end": 14274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 1165,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c560356188f46c95328b2f60cabf4b46ba57b35e99f5e118d7d3478900d5acc64736f6c634300081a0033",
									".code": [
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 1165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 931,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 244,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 244,
											"end": 264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 244,
											"end": 264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 713,
											"end": 718,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 713,
											"end": 718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 713,
											"end": 718,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 713,
											"end": 718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 713,
											"end": 718,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 713,
											"end": 718,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 713,
											"end": 718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 713,
											"end": 718,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 713,
											"end": 718,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 718,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 699,
											"end": 718,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 699,
											"end": 709,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 699,
											"end": 718,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 699,
											"end": 718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 691,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 691,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 691,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1006,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 842,
											"end": 846,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 842,
											"end": 851,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 834,
											"end": 889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 834,
											"end": 889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1082,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1049,
											"end": 1056,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1071,
											"end": 1079,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1071,
											"end": 1081,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1081,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1071,
											"end": 1081,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1067,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1065,
											"end": 1081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1065,
											"end": 1081,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1081,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1065,
											"end": 1081,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1081,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1065,
											"end": 1081,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1062,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1058,
											"end": 1081,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1081,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1058,
											"end": 1081,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1081,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1058,
											"end": 1081,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1043,
											"end": 1082,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1082,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1043,
											"end": 1082,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "45704679A40D4B2FFE28AA7324F021775FAACA4D40917FEF2CDF38E53FD90A24"
										},
										{
											"begin": 1140,
											"end": 1147,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1153,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1130,
											"end": 1154,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 743,
											"end": 744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 244,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 244,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6584,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6425,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6576,
											"name": "PUSH",
											"source": 6,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6955,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6590,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6817,
											"end": 6818,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6753,
											"end": 6819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6819,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6753,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6917,
											"end": 6920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6828,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 6948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6941,
											"end": 6944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7380,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6961,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7154,
											"end": 7163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7212,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7224,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7178,
											"end": 7225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7242,
											"end": 7373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7373,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7242,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7386,
											"end": 7606,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7386,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 7560,
											"name": "PUSH",
											"source": 6,
											"value": "546865207175616E746974792063616E6E6F7420626520746F6F20736D616C6C"
										},
										{
											"begin": 7522,
											"end": 7523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7510,
											"end": 7524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7503,
											"end": 7561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7598,
											"name": "PUSH",
											"source": 6,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7590,
											"end": 7592,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7599,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7386,
											"end": 7606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7386,
											"end": 7606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7839,
											"end": 7841,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 7834,
											"end": 7837,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7775,
											"end": 7842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7940,
											"end": 7943,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7851,
											"end": 7944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7969,
											"end": 7971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7964,
											"end": 7967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8150,
											"end": 8154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8190,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8231,
											"end": 8235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8391,
											"end": 8395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8265,
											"end": 8396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8409,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8409,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8534,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8454,
											"end": 8455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8535,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8558,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8544,
											"end": 8559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8578,
											"end": 8582,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8575,
											"end": 8576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8583,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8697,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8595,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8637,
											"end": 8645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8677,
											"end": 8690,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8764,
											"end": 8769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8786,
											"end": 8801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8786,
											"end": 8801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8855,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8844,
											"end": 8852,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8856,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8949,
											"end": 8953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8944,
											"end": 8947,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 8954,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 8955,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8928,
											"end": 8978,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8928,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8928,
											"end": 8978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8958,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8928,
											"end": 8978,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8928,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9008,
											"end": 9009,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8998,
											"end": 9006,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9442,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8991,
											"end": 9442,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9412,
											"end": 9428,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9403,
											"end": 9428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9403,
											"end": 9428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9442,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8991,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9473,
											"end": 9477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9478,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9455,
											"end": 9478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9455,
											"end": 9478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 9526,
											"end": 9534,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9503,
											"end": 9535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9535,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 9503,
											"end": 9535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9535,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8833,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 9551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 9792,
											"end": 9832,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9823,
											"end": 9824,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9814,
											"end": 9824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 9825,
											"end": 9830,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9832,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 9792,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 9841,
											"end": 9877,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9868,
											"end": 9869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9870,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 9870,
											"end": 9875,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9877,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 9841,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9937,
											"end": 9941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9985,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10016,
											"end": 10207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10016,
											"end": 10207,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10016,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 10016,
											"end": 10207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 9930,
											"end": 10207,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 9999,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 9999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 9999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10000,
											"end": 10005,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10016,
											"end": 10207,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 10016,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10064,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10051,
											"end": 10059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10048,
											"end": 10065,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10088,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 10045,
											"end": 10088,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10068,
											"end": 10086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10088,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 10045,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10117,
											"end": 10125,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10110,
											"end": 10126,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10101,
											"end": 10126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10101,
											"end": 10126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10142,
											"end": 10156,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10179,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 10139,
											"end": 10179,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10159,
											"end": 10177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10139,
											"end": 10179,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 10139,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10192,
											"end": 10197,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 10207,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 9930,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 10207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10316,
											"end": 10318,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10306,
											"end": 10314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10303,
											"end": 10319,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10297,
											"end": 10300,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 10291,
											"end": 10295,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10301,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10320,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10266,
											"end": 10268,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 10256,
											"end": 10264,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10269,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10250,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 10242,
											"end": 10246,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10239,
											"end": 10251,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10330,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 10216,
											"end": 10462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10372,
											"end": 10380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10366,
											"end": 10370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10381,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10353,
											"end": 10381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10353,
											"end": 10381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10400,
											"end": 10405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10397,
											"end": 10411,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10394,
											"end": 10434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10394,
											"end": 10434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 10394,
											"end": 10434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 10414,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10414,
											"end": 10432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10432,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 10414,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10394,
											"end": 10434,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 10394,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10447,
											"end": 10452,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10462,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 10216,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 10525,
											"end": 10528,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10523,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10509,
											"end": 10513,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10487,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 10487,
											"end": 10529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10529,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 10487,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10529,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10561,
											"end": 10565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10556,
											"end": 10559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10552,
											"end": 10566,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10545,
											"end": 10550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10542,
											"end": 10567,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 10539,
											"end": 10590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10570,
											"end": 10588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10590,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 10539,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10619,
											"end": 10623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10612,
											"end": 10617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10608,
											"end": 10624,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 10630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10917,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10636,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10694,
											"end": 10699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10718,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10736,
											"end": 10740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10718,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10718,
											"end": 10741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10718,
											"end": 10741,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10718,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10778,
											"end": 10786,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10762,
											"end": 10787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10787,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10762,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10843,
											"end": 10909,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10833,
											"end": 10841,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 10831,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 10806,
											"end": 10910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10910,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10806,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11333,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10923,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 11006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 11004,
											"end": 11005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10986,
											"end": 11006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10986,
											"end": 11006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10986,
											"end": 11006,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10986,
											"end": 11006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 11038,
											"end": 11039,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 11020,
											"end": 11040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11040,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 11020,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11075,
											"end": 11076,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11077,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11097,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 11115,
											"end": 11126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11097,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 11097,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11097,
											"end": 11127,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 11097,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11263,
											"end": 11278,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11260,
											"end": 11261,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11257,
											"end": 11279,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11238,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11239,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11210,
											"end": 11293,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 11187,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 11187,
											"end": 11326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11306,
											"end": 11324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11187,
											"end": 11326,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 11187,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10971,
											"end": 11333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 11333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11671,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 11339,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11475,
											"end": 11501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11475,
											"end": 11501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 11579,
											"end": 11580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11568,
											"end": 11577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11564,
											"end": 11581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11555,
											"end": 11561,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 11511,
											"end": 11582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11582,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 11511,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 11660,
											"end": 11662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11649,
											"end": 11658,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11645,
											"end": 11663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11642,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11592,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11664,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 11592,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11826,
											"end": 11830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11864,
											"end": 11866,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11853,
											"end": 11862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 11945,
											"end": 11946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11934,
											"end": 11943,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11921,
											"end": 11927,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 11877,
											"end": 11948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 11948,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 11877,
											"end": 11948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11958,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 12026,
											"end": 12028,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12024,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12011,
											"end": 12029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12002,
											"end": 12008,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11958,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11958,
											"end": 12030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11958,
											"end": 12030,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 11958,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 12108,
											"end": 12110,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12097,
											"end": 12106,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12084,
											"end": 12090,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 12040,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12112,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 12040,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 12119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12125,
											"end": 12316,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 12125,
											"end": 12316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12165,
											"end": 12168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 12202,
											"end": 12203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 12184,
											"end": 12204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12179,
											"end": 12204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12179,
											"end": 12204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 12236,
											"end": 12237,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 12218,
											"end": 12238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12213,
											"end": 12238,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12213,
											"end": 12238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12258,
											"end": 12259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12254,
											"end": 12263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12282,
											"end": 12285,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12279,
											"end": 12280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12286,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12273,
											"end": 12309,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12273,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 12273,
											"end": 12309,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12289,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 12289,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 12289,
											"end": 12307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12289,
											"end": 12307,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 12289,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12273,
											"end": 12309,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 12273,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12125,
											"end": 12316,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12125,
											"end": 12316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12125,
											"end": 12316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12125,
											"end": 12316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12125,
											"end": 12316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/coct/coctToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_toAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"mintEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/coct/coctToken.sol\":\"CoctToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/coct/coctToken.sol\":{\"keccak256\":\"0x3efc564e0c9cd3245c44b20e20d9f2a892f69f3518d000cbba67959c8933c24a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3ce15588ebfa29fab049e97ea56ee6c1dfc1caeb2bc465f9d0385183bcc192\",\"dweb:/ipfs/QmdgpMFCNkspitPukVmc8eSSy3Lo3TzR6T5Y2Y4i6SjYKk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/coct/coctToken.sol:CoctToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/coct/coctToken.sol:CoctToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/coct/coctToken.sol:CoctToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/coct/coctToken.sol:CoctToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/coct/coctToken.sol:CoctToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "contracts/coct/coctToken.sol:CoctToken",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/coct/coctToken.sol": {
				"ast": {
					"absolutePath": "contracts/coct/coctToken.sol",
					"exportedSymbols": {
						"CoctToken": [
							888
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 889,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 889,
							"sourceUnit": 652,
							"src": "110:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"212:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "212:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "212:5:5"
								}
							],
							"canonicalName": "CoctToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 888,
							"linearizedBaseContracts": [
								888,
								651,
								41,
								755,
								729,
								785
							],
							"name": "CoctToken",
							"nameLocation": "199:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 792,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "259:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 888,
									"src": "244:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "45704679a40d4b2ffe28aa7324f021775faaca4d40917fef2cdf38e53fd90a24",
									"id": 798,
									"name": "mintEvent",
									"nameLocation": "297:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toAddr",
												"nameLocation": "315:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "307:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"indexed": false,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "332:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "324:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "324:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:31:5"
									},
									"src": "291:47:5"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "473:153:5",
										"statements": [
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "484:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 814,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "492:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "496:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "492:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "484:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "484:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "519:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 820,
																"name": "_num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "529:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "536:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 822,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "542:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "542:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "536:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "529:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "513:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "513:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "513:40:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 829,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "603:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "_num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "613:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 828,
														"name": "mintEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "593:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "EmitStatement",
												"src": "588:30:5"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 809,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 800,
													"src": "459:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 810,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 802,
													"src": "465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 811,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 808,
												"name": "ERC20",
												"nameLocations": [
													"453:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "453:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "453:20:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "392:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "378:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "413:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "399:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "430:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "422:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "448:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "440:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:76:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:0:5"
									},
									"scope": 888,
									"src": "366:260:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "680:72:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 837,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "699:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "703:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "699:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 839,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "713:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "699:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "720:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "691:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "691:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "691:41:5"
											},
											{
												"id": 844,
												"nodeType": "PlaceholderStatement",
												"src": "743:1:5"
											}
										]
									},
									"id": 846,
									"name": "onlyOwner",
									"nameLocation": "668:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:2:5"
									},
									"src": "659:93:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "823:86:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "_num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "842:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "850:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "842:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865207175616e746974792063616e6e6f7420626520746f6f20736d616c6c2e",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "853:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7",
																"typeString": "literal_string \"The quantity cannot be too small.\""
															},
															"value": "The quantity cannot be too small."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_131eb79a1352db6706b3f03b51765ecbea208e281993792f86a93eb30883e1c7",
																"typeString": "literal_string \"The quantity cannot be too small.\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "834:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "834:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "834:55:5"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "900:1:5"
											}
										]
									},
									"id": 859,
									"name": "numCheck",
									"nameLocation": "801:8:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "818:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "810:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:14:5"
									},
									"src": "792:117:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "1008:154:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "_toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1049:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 873,
																"name": "_num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "1058:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1065:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 875,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "1071:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1071:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1065:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1058:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1043:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1043:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "1043:39:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 882,
															"name": "_toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1140:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "_num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "1149:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "mintEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1130:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "EmitStatement",
												"src": "1125:29:5"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 866,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 865,
												"name": "onlyOwner",
												"nameLocations": [
													"983:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 846,
												"src": "983:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "983:9:5"
										},
										{
											"arguments": [
												{
													"id": 868,
													"name": "_num",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 863,
													"src": "1002:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 869,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 867,
												"name": "numCheck",
												"nameLocations": [
													"993:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "993:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "993:14:5"
										}
									],
									"name": "mint",
									"nameLocation": "940:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "_toAddr",
												"nameLocation": "953:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "945:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "970:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "962:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:31:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:5"
									},
									"scope": 888,
									"src": "931:231:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 889,
							"src": "190:975:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								798
							]
						}
					],
					"src": "33:1132:5"
				},
				"id": 5
			}
		}
	}
}